<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>DarkSoulsDemo（九）轻攻击与重攻击</title>
      <link href="/2020/06/23/DarkSoulsDemo%EF%BC%88%E4%B9%9D%EF%BC%89%E8%BD%BB%E6%94%BB%E5%87%BB%E4%B8%8E%E9%87%8D%E6%94%BB%E5%87%BB/"/>
      <url>/2020/06/23/DarkSoulsDemo%EF%BC%88%E4%B9%9D%EF%BC%89%E8%BD%BB%E6%94%BB%E5%87%BB%E4%B8%8E%E9%87%8D%E6%94%BB%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<p>关键词：动画层、脚本控制</p><a id="more"></a><p>本文出自：<a href="https://www.youtube.com/watch?v=cOGep0Vlayk&t=103s" target="_blank" rel="noopener">Create DARK SOULS in Unity ► EP. 9 LIGHT &amp; HEAVY ATTACKS</a></p><p>用到的动画资源：<a href="https://assetstore.unity.com/packages/3d/animations/dynamic-sword-animset-44329" target="_blank" rel="noopener">Dynamic Sword Animset</a> 中的R_Attack_05、R_Attack_06。</p><h2 id="一、添加动画层"><a href="#一、添加动画层" class="headerlink" title="一、添加动画层"></a>一、添加动画层</h2><p>打开Hunmanoid动画控制器，新建一个动画层，取名Override，将其Weight设置为1。在Override层新建一个Empty状态，将Base Layer里的Step_Back、Rolling、Land、Falling状态复制到Override层里并将前三个状态都指向Empty。</p><p><img src="/2020/06/23/DarkSoulsDemo%EF%BC%88%E4%B9%9D%EF%BC%89%E8%BD%BB%E6%94%BB%E5%87%BB%E4%B8%8E%E9%87%8D%E6%94%BB%E5%87%BB/image-20200623120508710.png" alt="image-20200623120508710"></p><p><img src="/2020/06/23/DarkSoulsDemo%EF%BC%88%E4%B9%9D%EF%BC%89%E8%BD%BB%E6%94%BB%E5%87%BB%E4%B8%8E%E9%87%8D%E6%94%BB%E5%87%BB/image-20200623112723723.png" alt="image-20200623112723723"></p><h2 id="二、重写重置IsInteracting方法"><a href="#二、重写重置IsInteracting方法" class="headerlink" title="二、重写重置IsInteracting方法"></a>二、重写重置IsInteracting方法</h2><p>打开ResetIsInteracting.cs，修改类名并修改文件名为ResetAnimatorBool.cs。</p><p><img src="/2020/06/23/DarkSoulsDemo%EF%BC%88%E4%B9%9D%EF%BC%89%E8%BD%BB%E6%94%BB%E5%87%BB%E4%B8%8E%E9%87%8D%E6%94%BB%E5%87%BB/image-20200623113252898.png" alt="image-20200623113252898"></p><p><img src="/2020/06/23/DarkSoulsDemo%EF%BC%88%E4%B9%9D%EF%BC%89%E8%BD%BB%E6%94%BB%E5%87%BB%E4%B8%8E%E9%87%8D%E6%94%BB%E5%87%BB/image-20200623113352586.png" alt="image-20200623113352586"></p><p>将Override层里的Step_Back、Rolling、Land状态的Behaviour删掉</p><p><img src="/2020/06/23/DarkSoulsDemo%EF%BC%88%E4%B9%9D%EF%BC%89%E8%BD%BB%E6%94%BB%E5%87%BB%E4%B8%8E%E9%87%8D%E6%94%BB%E5%87%BB/image-20200623113818557.png" alt="image-20200623113818557"></p><p>修改ResetAnimatorBool.cs</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ResetAnimatorBool</span> : <span class="title">StateMachineBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> targetBool;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">bool</span> status;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnStateEnter</span>(<span class="params">Animator animator, AnimatorStateInfo stateInfo, <span class="keyword">int</span> layerIndex</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        animator.SetBool(targetBool, status);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>给Empty状态添加Behaviour，并在target Bool里填上IsInteracting，并保持Parameters标签页里的IsInteracting没有勾选</p><p><img src="/2020/06/23/DarkSoulsDemo%EF%BC%88%E4%B9%9D%EF%BC%89%E8%BD%BB%E6%94%BB%E5%87%BB%E4%B8%8E%E9%87%8D%E6%94%BB%E5%87%BB/image-20200623114749954.png" alt="image-20200623114749954"></p><h2 id="三、攻击脚本"><a href="#三、攻击脚本" class="headerlink" title="三、攻击脚本"></a>三、攻击脚本</h2><p>打开WeaponItem.cs，添加以下变量声明</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Header(<span class="meta-string">"One Handed  Attack Animations"</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> OH_Light_Attack_1;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> OH_Heavy_Attack_1;</span><br></pre></td></tr></table></figure><p>新建一个脚本PlayerAttacker.cs，将其挂到Player上</p><p><img src="/2020/06/23/DarkSoulsDemo%EF%BC%88%E4%B9%9D%EF%BC%89%E8%BD%BB%E6%94%BB%E5%87%BB%E4%B8%8E%E9%87%8D%E6%94%BB%E5%87%BB/image-20200623121524802.png" alt="image-20200623121524802"></p><p>编写PlayerAttacker.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerAttacker</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        AnimatorHandler animatorHandler;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            animatorHandler = GetComponentInChildren&lt;AnimatorHandler&gt;();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleLightAttack</span>(<span class="params">WeaponItem weapon</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            animatorHandler.PlayerTargetAnimation(weapon.OH_Light_Attack_1, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleHeavyAttack</span>(<span class="params">WeaponItem weapon</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            animatorHandler.PlayerTargetAnimation(weapon.OH_Heavy_Attack_1, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打开PlayerControls，给Player Action新建Action，起名为RB，设置Action Type为Button。</p><p><img src="/2020/06/23/DarkSoulsDemo%EF%BC%88%E4%B9%9D%EF%BC%89%E8%BD%BB%E6%94%BB%E5%87%BB%E4%B8%8E%E9%87%8D%E6%94%BB%E5%87%BB/image-20200623132853082.png" alt="image-20200623132853082"></p><p>添加键位绑定，给RB绑定键盘E键和Right Shoulder [Gamepad]。新建一个Action，取名RT，添加键位绑定键盘R键和Right Trigger [Gamepad]，关闭PlayerControls点击Save。</p><p><img src="/2020/06/23/DarkSoulsDemo%EF%BC%88%E4%B9%9D%EF%BC%89%E8%BD%BB%E6%94%BB%E5%87%BB%E4%B8%8E%E9%87%8D%E6%94%BB%E5%87%BB/image-20200623133306868.png" alt="image-20200623133306868"></p><p>打开InputHandler.cs，在类的最底下添加方法HandleAttackInput，在TickInput方法里调用并在开头补上变量声明：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">bool</span> rb_Input;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">bool</span> rt_Input;</span><br><span class="line"></span><br><span class="line">PlayerAttacker playerAttacker;</span><br><span class="line">PlayerInventory playerInventory;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    playerAttacker = GetComponent&lt;PlayerAttacker&gt;();</span><br><span class="line">    playerInventory = GetComponent&lt;PlayerInventory&gt;();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TickInput</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    HandleAttackInput(delta);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">HandleAttackInput</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    inputActions.PlayerAction.RB.performed += inputActions =&gt; rb_Input = <span class="literal">true</span>;</span><br><span class="line">    inputActions.PlayerAction.RT.performed += inputActions =&gt; rt_Input = <span class="literal">true</span>; </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (rb_Input)</span><br><span class="line">    &#123;</span><br><span class="line">        playerAttacker.HandleLightAttack(playerInventory.rightWeapon);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (rt_Input)</span><br><span class="line">    &#123;</span><br><span class="line">        playerAttacker.HandleHeavyAttack(playerInventory.rightWeapon);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在PlayerManager.cs里的LateUpdate方法调用输入</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">LateUpdate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    inputHandler.rb_Input = <span class="literal">false</span>;</span><br><span class="line">    inputHandler.rt_Input = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><h2 id="四、添加动画"><a href="#四、添加动画" class="headerlink" title="四、添加动画"></a>四、添加动画</h2><p>将动画片段R_Attack_05、R_Attack_06拖入Animator窗口网格区域，分别重命名为Light_Attack、Heavy_Attack，然后都添加转换关系转向Empty状态。</p><p><img src="/2020/06/23/DarkSoulsDemo%EF%BC%88%E4%B9%9D%EF%BC%89%E8%BD%BB%E6%94%BB%E5%87%BB%E4%B8%8E%E9%87%8D%E6%94%BB%E5%87%BB/image-20200623152256293.png" alt="image-20200623152256293"></p><p>在项目窗口Assets/Data/Iitems/Weapons下选中Sword，在Inspector里给OH_light_Attack填上light_Attack，给OH_Heavy_Attack填上Heavy_Attack。</p><p><img src="/2020/06/23/DarkSoulsDemo%EF%BC%88%E4%B9%9D%EF%BC%89%E8%BD%BB%E6%94%BB%E5%87%BB%E4%B8%8E%E9%87%8D%E6%94%BB%E5%87%BB/image-20200623152927100.png" alt="image-20200623152927100"></p><p>播放游戏，按键盘E/手柄RB触发角色轻攻击，按键盘R/手柄RT触发角色重攻击。</p><p><img src="/2020/06/23/DarkSoulsDemo%EF%BC%88%E4%B9%9D%EF%BC%89%E8%BD%BB%E6%94%BB%E5%87%BB%E4%B8%8E%E9%87%8D%E6%94%BB%E5%87%BB/image-20200623153039247.png" alt="image-20200623153039247"></p><p><img src="/2020/06/23/DarkSoulsDemo%EF%BC%88%E4%B9%9D%EF%BC%89%E8%BD%BB%E6%94%BB%E5%87%BB%E4%B8%8E%E9%87%8D%E6%94%BB%E5%87%BB/image-20200623153048046.png" alt="image-20200623153048046"></p><h2 id="五、脚本汇总"><a href="#五、脚本汇总" class="headerlink" title="五、脚本汇总"></a>五、脚本汇总</h2><h3 id="ResetAnimatorBool-cs"><a href="#ResetAnimatorBool-cs" class="headerlink" title="ResetAnimatorBool.cs"></a>ResetAnimatorBool.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ResetAnimatorBool</span> : <span class="title">StateMachineBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> targetBool;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">bool</span> status;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnStateEnter</span>(<span class="params">Animator animator, AnimatorStateInfo stateInfo, <span class="keyword">int</span> layerIndex</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        animator.SetBool(targetBool, status);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="WeaponItem-cs"><a href="#WeaponItem-cs" class="headerlink" title="WeaponItem.cs"></a>WeaponItem.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">CreateAssetMenu(menuName = <span class="meta-string">"Item/Weapon Item"</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">WeaponItem</span> : <span class="title">Item</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> GameObject modelPrefabs;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> isUnarmed;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"One Handed  Attack Animations"</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> OH_Light_Attack_1;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> OH_Heavy_Attack_1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PlayerAttacker-cs"><a href="#PlayerAttacker-cs" class="headerlink" title="PlayerAttacker.cs"></a>PlayerAttacker.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerAttacker</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        AnimatorHandler animatorHandler;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            animatorHandler = GetComponentInChildren&lt;AnimatorHandler&gt;();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleLightAttack</span>(<span class="params">WeaponItem weapon</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            animatorHandler.PlayerTargetAnimation(weapon.OH_Light_Attack_1, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleHeavyAttack</span>(<span class="params">WeaponItem weapon</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            animatorHandler.PlayerTargetAnimation(weapon.OH_Heavy_Attack_1, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="InputHandler-cs"><a href="#InputHandler-cs" class="headerlink" title="InputHandler.cs"></a>InputHandler.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span> &#123; </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">InputHandler</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> horizontal;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> vertical;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> moveAmount;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> mouseX;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> mouseY;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> b_Input;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> rb_Input;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> rt_Input;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> rollFlag;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> sprintFlag;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> rollInputTimer;</span><br><span class="line"></span><br><span class="line">        PlayerControls inputActions;</span><br><span class="line">        PlayerAttacker playerAttacker;</span><br><span class="line">        PlayerInventory playerInventory;</span><br><span class="line"></span><br><span class="line">        Vector2 movementInput;</span><br><span class="line">        Vector2 cameraInput;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            playerAttacker = GetComponent&lt;PlayerAttacker&gt;();</span><br><span class="line">            playerInventory = GetComponent&lt;PlayerInventory&gt;();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnEnable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span>(inputActions == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                inputActions = <span class="keyword">new</span> PlayerControls();</span><br><span class="line">                inputActions.PlayerMovement.Movement.performed += inputActions =&gt; movementInput = inputActions.ReadValue&lt;Vector2&gt;();</span><br><span class="line">                inputActions.PlayerMovement.Camera.performed += i =&gt; cameraInput = i.ReadValue&lt;Vector2&gt;();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            inputActions.Enable();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDisable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            inputActions.Disable();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TickInput</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MoveInput(delta);</span><br><span class="line">            HandleRollInput(delta);</span><br><span class="line">            HandleAttackInput(delta);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MoveInput</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            horizontal = movementInput.x;</span><br><span class="line">            vertical = movementInput.y;</span><br><span class="line">            moveAmount = Mathf.Clamp01(Mathf.Abs(horizontal) + Mathf.Abs(vertical));</span><br><span class="line">            mouseX = cameraInput.x;</span><br><span class="line">            mouseY = cameraInput.y;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">HandleRollInput</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            b_Input = inputActions.PlayerAction.Roll.phase == UnityEngine.InputSystem.InputActionPhase.Started;</span><br><span class="line">            <span class="keyword">if</span> (b_Input)</span><br><span class="line">            &#123;</span><br><span class="line">                rollInputTimer += delta;</span><br><span class="line">                sprintFlag = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(rollInputTimer &gt; <span class="number">0</span> &amp;&amp; rollInputTimer &lt; <span class="number">0.5f</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    sprintFlag = <span class="literal">false</span>;</span><br><span class="line">                    rollFlag = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                rollInputTimer = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">HandleAttackInput</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            inputActions.PlayerAction.RB.performed += inputActions =&gt; rb_Input = <span class="literal">true</span>;</span><br><span class="line">            inputActions.PlayerAction.RT.performed += inputActions =&gt; rt_Input = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (rb_Input)</span><br><span class="line">            &#123;</span><br><span class="line">                playerAttacker.HandleLightAttack(playerInventory.rightWeapon);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (rt_Input)</span><br><span class="line">            &#123;</span><br><span class="line">                playerAttacker.HandleHeavyAttack(playerInventory.rightWeapon);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PlayerManager-cs"><a href="#PlayerManager-cs" class="headerlink" title="PlayerManager.cs"></a>PlayerManager.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerManager</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        InputHandler inputHandler;</span><br><span class="line">        Animator anim;</span><br><span class="line">        CameraHandler cameraHandler;</span><br><span class="line">        PlayerLocomotion playerLocomotion;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> isInteracting;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Player Flags"</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> isSprinting;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> isInAir;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> isGrounded;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            cameraHandler = CameraHandler.singleton;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            inputHandler = GetComponent&lt;InputHandler&gt;();</span><br><span class="line">            anim = GetComponentInChildren&lt;Animator&gt;();</span><br><span class="line">            playerLocomotion = GetComponent&lt;PlayerLocomotion&gt;();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">float</span> delta = Time.deltaTime;</span><br><span class="line">            isInteracting = anim.GetBool(<span class="string">"IsInteracting"</span>);</span><br><span class="line"></span><br><span class="line">            inputHandler.TickInput(delta);</span><br><span class="line">            playerLocomotion.HandleMovement(delta);</span><br><span class="line">            playerLocomotion.HandleRollingAndSprinting(delta);</span><br><span class="line">            playerLocomotion.HandleFalling(delta, playerLocomotion.moveDirection);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FixedUpdate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">float</span> delta = Time.fixedDeltaTime;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (cameraHandler != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cameraHandler.FollowTarget(delta);</span><br><span class="line">                cameraHandler.HandleCameraRotation(delta, inputHandler.mouseX, inputHandler.mouseY);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">LateUpdate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            inputHandler.rollFlag = <span class="literal">false</span>;</span><br><span class="line">            inputHandler.sprintFlag = <span class="literal">false</span>;</span><br><span class="line">            inputHandler.rb_Input = <span class="literal">false</span>;</span><br><span class="line">            inputHandler.rt_Input = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (isInAir)</span><br><span class="line">            &#123;</span><br><span class="line">                playerLocomotion.inAirTimer = playerLocomotion.inAirTimer + Time.deltaTime;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为动画角色添加刚性道具</title>
      <link href="/2020/06/22/%E4%B8%BA%E5%8A%A8%E7%94%BB%E8%A7%92%E8%89%B2%E6%B7%BB%E5%8A%A0%E5%88%9A%E6%80%A7%E9%81%93%E5%85%B7/"/>
      <url>/2020/06/22/%E4%B8%BA%E5%8A%A8%E7%94%BB%E8%A7%92%E8%89%B2%E6%B7%BB%E5%8A%A0%E5%88%9A%E6%80%A7%E9%81%93%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<p><strong>Unity 2018 Cookbook | Charpter 10 3D Animation | Adding rigid props to animated characters</strong></p><p>如果在建模和制作动画时没有为角色提供足够数量的道具，你可能需要让角色在游戏中收集新的道具。在本文中，我们将学习如何实例化一个GameObject，并将其分配给动画层次结构中的角色。</p><a id="more"></a><p>使用的资源链接：<a href="https://github.com/PacktPublishing/Unity-2018-Cookbook-Third-Edition/tree/master/Chapter10_3DAnimation/10_06_rigid_props" target="_blank" rel="noopener">https://github.com/PacktPublishing/Unity-2018-Cookbook-Third-Edition/tree/master/Chapter10_3DAnimation/10_06_rigid_props</a></p><p>完成后项目资源链接：<a href="https://github.com/dr-matt-smith/unity-cookbook-2018-ch10-06-adding-rigid-props" target="_blank" rel="noopener">https://github.com/dr-matt-smith/unity-cookbook-2018-ch10-06-adding-rigid-props</a></p><h2 id="一、提前确定道具在角色身上的位置"><a href="#一、提前确定道具在角色身上的位置" class="headerlink" title="一、提前确定道具在角色身上的位置"></a>一、提前确定道具在角色身上的位置</h2><p>新建一个3D项目，导入Props.unitypackage和纹理texture_pickupBadge.png，打开场景mecanimPlayground。</p><p>将项目窗口中的badge拖拽到Hierarchy中。将badge拖拽到mixamorig:Spine2的子项（ MsLaser |mixamorig:Hips | mixamorig:Spine |mixamorig:Spine1 | mixamorig:Spine2 ）。</p><p>修改badge的Transform | Position为 ( -0.08, 0, 0.15 )，修改Rotation  ( 0.29, 0.14, -13.29 )，使之别在角色胸前。</p><p><img src="/2020/06/22/%E4%B8%BA%E5%8A%A8%E7%94%BB%E8%A7%92%E8%89%B2%E6%B7%BB%E5%8A%A0%E5%88%9A%E6%80%A7%E9%81%93%E5%85%B7/image-20200622160337275.png" alt="image-20200622160337275"></p><p>记下Position和Rotation的值，然后从场景中删掉badge。</p><h2 id="二、地上待捡道具"><a href="#二、地上待捡道具" class="headerlink" title="二、地上待捡道具"></a>二、地上待捡道具</h2><p>添加一个3D 正方体取名为Cube_pickup，将其Transform | Position设置为( 0, 0.5, 2 )，勾选其Box Collider组件的IsTrigger选项。</p><p>从项目窗口将纹理texture_pickupBadge.png拖拽到Cube_pickup上。</p><p><img src="/2020/06/22/%E4%B8%BA%E5%8A%A8%E7%94%BB%E8%A7%92%E8%89%B2%E6%B7%BB%E5%8A%A0%E5%88%9A%E6%80%A7%E9%81%93%E5%85%B7/image-20200622161455765.png" alt="image-20200622161455765"></p><h2 id="三、编写脚本"><a href="#三、编写脚本" class="headerlink" title="三、编写脚本"></a>三、编写脚本</h2><p>新建脚本PropManager.cs，将PropManager.cs拖拽到Cube_pickup，编写以下代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PropManager</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> GameObject prop;</span><br><span class="line">    <span class="keyword">public</span> Transform targetBone;</span><br><span class="line">    <span class="keyword">public</span> Vector3 positionOffset;</span><br><span class="line">    <span class="keyword">public</span> Vector3 rotationOffset;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">bool</span> destroyTrigger = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnTriggerEnter</span>(<span class="params">Collider collision</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">bool</span> addPropCondition = targetBone.IsChildOf(collision.transform) &amp; !AlreadyHasChilObject();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (addPropCondition)</span><br><span class="line">            addProp();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addProp</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        GameObject newprop;</span><br><span class="line">        newprop = Instantiate(prop, targetBone.position, targetBone.rotation) <span class="keyword">as</span> GameObject;</span><br><span class="line">        newprop.name = prop.name;</span><br><span class="line">        newprop.transform.parent = targetBone;</span><br><span class="line">        newprop.transform.localPosition += positionOffset;</span><br><span class="line">        newprop.transform.localEulerAngles += rotationOffset;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (destroyTrigger)</span><br><span class="line">            Destroy(gameObject);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">bool</span> <span class="title">AlreadyHasChilObject</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">string</span> propName = prop.name;</span><br><span class="line">        <span class="keyword">foreach</span>(Transform child <span class="keyword">in</span> targetBone)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (child.name == propName)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、设置道具管理组件"><a href="#四、设置道具管理组件" class="headerlink" title="四、设置道具管理组件"></a>四、设置道具管理组件</h2><p>保存脚本，回到Unity编辑器，给Cube_pickup|PropManager(Script)设置以下参数：</p><p>Prop : 预制体badge（从项目窗口里拖进来）</p><p>Target Bone : mixamorig:Spine2（Hierarchy下MsLaser的子项） </p><p>Position Offset : ( -0.08, 0, 0.15 )</p><p>Rotation Offset : ( 0.29, 0.14, -13.29 )</p><p>Destroy Trigger : 勾选 ( true )</p><p><img src="/2020/06/22/%E4%B8%BA%E5%8A%A8%E7%94%BB%E8%A7%92%E8%89%B2%E6%B7%BB%E5%8A%A0%E5%88%9A%E6%80%A7%E9%81%93%E5%85%B7/image-20200622164454160.png" alt="image-20200622164454160"></p><p>播放游戏，控制角色走向Cube_pickup，当角色触碰Cube_pickup时，Cube_pickup消失，角色胸前出现badge。</p><p><img src="/2020/06/22/%E4%B8%BA%E5%8A%A8%E7%94%BB%E8%A7%92%E8%89%B2%E6%B7%BB%E5%8A%A0%E5%88%9A%E6%80%A7%E9%81%93%E5%85%B7/image-20200622164221442.png" alt="image-20200622164221442"></p><p><img src="/2020/06/22/%E4%B8%BA%E5%8A%A8%E7%94%BB%E8%A7%92%E8%89%B2%E6%B7%BB%E5%8A%A0%E5%88%9A%E6%80%A7%E9%81%93%E5%85%B7/image-20200622164348607.png" alt="image-20200622164348607"></p><h2 id="五、工作原理"><a href="#五、工作原理" class="headerlink" title="五、工作原理"></a>五、工作原理</h2><p>当角色触发捡起道具时，脚本将配置的预制体实例化一个并附在配置好的角色骨骼上（Target Bone）以及骨骼相对位置上(Position Offset, Rotation Offset)。附上的道具将随着其父物体运动而运动。</p><p>AlreadyHasChildObject()方法用于检测是否已存在同名道具以避免角色身上多出一个。</p><h2 id="六、拓展"><a href="#六、拓展" class="headerlink" title="六、拓展"></a>六、拓展</h2><p>创建一个相似的脚本来移除道具，在OnTriggerEnter方法里调用RemoveProp( )如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">RemoveProp</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">string</span> propName = prop.name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span>(Transform child <span class="keyword">in</span> targetBone)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (child.name == propName)</span><br><span class="line">            Destroy(child.gameObject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改PropManager.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PropManager</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> GameObject prop;</span><br><span class="line">    <span class="keyword">public</span> Transform targetBone;</span><br><span class="line">    <span class="keyword">public</span> Vector3 positionOffset;</span><br><span class="line">    <span class="keyword">public</span> Vector3 rotationOffset;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">bool</span> destroyTrigger = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">bool</span> removePropCondition = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnTriggerEnter</span>(<span class="params">Collider collision</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">bool</span> addPropCondition = targetBone.IsChildOf(collision.transform) &amp; !AlreadyHasChilObject();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (addPropCondition)</span><br><span class="line">            addProp();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (removePropCondition)</span><br><span class="line">            RemoveProp();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addProp</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        GameObject newprop;</span><br><span class="line">        newprop = Instantiate(prop, targetBone.position, targetBone.rotation) <span class="keyword">as</span> GameObject;</span><br><span class="line">        newprop.name = prop.name;</span><br><span class="line">        newprop.transform.parent = targetBone;</span><br><span class="line">        newprop.transform.localPosition += positionOffset;</span><br><span class="line">        newprop.transform.localEulerAngles += rotationOffset;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (destroyTrigger)</span><br><span class="line">            Destroy(gameObject);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">RemoveProp</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">string</span> propName = prop.name;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span>(Transform child <span class="keyword">in</span> targetBone)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (child.name == propName)</span><br><span class="line">                Destroy(child.gameObject);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">bool</span> <span class="title">AlreadyHasChilObject</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">string</span> propName = prop.name;</span><br><span class="line">        <span class="keyword">foreach</span>(Transform child <span class="keyword">in</span> targetBone)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (child.name == propName)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>播放游戏控制角色碰撞Cube_pickup，角色胸前出现badge后，后退到原来位置，勾选Cube_pickup|PropManager（Script）|removePropCondition，再次碰撞Cube_pickup，角色胸前的badge消除。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DarkSoulsDemo（八）武器</title>
      <link href="/2020/06/21/DarkSoulsDemo%EF%BC%88%E5%85%AB%EF%BC%89%E6%AD%A6%E5%99%A8/"/>
      <url>/2020/06/21/DarkSoulsDemo%EF%BC%88%E5%85%AB%EF%BC%89%E6%AD%A6%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>关键词：脚本控制、预制体</p><a id="more"></a><p>本文出自：<a href="https://www.youtube.com/watch?v=7IbW2dxxrf4" target="_blank" rel="noopener">Create DARK SOULS in Unity ► EP. 8 WEAPON ITEMS</a></p><p>文中用到的武器模型SM_Wep_Sword_01和角色模型Chr_FantasyHero_Preset_35出自：<a href="https://assetstore.unity.com/packages/3d/characters/humanoids/polygon-modular-fantasy-hero-characters-143468" target="_blank" rel="noopener">Polygon Fantasy Hero Characters</a></p><h2 id="一、自制Item类、Weapon类的建立与使用"><a href="#一、自制Item类、Weapon类的建立与使用" class="headerlink" title="一、自制Item类、Weapon类的建立与使用"></a>一、自制Item类、Weapon类的建立与使用</h2><p>新建一个脚本Item.cs，编写代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Item</span> : <span class="title">ScriptableObject</span></span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Item Information"</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> Sprite itemIcon;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> itemName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新建一个脚本Weapon.cs，编写代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">CreateAssetMenu(menuName = <span class="meta-string">"Item/Weapon Item"</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">WeaponItem</span> : <span class="title">Item</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> GameObject modelPrefabs;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> isUnarmed;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将武器模型SM_Wep_Sword_01转为预制体并命名为Sword_01，这个过程会弹出一个对话框，选则Original Prefabs，删掉场景中的SM_Wep_Sword_01或Sword_01。再Assets下新建一个Data文件夹，将Prefabs文件夹拖入其中，再Data文件夹下新建一个Items文件夹，再Item文件夹里再建一个Weapons文件夹，再Assets/Data/Items/Weapons下新建一个Weapon Item，取名为Sword。</p><p><img src="/2020/06/21/DarkSoulsDemo%EF%BC%88%E5%85%AB%EF%BC%89%E6%AD%A6%E5%99%A8/image-20200622200205776.png" alt="image-20200622200205776"></p><p>选中Weapon Item Sword，填写物品名称，配置模型预制体</p><p><img src="/2020/06/21/DarkSoulsDemo%EF%BC%88%E5%85%AB%EF%BC%89%E6%AD%A6%E5%99%A8/image-20200622200828590.png" alt="image-20200622200828590"></p><h2 id="二、写脚本管理武器"><a href="#二、写脚本管理武器" class="headerlink" title="二、写脚本管理武器"></a>二、写脚本管理武器</h2><p>在Assets文件夹下新建一个脚本WeaponHolderSlot.cs，编写代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">WeaponHolderSlot</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> Transform parentOverride;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> isLeftHandSlot;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> isRightHandSlot;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> GameObject currentWeaponModel;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UnLoadWeapon</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span>(currentWeaponModel != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                currentWeaponModel.SetActive(<span class="literal">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UnloadWeaponAndDestroy</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (currentWeaponModel != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Destroy(currentWeaponModel);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">LoadWeaponModel</span>(<span class="params">WeaponItem weaponItem</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            UnloadWeaponAndDestroy();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(weaponItem== <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                UnLoadWeapon();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            GameObject model = Instantiate(weaponItem.modelPrefabs) <span class="keyword">as</span> GameObject;</span><br><span class="line">            <span class="keyword">if</span>(model != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(parentOverride != <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    model.transform.parent = parentOverride;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    model.transform.parent = transform;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                model.transform.localPosition = Vector3.zero;</span><br><span class="line">                model.transform.localRotation = Quaternion.identity;</span><br><span class="line">                model.transform.localScale = Vector3.one;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            currentWeaponModel = model;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>回到Unity编辑器，展开场景中角色预制体找到他的右手，挂上WeaponHolderSlot.cs，并做如下配置。</p><p><img src="/2020/06/21/DarkSoulsDemo%EF%BC%88%E5%85%AB%EF%BC%89%E6%AD%A6%E5%99%A8/image-20200622204529289.png" alt="image-20200622204709884"></p><p>给Hand_L新建一个空物体，取名为Left Hand Override，给Hand_L添加组件Weapon Holder Slot (Script)，将Left Hand Override拖拽到Parent Override，勾选Is Left Hand Slot。</p><p><img src="/2020/06/21/DarkSoulsDemo%EF%BC%88%E5%85%AB%EF%BC%89%E6%AD%A6%E5%99%A8/image-20200622205319261.png" alt="image-20200622205319261"></p><p>新建脚本WeaponSlotManager.cs，编写脚本如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">WeaponSlotManager</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        WeaponHolderSlot leftHandSlot;</span><br><span class="line">        WeaponHolderSlot rightHandSlot;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            WeaponHolderSlot[] weaponHolderSlots = GetComponentsInChildren&lt;WeaponHolderSlot&gt;();</span><br><span class="line">            <span class="keyword">foreach</span>(WeaponHolderSlot weaponSlot <span class="keyword">in</span> weaponHolderSlots)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (weaponSlot.isLeftHandSlot)</span><br><span class="line">                &#123;</span><br><span class="line">                    leftHandSlot = weaponSlot;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span> (weaponSlot.isRightHandSlot)</span><br><span class="line">                &#123;</span><br><span class="line">                    rightHandSlot = weaponSlot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">LoadWeaponOnSlot</span>(<span class="params">WeaponItem weaponItem, <span class="keyword">bool</span> isLeft</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (isLeft)</span><br><span class="line">            &#123;</span><br><span class="line">                leftHandSlot.LoadWeaponModel(weaponItem);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                rightHandSlot.LoadWeaponModel(weaponItem);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将WeaponSlotManager.cs作为组件添加到Player预制体上</p><p><img src="/2020/06/21/DarkSoulsDemo%EF%BC%88%E5%85%AB%EF%BC%89%E6%AD%A6%E5%99%A8/image-20200622210431368.png" alt="image-20200622210431368"></p><p>新建脚本PlayerInventory.cs，编写代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerInventory</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        WeaponSlotManager weaponSlotManager;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> WeaponItem rightWeapon;</span><br><span class="line">        <span class="keyword">public</span> WeaponItem leftWeapon;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            weaponSlotManager = GetComponentInChildren&lt;WeaponSlotManager&gt;();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            weaponSlotManager.LoadWeaponOnSlot(rightWeapon, <span class="literal">false</span>);</span><br><span class="line">            weaponSlotManager.LoadWeaponOnSlot(leftWeapon, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将PlayerInventory.cs作为组件添加到Player，配置Right Weapon和Left Weapon</p><p><img src="/2020/06/21/DarkSoulsDemo%EF%BC%88%E5%85%AB%EF%BC%89%E6%AD%A6%E5%99%A8/image-20200622211028449.png" alt="image-20200622211028449"></p><h2 id="三、自制含Pivot的武器预制体"><a href="#三、自制含Pivot的武器预制体" class="headerlink" title="三、自制含Pivot的武器预制体"></a>三、自制含Pivot的武器预制体</h2><p>右键Hierarchy中的预制体Sword创建一个空物体，然后右键预制体Sword，选择Unpack Prefabs Completely完全解包预制体，然后把GameObject从Sword子项中拖出，重命名为Sword_01，建立子项空物体，重命名为Weapon Pivot，再将Sword拖到Weapon Pivot子项。</p><p><img src="/2020/06/21/DarkSoulsDemo%EF%BC%88%E5%85%AB%EF%BC%89%E6%AD%A6%E5%99%A8/image-20200622211800792.png" alt="image-20200622211800792"></p><p><img src="/2020/06/21/DarkSoulsDemo%EF%BC%88%E5%85%AB%EF%BC%89%E6%AD%A6%E5%99%A8/image-20200622212526990.png" alt="image-20200622212526990"></p><p>将Sword_01转为预制体，删除场景中的Sword_01。在项目窗口里选中Sword_01，点击Open Prefabs按钮进入预制体编辑场景。展开Hierarchy里的Sword_01，选中Weapon Pivot，修改其Transform|Scale为（100，100，100）。</p><p><img src="/2020/06/21/DarkSoulsDemo%EF%BC%88%E5%85%AB%EF%BC%89%E6%AD%A6%E5%99%A8/image-20200623094957165.png" alt="image-20200623094957165"></p><p><img src="/2020/06/21/DarkSoulsDemo%EF%BC%88%E5%85%AB%EF%BC%89%E6%AD%A6%E5%99%A8/image-20200623095242480.png" alt="image-20200623095242480"></p><p>点击Scenes返回SampleScene。</p><p><img src="/2020/06/21/DarkSoulsDemo%EF%BC%88%E5%85%AB%EF%BC%89%E6%AD%A6%E5%99%A8/image-20200623095430004.png" alt="image-20200623095430004"></p><p>播放游戏，可以看到Sword_01附在角色手上，但位置有点奇怪，我们可以暂停游戏来进行修正。</p><h2 id="四、修正武器位置"><a href="#四、修正武器位置" class="headerlink" title="四、修正武器位置"></a>四、修正武器位置</h2><p>在场景中点击选中右手上的剑，在Hierarchy里将自动选中Sword_01|Weapon Pivot|Sword，选中Sword Pivot，调整位置至合理，然后右键Sword Pivot|Transform复制组件。</p><p><img src="/2020/06/21/DarkSoulsDemo%EF%BC%88%E5%85%AB%EF%BC%89%E6%AD%A6%E5%99%A8/image-20200623101003337.png" alt="image-20200623101003337"></p><p>然后停止播放游戏，选中项目窗口里的预制体Sword_01，点击Open Prefabs，选中WeaponPivot，粘贴组件。</p><p><img src="/2020/06/21/DarkSoulsDemo%EF%BC%88%E5%85%AB%EF%BC%89%E6%AD%A6%E5%99%A8/image-20200623101314973.png" alt="image-20200623101314973"></p><p>播放游戏，暂停游戏调整左手剑的位置，但这次我们调的是Left Hand Override的Transform，调整好后复制组件。</p><p><img src="/2020/06/21/DarkSoulsDemo%EF%BC%88%E5%85%AB%EF%BC%89%E6%AD%A6%E5%99%A8/image-20200623103347735.png" alt="image-20200623103347735"></p><p>停止游戏，找到Left Hand Override，粘贴组件。</p><p>好现在播放游戏，角色手上剑的位置都基本正常了。</p><p><img src="/2020/06/21/DarkSoulsDemo%EF%BC%88%E5%85%AB%EF%BC%89%E6%AD%A6%E5%99%A8/image-20200623103852052.png" alt="image-20200623103852052"></p><p><img src="/2020/06/21/DarkSoulsDemo%EF%BC%88%E5%85%AB%EF%BC%89%E6%AD%A6%E5%99%A8/image-20200623103905159.png" alt="image-20200623103905159"></p><h2 id="五、脚本汇总"><a href="#五、脚本汇总" class="headerlink" title="五、脚本汇总"></a>五、脚本汇总</h2><h3 id="Item-cs"><a href="#Item-cs" class="headerlink" title="Item.cs"></a>Item.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Item</span> : <span class="title">ScriptableObject</span></span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Item Information"</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> Sprite itemIcon;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> itemName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Weapon-cs"><a href="#Weapon-cs" class="headerlink" title="Weapon.cs"></a>Weapon.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">CreateAssetMenu(menuName = <span class="meta-string">"Item/Weapon Item"</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">WeaponItem</span> : <span class="title">Item</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> GameObject modelPrefabs;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> isUnarmed;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="WeaponHolderSlot-cs"><a href="#WeaponHolderSlot-cs" class="headerlink" title="WeaponHolderSlot.cs"></a>WeaponHolderSlot.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">WeaponHolderSlot</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> Transform parentOverride;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> isLeftHandSlot;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> isRightHandSlot;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> GameObject currentWeaponModel;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UnLoadWeapon</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span>(currentWeaponModel != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                currentWeaponModel.SetActive(<span class="literal">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UnloadWeaponAndDestroy</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (currentWeaponModel != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Destroy(currentWeaponModel);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">LoadWeaponModel</span>(<span class="params">WeaponItem weaponItem</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            UnloadWeaponAndDestroy();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(weaponItem== <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                UnLoadWeapon();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            GameObject model = Instantiate(weaponItem.modelPrefabs) <span class="keyword">as</span> GameObject;</span><br><span class="line">            <span class="keyword">if</span>(model != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(parentOverride != <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    model.transform.parent = parentOverride;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    model.transform.parent = transform;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                model.transform.localPosition = Vector3.zero;</span><br><span class="line">                model.transform.localRotation = Quaternion.identity;</span><br><span class="line">                model.transform.localScale = Vector3.one;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            currentWeaponModel = model;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="WeaponSlotManager-cs"><a href="#WeaponSlotManager-cs" class="headerlink" title="WeaponSlotManager.cs"></a>WeaponSlotManager.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">WeaponSlotManager</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        WeaponHolderSlot leftHandSlot;</span><br><span class="line">        WeaponHolderSlot rightHandSlot;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            WeaponHolderSlot[] weaponHolderSlots = GetComponentsInChildren&lt;WeaponHolderSlot&gt;();</span><br><span class="line">            <span class="keyword">foreach</span>(WeaponHolderSlot weaponSlot <span class="keyword">in</span> weaponHolderSlots)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (weaponSlot.isLeftHandSlot)</span><br><span class="line">                &#123;</span><br><span class="line">                    leftHandSlot = weaponSlot;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span> (weaponSlot.isRightHandSlot)</span><br><span class="line">                &#123;</span><br><span class="line">                    rightHandSlot = weaponSlot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">LoadWeaponOnSlot</span>(<span class="params">WeaponItem weaponItem, <span class="keyword">bool</span> isLeft</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (isLeft)</span><br><span class="line">            &#123;</span><br><span class="line">                leftHandSlot.LoadWeaponModel(weaponItem);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                rightHandSlot.LoadWeaponModel(weaponItem);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PlayerInventory-cs"><a href="#PlayerInventory-cs" class="headerlink" title="PlayerInventory.cs"></a>PlayerInventory.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerInventory</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        WeaponSlotManager weaponSlotManager;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> WeaponItem rightWeapon;</span><br><span class="line">        <span class="keyword">public</span> WeaponItem leftWeapon;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            weaponSlotManager = GetComponentInChildren&lt;WeaponSlotManager&gt;();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            weaponSlotManager.LoadWeaponOnSlot(rightWeapon, <span class="literal">false</span>);</span><br><span class="line">            weaponSlotManager.LoadWeaponOnSlot(leftWeapon, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DarkSoulsDemo（七）角色下落与着陆检测</title>
      <link href="/2020/06/21/DarkSoulsDemo%EF%BC%88%E4%B8%83%EF%BC%89%E8%A7%92%E8%89%B2%E4%B8%8B%E8%90%BD%E4%B8%8E%E7%9D%80%E9%99%86%E6%A3%80%E6%B5%8B/"/>
      <url>/2020/06/21/DarkSoulsDemo%EF%BC%88%E4%B8%83%EF%BC%89%E8%A7%92%E8%89%B2%E4%B8%8B%E8%90%BD%E4%B8%8E%E7%9D%80%E9%99%86%E6%A3%80%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<p>关键字：下落检测、着陆检测</p><a id="more"></a><p>本文出自：<a href="https://www.youtube.com/watch?v=dJdmUgqgZjU" target="_blank" rel="noopener">https://www.youtube.com/watch?v=dJdmUgqgZjU</a></p><p>使用到的动画片段Land_Base_Wait、Jump_Down_C_Loop，出自 Runner Action Animation Pack</p><h2 id="一、修改碰撞体"><a href="#一、修改碰撞体" class="headerlink" title="一、修改碰撞体"></a>一、修改碰撞体</h2><p>选中Player，修改其胶囊碰撞体组件参数Height为1.5。</p><p><img src="/2020/06/21/DarkSoulsDemo%EF%BC%88%E4%B8%83%EF%BC%89%E8%A7%92%E8%89%B2%E4%B8%8B%E8%90%BD%E4%B8%8E%E7%9D%80%E9%99%86%E6%A3%80%E6%B5%8B/image-20200621232841379.png" alt="image-20200621232841379"></p><p><img src="/2020/06/21/DarkSoulsDemo%EF%BC%88%E4%B8%83%EF%BC%89%E8%A7%92%E8%89%B2%E4%B8%8B%E8%90%BD%E4%B8%8E%E7%9D%80%E9%99%86%E6%A3%80%E6%B5%8B/image-20200621194552352.png" alt="image-20200621194552352"></p><h2 id="二、编辑脚本"><a href="#二、编辑脚本" class="headerlink" title="二、编辑脚本"></a>二、编辑脚本</h2><p>打开PlayerManager.cs，声明变量isInAir、isGrounded</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">bool</span> isInAir;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">bool</span> isGrounded;</span><br></pre></td></tr></table></figure><p>打开PlayerLocomotion.cs，声明以下变量</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Header(<span class="meta-string">"Ground &amp; Air Detection Stats"</span>)</span>]</span><br><span class="line">[<span class="meta">SerializeField</span>]</span><br><span class="line"><span class="keyword">float</span> groundDetectionRayStartPoint = <span class="number">0.5f</span>;</span><br><span class="line">[<span class="meta">SerializeField</span>]</span><br><span class="line"><span class="keyword">float</span> minimumDistanceNeededToBeginFall = <span class="number">1f</span>;</span><br><span class="line">[<span class="meta">SerializeField</span>]</span><br><span class="line"><span class="keyword">float</span> groundDirectionRayDistance = <span class="number">0.2f</span>;</span><br><span class="line">LayerMask ignoreForGroundCheck;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">float</span> inAirTimer;</span><br><span class="line"></span><br><span class="line">[<span class="meta">Header(<span class="meta-string">"Movement Stats"</span>)</span>]</span><br><span class="line">...</span><br><span class="line">[<span class="meta">SerializeField</span>]</span><br><span class="line"><span class="keyword">float</span> fallingSpeed = <span class="number">45</span>;</span><br></pre></td></tr></table></figure><p>回到PlayerManager.cs，再LateUpdate方法里添加以下语句</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">LateUpdate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">...</span><br><span class="line">    <span class="keyword">if</span> (isInAir)</span><br><span class="line">    &#123;</span><br><span class="line">        playerLocomotion.inAirTimer = playerLocomotion.inAirTimer + Time.deltaTime;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再PlayerLocomotion.cs编写HandleFalling方法，修改moveDirection声明前加上关键字public。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">public</span> Vector3 moveDirection</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    playerManager.isGrounded = <span class="literal">true</span>;</span><br><span class="line">    ignoreForGroundCheck = ~(<span class="number">1</span> &lt;&lt; <span class="number">8</span> | <span class="number">1</span> &lt;&lt; <span class="number">11</span>);</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleFalling</span>(<span class="params"><span class="keyword">float</span> delta, Vector3 moveDirection</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    playerManager.isGrounded = <span class="literal">false</span>;</span><br><span class="line">    RaycastHit hit;</span><br><span class="line">    Vector3 origin = myTransform.position;</span><br><span class="line">    origin.y += groundDetectionRayStartPoint;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(Physics.Raycast(origin, myTransform.forward, <span class="keyword">out</span> hit, <span class="number">0.4f</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        moveDirection = Vector3.zero;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (playerManager.isInAir)</span><br><span class="line">    &#123;</span><br><span class="line">        rigidbody.AddForce(-Vector3.up * fallingSpeed);</span><br><span class="line">        <span class="comment">//This Force kicks your ass from the edge. ↓</span></span><br><span class="line">        rigidbody.AddForce(moveDirection * fallingSpeed / <span class="number">3f</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Vector3 dir = moveDirection;</span><br><span class="line">    dir.Normalize();</span><br><span class="line">    origin = origin + dir * groundDirectionRayDistance;</span><br><span class="line"></span><br><span class="line">    targetPostion = myTransform.position;</span><br><span class="line"></span><br><span class="line">    Debug.DrawRay(origin, = -Vector3.up * minimumDistanceNeededToBeginFall, Color.red, <span class="number">0.1f</span>, <span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">if</span>(Physics.Raycast(origin, -Vector3.up, <span class="keyword">out</span> hit, minimumDistanceNeededToBeginFall, ignoreForGroundCheck))</span><br><span class="line">    &#123;</span><br><span class="line">        normalVector = hit.normal;</span><br><span class="line">        Vector3 tp = hit.point;</span><br><span class="line">        playerManager.isGrounded = <span class="literal">true</span>;</span><br><span class="line">        targetPostion.y = tp.y;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (playerManager.isInAir)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(inAirTimer &gt; <span class="number">0.5f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.Log(<span class="string">"You were in the air for"</span> + inAirTimer);</span><br><span class="line">                animatorHandler.PlayerTargetAnimation(<span class="string">"Land"</span>, <span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                animatorHandler.PlayerTargetAnimation(<span class="string">"Empty"</span>, <span class="literal">false</span>);</span><br><span class="line">                inAirTimer = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            playerManager.isInAir = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (playerManager.isGrounded)</span><br><span class="line">        &#123;</span><br><span class="line">            playerManager.isGrounded = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(playerManager.isInAir == <span class="literal">false</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(playerManager.isInteracting == <span class="literal">false</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                animatorHandler.PlayerTargetAnimation(<span class="string">"Falling"</span>, <span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Vector3 vel = rigidbody.velocity;</span><br><span class="line">            vel.Normalize();</span><br><span class="line">            rigidbody.velocity = vel * (movementSpeed / <span class="number">2</span>);</span><br><span class="line">            playerManager.isInAir = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (playerManager.isGrounded)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(playerManager.isInteracting || inputHandler.moveAmount &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            myTransform.position = Vector3.Lerp(myTransform.position, targetPostion, Time.deltaTime);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            myTransform.position = targetPostion;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在PlayerManager.cs的Update方法里调用HandleFalling方法。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">...</span><br><span class="line">playerLocomotion.HandleFalling(delta, playerLocomotion.moveDirection);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、添加动画状态"><a href="#三、添加动画状态" class="headerlink" title="三、添加动画状态"></a>三、添加动画状态</h2><p>将着陆动画片段Land_Base_Wait拖入动画Base Layer中，重命名为Land，建立到Locomotion的转变关系，添加ResetIsInteracting Behaviour。</p><p>将下落动画片段Jump_Down_C_Loop拖入动画Base Layer中，重命名为Falling，不要建立任何转变关系，不添加Behaviour，勾选Foot IK。</p><p><img src="/2020/06/21/DarkSoulsDemo%EF%BC%88%E4%B8%83%EF%BC%89%E8%A7%92%E8%89%B2%E4%B8%8B%E8%90%BD%E4%B8%8E%E7%9D%80%E9%99%86%E6%A3%80%E6%B5%8B/image-20200621231959232.png" alt="image-20200621231959232"></p><p><img src="/2020/06/21/DarkSoulsDemo%EF%BC%88%E4%B8%83%EF%BC%89%E8%A7%92%E8%89%B2%E4%B8%8B%E8%90%BD%E4%B8%8E%E7%9D%80%E9%99%86%E6%A3%80%E6%B5%8B/image-20200621203834221.png" alt="image-20200621203834221"></p><p><img src="/2020/06/21/DarkSoulsDemo%EF%BC%88%E4%B8%83%EF%BC%89%E8%A7%92%E8%89%B2%E4%B8%8B%E8%90%BD%E4%B8%8E%E7%9D%80%E9%99%86%E6%A3%80%E6%B5%8B/image-20200621204246510.png" alt="image-20200621204246510"></p><p>打开PlayerLocomotion.cs，在HandleMovement方法开头添加上角色互动信号判断：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleMovement</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (inputHandler.rollFlag)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (playerManager.isInteracting)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p>保存脚本，将角色放置在高处，播放游戏，让角色往下跳，角色检测下落做出下坠动作，检测着陆并播放着陆动画。</p><p><img src="/2020/06/21/DarkSoulsDemo%EF%BC%88%E4%B8%83%EF%BC%89%E8%A7%92%E8%89%B2%E4%B8%8B%E8%90%BD%E4%B8%8E%E7%9D%80%E9%99%86%E6%A3%80%E6%B5%8B/image-20200621231637695.png" alt="image-20200621231637695"></p><h2 id="四、可能遇到的问题"><a href="#四、可能遇到的问题" class="headerlink" title="四、可能遇到的问题"></a>四、可能遇到的问题</h2><p>角色卡在边缘没有下落</p><p>可能原因：水平方向的受力太小，水平方向速度满，胶囊碰撞体正好卡在边缘。</p><p>可以增大HandleFalling方法中” rigidbody.AddForce(moveDirection * fallingSpeed / 3f); “的值大小。即将末尾的3f减小或去掉。但可能会造成下落时“滑翔”太远。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleFalling</span>(<span class="params"><span class="keyword">float</span> delta, Vector3 moveDirection</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   ...</span><br><span class="line">    <span class="keyword">if</span> (playerManager.isInAir)</span><br><span class="line">    &#123;</span><br><span class="line">        rigidbody.AddForce(-Vector3.up * fallingSpeed);</span><br><span class="line">        <span class="comment">//This Force kicks your ass from the edge. ↓</span></span><br><span class="line">        rigidbody.AddForce(moveDirection * fallingSpeed / <span class="number">3f</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="五、脚本汇总"><a href="#五、脚本汇总" class="headerlink" title="五、脚本汇总"></a>五、脚本汇总</h2><h3 id="PlayerManager-cs"><a href="#PlayerManager-cs" class="headerlink" title="PlayerManager.cs"></a>PlayerManager.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerManager</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        InputHandler inputHandler;</span><br><span class="line">        Animator anim;</span><br><span class="line">        CameraHandler cameraHandler;</span><br><span class="line">        PlayerLocomotion playerLocomotion;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> isInteracting;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Player Flags"</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> isSprinting;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> isInAir;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> isGrounded;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            cameraHandler = CameraHandler.singleton;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            inputHandler = GetComponent&lt;InputHandler&gt;();</span><br><span class="line">            anim = GetComponentInChildren&lt;Animator&gt;();</span><br><span class="line">            playerLocomotion = GetComponent&lt;PlayerLocomotion&gt;();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">float</span> delta = Time.deltaTime;</span><br><span class="line">            isInteracting = anim.GetBool(<span class="string">"IsInteracting"</span>);</span><br><span class="line"></span><br><span class="line">            inputHandler.TickInput(delta);</span><br><span class="line">            playerLocomotion.HandleMovement(delta);</span><br><span class="line">            playerLocomotion.HandleRollingAndSprinting(delta);</span><br><span class="line">            playerLocomotion.HandleFalling(delta, playerLocomotion.moveDirection);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FixedUpdate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">float</span> delta = Time.fixedDeltaTime;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (cameraHandler != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cameraHandler.FollowTarget(delta);</span><br><span class="line">                cameraHandler.HandleCameraRotation(delta, inputHandler.mouseX, inputHandler.mouseY);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">LateUpdate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            inputHandler.rollFlag = <span class="literal">false</span>;</span><br><span class="line">            inputHandler.sprintFlag = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (isInAir)</span><br><span class="line">            &#123;</span><br><span class="line">                playerLocomotion.inAirTimer = playerLocomotion.inAirTimer + Time.deltaTime;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PlayerLocomotion-cs"><a href="#PlayerLocomotion-cs" class="headerlink" title="PlayerLocomotion.cs"></a>PlayerLocomotion.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span> &#123; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerLocomotion</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        PlayerManager playerManager;</span><br><span class="line">        Transform cameraObject;</span><br><span class="line">        InputHandler inputHandler;</span><br><span class="line">        <span class="keyword">public</span> Vector3 moveDirection;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">HideInInspector</span>]</span><br><span class="line">        <span class="keyword">public</span> Transform myTransform;</span><br><span class="line">        [<span class="meta">HideInInspector</span>]</span><br><span class="line">        <span class="keyword">public</span> AnimatorHandler animatorHandler;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">new</span> Rigidbody rigidbody;</span><br><span class="line">        <span class="keyword">public</span> GameObject normalCamera;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Ground &amp; Air Detection Stats"</span>)</span>]</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">float</span> groundDetectionRayStartPoint = <span class="number">0.5f</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">float</span> minimumDistanceNeededToBeginFall = <span class="number">1f</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">float</span> groundDirectionRayDistance = <span class="number">0.2f</span>;</span><br><span class="line">        LayerMask ignoreForGroundCheck;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> inAirTimer;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Movement Stats"</span>)</span>]</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">float</span> walkingSpeed = <span class="number">3</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">float</span> movementSpeed = <span class="number">5</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">float</span> sprintSpeed = <span class="number">7</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">float</span> rotationSpeed = <span class="number">10</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">float</span> fallingSpeed = <span class="number">45</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            playerManager = GetComponent&lt;PlayerManager&gt;();</span><br><span class="line">            rigidbody = GetComponent&lt;Rigidbody&gt;();</span><br><span class="line">            inputHandler = GetComponent&lt;InputHandler&gt;();</span><br><span class="line">            animatorHandler = GetComponentInChildren&lt;AnimatorHandler&gt;();</span><br><span class="line">            cameraObject = Camera.main.transform;</span><br><span class="line">            myTransform = transform;</span><br><span class="line">            animatorHandler.Initialize();</span><br><span class="line"></span><br><span class="line">            playerManager.isGrounded = <span class="literal">true</span>;</span><br><span class="line">            ignoreForGroundCheck = ~(<span class="number">1</span> &lt;&lt; <span class="number">8</span> | <span class="number">1</span> &lt;&lt; <span class="number">11</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">region</span> Movement</span></span><br><span class="line">        Vector3 normalVector;</span><br><span class="line">        Vector3 targetPostion;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">HandleRotation</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Vector3 targetDir = Vector3.zero;</span><br><span class="line">            <span class="keyword">float</span> moveOverride = inputHandler.moveAmount;</span><br><span class="line"></span><br><span class="line">            targetDir = cameraObject.forward * inputHandler.vertical;</span><br><span class="line">            targetDir += cameraObject.right * inputHandler.horizontal;</span><br><span class="line"></span><br><span class="line">            targetDir.Normalize();</span><br><span class="line">            targetDir.y = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(targetDir == Vector3.zero)</span><br><span class="line">            &#123;</span><br><span class="line">                targetDir = myTransform.forward;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">float</span> rs = rotationSpeed;</span><br><span class="line">            Quaternion tr = Quaternion.LookRotation(targetDir);</span><br><span class="line">            Quaternion targetRotation = Quaternion.Slerp(myTransform.rotation, tr, rs * delta);</span><br><span class="line"></span><br><span class="line">            myTransform.rotation = targetRotation;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleMovement</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (inputHandler.rollFlag)</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            <span class="keyword">if</span> (playerManager.isInteracting)</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            moveDirection = cameraObject.forward * inputHandler.vertical;</span><br><span class="line">            moveDirection += cameraObject.right * inputHandler.horizontal;</span><br><span class="line">            moveDirection.Normalize();</span><br><span class="line">            moveDirection.y = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">float</span> speed = movementSpeed;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (inputHandler.sprintFlag &amp;&amp; inputHandler.moveAmount &gt; <span class="number">0.5</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                speed = sprintSpeed;</span><br><span class="line">                playerManager.isSprinting = <span class="literal">true</span>;</span><br><span class="line">                moveDirection *= speed;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(inputHandler.moveAmount &lt; <span class="number">0.5</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    moveDirection *= walkingSpeed;</span><br><span class="line">                    playerManager.isSprinting = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    moveDirection *= speed;</span><br><span class="line">                    playerManager.isSprinting = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Vector3 projectedVelocity = Vector3.ProjectOnPlane(moveDirection, normalVector);</span><br><span class="line">            rigidbody.velocity = projectedVelocity;</span><br><span class="line"></span><br><span class="line">            animatorHandler.UpdateAnimatorValues(inputHandler.moveAmount,</span><br><span class="line">                <span class="number">0</span>, playerManager.isSprinting);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (animatorHandler.canRotate)</span><br><span class="line">            &#123;</span><br><span class="line">                HandleRotation(delta);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleRollingAndSprinting</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (animatorHandler.anim.GetBool(<span class="string">"IsInteracting"</span>))</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            <span class="keyword">if</span> (inputHandler.rollFlag)</span><br><span class="line">            &#123;</span><br><span class="line">                moveDirection = cameraObject.forward * inputHandler.vertical;</span><br><span class="line">                moveDirection += cameraObject.right * inputHandler.horizontal;</span><br><span class="line">                <span class="keyword">if</span>(inputHandler.moveAmount &gt; <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    animatorHandler.PlayerTargetAnimation(<span class="string">"Rolling"</span>, <span class="literal">true</span>);</span><br><span class="line">                    moveDirection.y = <span class="number">0</span>;</span><br><span class="line">                    Quaternion rollRotation = Quaternion.LookRotation(moveDirection);</span><br><span class="line">                    myTransform.rotation = rollRotation;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    animatorHandler.PlayerTargetAnimation(<span class="string">"Step_Back"</span>, <span class="literal">true</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleFalling</span>(<span class="params"><span class="keyword">float</span> delta, Vector3 moveDirection</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            playerManager.isGrounded = <span class="literal">false</span>;</span><br><span class="line">            RaycastHit hit;</span><br><span class="line">            Vector3 origin = myTransform.position;</span><br><span class="line">            origin.y += groundDetectionRayStartPoint;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(Physics.Raycast(origin, myTransform.forward, <span class="keyword">out</span> hit, <span class="number">0.4f</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                moveDirection = Vector3.zero;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (playerManager.isInAir)</span><br><span class="line">            &#123;</span><br><span class="line">                rigidbody.AddForce(-Vector3.up * fallingSpeed);</span><br><span class="line">                <span class="comment">//This Force kicks your ass from the edge. ↓</span></span><br><span class="line">                rigidbody.AddForce(moveDirection * fallingSpeed / <span class="number">3f</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Vector3 dir = moveDirection;</span><br><span class="line">            dir.Normalize();</span><br><span class="line">            origin = origin + dir * groundDirectionRayDistance;</span><br><span class="line"></span><br><span class="line">            targetPostion = myTransform.position;</span><br><span class="line"></span><br><span class="line">            Debug.DrawRay(origin, -Vector3.up * minimumDistanceNeededToBeginFall, Color.red, <span class="number">0.1f</span>, <span class="literal">false</span>);</span><br><span class="line">            <span class="keyword">if</span>(Physics.Raycast(origin, -Vector3.up, <span class="keyword">out</span> hit, minimumDistanceNeededToBeginFall, ignoreForGroundCheck))</span><br><span class="line">            &#123;</span><br><span class="line">                normalVector = hit.normal;</span><br><span class="line">                Vector3 tp = hit.point;</span><br><span class="line">                playerManager.isGrounded = <span class="literal">true</span>;</span><br><span class="line">                targetPostion.y = tp.y;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (playerManager.isInAir)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(inAirTimer &gt; <span class="number">0.5f</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Debug.Log(<span class="string">"You were in the air for "</span> + inAirTimer);</span><br><span class="line">                        animatorHandler.PlayerTargetAnimation(<span class="string">"Land"</span>, <span class="literal">true</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        animatorHandler.PlayerTargetAnimation(<span class="string">"Empty"</span>, <span class="literal">false</span>);</span><br><span class="line">                        inAirTimer = <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    playerManager.isInAir = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (playerManager.isGrounded)</span><br><span class="line">                &#123;</span><br><span class="line">                    playerManager.isGrounded = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(playerManager.isInAir == <span class="literal">false</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(playerManager.isInteracting == <span class="literal">false</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        animatorHandler.PlayerTargetAnimation(<span class="string">"Falling"</span>, <span class="literal">true</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    Vector3 vel = rigidbody.velocity;</span><br><span class="line">                    vel.Normalize();</span><br><span class="line">                    rigidbody.velocity = vel * (movementSpeed / <span class="number">2</span>);</span><br><span class="line">                    playerManager.isInAir = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (playerManager.isGrounded)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(playerManager.isInteracting || inputHandler.moveAmount &gt; <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    myTransform.position = Vector3.Lerp(myTransform.position, targetPostion, Time.deltaTime);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    myTransform.position = targetPostion;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SoulsLikeDemo（一）自制结构</title>
      <link href="/2020/06/21/SoulsLikeDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%87%AA%E5%88%B6%E7%BB%93%E6%9E%84/"/>
      <url>/2020/06/21/SoulsLikeDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%87%AA%E5%88%B6%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DarkSoulsDemo（六）重组脚本</title>
      <link href="/2020/06/21/DarkSoulsDemo%EF%BC%88%E5%85%AD%EF%BC%89%E9%87%8D%E7%BB%84%E8%84%9A%E6%9C%AC/"/>
      <url>/2020/06/21/DarkSoulsDemo%EF%BC%88%E5%85%AD%EF%BC%89%E9%87%8D%E7%BB%84%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<p>关键词：脚本，功能结构</p><a id="more"></a><h2 id="一、功能结构概况"><a href="#一、功能结构概况" class="headerlink" title="一、功能结构概况"></a>一、功能结构概况</h2><ol><li><p>PlayerManager.cs</p><ul><li><p>管理Update方法</p></li><li><p>管理信号标示（Flag）</p></li><li><p>将其他功能模块（脚本）连接到Player上</p></li></ul></li><li><p>InputHandler.cs</p><ul><li>监测玩家输入</li></ul></li><li><p>PlayerLocomotion.cs</p><ul><li>管理Player所有的基础移动功能</li></ul></li><li><p>AnimationHandler.cs</p><ul><li>管理Player所有要执行的动画</li></ul><p>…</p></li></ol><h2 id="二、脚本重组"><a href="#二、脚本重组" class="headerlink" title="二、脚本重组"></a>二、脚本重组</h2><h3 id="PlayerManager-cs"><a href="#PlayerManager-cs" class="headerlink" title="PlayerManager.cs"></a>PlayerManager.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerManager</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        InputHandler inputHandler;</span><br><span class="line">        Animator anim;</span><br><span class="line">        CameraHandler cameraHandler;</span><br><span class="line">        PlayerLocomotion playerLocomotion;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> isInteracting;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Player Flags"</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> isSprinting;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            cameraHandler = CameraHandler.singleton;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            inputHandler = GetComponent&lt;InputHandler&gt;();</span><br><span class="line">            anim = GetComponentInChildren&lt;Animator&gt;();</span><br><span class="line">            playerLocomotion = GetComponent&lt;PlayerLocomotion&gt;();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">float</span> delta = Time.deltaTime;</span><br><span class="line">            isInteracting = anim.GetBool(<span class="string">"IsInteracting"</span>);</span><br><span class="line"></span><br><span class="line">            inputHandler.TickInput(delta);</span><br><span class="line">            playerLocomotion.HandleMovement(delta);</span><br><span class="line">            playerLocomotion.HandleRollingAndSprinting(delta);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FixedUpdate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">float</span> delta = Time.fixedDeltaTime;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (cameraHandler != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cameraHandler.FollowTarget(delta);</span><br><span class="line">                cameraHandler.HandleCameraRotation(delta, inputHandler.mouseX, inputHandler.mouseY);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">LateUpdate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            inputHandler.rollFlag = <span class="literal">false</span>;</span><br><span class="line">            inputHandler.sprintFlag = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="InputHandler-cs"><a href="#InputHandler-cs" class="headerlink" title="InputHandler.cs"></a>InputHandler.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span> &#123; </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">InputHandler</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> horizontal;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> vertical;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> moveAmount;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> mouseX;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> mouseY;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> b_Input;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> rollFlag;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> sprintFlag;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> rollInputTimer;</span><br><span class="line"></span><br><span class="line">        PlayerControls inputActions;</span><br><span class="line"></span><br><span class="line">        Vector2 movementInput;</span><br><span class="line">        Vector2 cameraInput;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnEnable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span>(inputActions == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                inputActions = <span class="keyword">new</span> PlayerControls();</span><br><span class="line">                inputActions.PlayerMovement.Movement.performed += inputActions =&gt; movementInput = inputActions.ReadValue&lt;Vector2&gt;();</span><br><span class="line">                inputActions.PlayerMovement.Camera.performed += i =&gt; cameraInput = i.ReadValue&lt;Vector2&gt;();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            inputActions.Enable();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDisable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            inputActions.Disable();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TickInput</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MoveInput(delta);</span><br><span class="line">            HandleRollInput(delta);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MoveInput</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            horizontal = movementInput.x;</span><br><span class="line">            vertical = movementInput.y;</span><br><span class="line">            moveAmount = Mathf.Clamp01(Mathf.Abs(horizontal) + Mathf.Abs(vertical));</span><br><span class="line">            mouseX = cameraInput.x;</span><br><span class="line">            mouseY = cameraInput.y;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">HandleRollInput</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            b_Input = inputActions.PlayerAction.Roll.phase == UnityEngine.InputSystem.InputActionPhase.Started;</span><br><span class="line">            <span class="keyword">if</span> (b_Input)</span><br><span class="line">            &#123;</span><br><span class="line">                rollInputTimer += delta;</span><br><span class="line">                sprintFlag = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(rollInputTimer &gt; <span class="number">0</span> &amp;&amp; rollInputTimer &lt; <span class="number">0.5f</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    sprintFlag = <span class="literal">false</span>;</span><br><span class="line">                    rollFlag = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                rollInputTimer = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PlayerLocomotion-cs"><a href="#PlayerLocomotion-cs" class="headerlink" title="PlayerLocomotion.cs"></a>PlayerLocomotion.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span> &#123; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerLocomotion</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        PlayerManager playerManager;</span><br><span class="line">        Transform cameraObject;</span><br><span class="line">        InputHandler inputHandler;</span><br><span class="line">        Vector3 moveDirection;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">HideInInspector</span>]</span><br><span class="line">        <span class="keyword">public</span> Transform myTransform;</span><br><span class="line">        [<span class="meta">HideInInspector</span>]</span><br><span class="line">        <span class="keyword">public</span> AnimatorHandler animatorHandler;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">new</span> Rigidbody rigidbody;</span><br><span class="line">        <span class="keyword">public</span> GameObject normalCamera;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Movement Stats"</span>)</span>]</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">float</span> walkingSpeed = <span class="number">3</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">float</span> movementSpeed = <span class="number">5</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">float</span> sprintSpeed = <span class="number">7</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">float</span> rotationSpeed = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            playerManager = GetComponent&lt;PlayerManager&gt;();</span><br><span class="line">            rigidbody = GetComponent&lt;Rigidbody&gt;();</span><br><span class="line">            inputHandler = GetComponent&lt;InputHandler&gt;();</span><br><span class="line">            animatorHandler = GetComponentInChildren&lt;AnimatorHandler&gt;();</span><br><span class="line">            cameraObject = Camera.main.transform;</span><br><span class="line">            myTransform = transform;</span><br><span class="line">            animatorHandler.Initialize();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">region</span> Movement</span></span><br><span class="line">        Vector3 normalVector;</span><br><span class="line">        Vector3 targetPostion;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">HandleRotation</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Vector3 targetDir = Vector3.zero;</span><br><span class="line">            <span class="keyword">float</span> moveOverride = inputHandler.moveAmount;</span><br><span class="line"></span><br><span class="line">            targetDir = cameraObject.forward * inputHandler.vertical;</span><br><span class="line">            targetDir += cameraObject.right * inputHandler.horizontal;</span><br><span class="line"></span><br><span class="line">            targetDir.Normalize();</span><br><span class="line">            targetDir.y = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(targetDir == Vector3.zero)</span><br><span class="line">            &#123;</span><br><span class="line">                targetDir = myTransform.forward;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">float</span> rs = rotationSpeed;</span><br><span class="line">            Quaternion tr = Quaternion.LookRotation(targetDir);</span><br><span class="line">            Quaternion targetRotation = Quaternion.Slerp(myTransform.rotation, tr, rs * delta);</span><br><span class="line"></span><br><span class="line">            myTransform.rotation = targetRotation;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleMovement</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (inputHandler.rollFlag)</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            moveDirection = cameraObject.forward * inputHandler.vertical;</span><br><span class="line">            moveDirection += cameraObject.right * inputHandler.horizontal;</span><br><span class="line">            moveDirection.Normalize();</span><br><span class="line">            moveDirection.y = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">float</span> speed = movementSpeed;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (inputHandler.sprintFlag &amp;&amp; inputHandler.moveAmount &gt; <span class="number">0.5</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                speed = sprintSpeed;</span><br><span class="line">                playerManager.isSprinting = <span class="literal">true</span>;</span><br><span class="line">                moveDirection *= speed;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(inputHandler.moveAmount &lt; <span class="number">0.5</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    moveDirection *= walkingSpeed;</span><br><span class="line">                    playManager.isSprinting = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    moveDirection *= speed;</span><br><span class="line">                    playManager.isSprinting = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Vector3 projectedVelocity = Vector3.ProjectOnPlane(moveDirection, normalVector);</span><br><span class="line">            rigidbody.velocity = projectedVelocity;</span><br><span class="line"></span><br><span class="line">            animatorHandler.UpdateAnimatorValues(inputHandler.moveAmount,</span><br><span class="line">                <span class="number">0</span>, playerManager.isSprinting);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (animatorHandler.canRotate)</span><br><span class="line">            &#123;</span><br><span class="line">                HandleRotation(delta);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleRollingAndSprinting</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (animatorHandler.anim.GetBool(<span class="string">"IsInteracting"</span>))</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            <span class="keyword">if</span> (inputHandler.rollFlag)</span><br><span class="line">            &#123;</span><br><span class="line">                moveDirection = cameraObject.forward * inputHandler.vertical;</span><br><span class="line">                moveDirection += cameraObject.right * inputHandler.horizontal;</span><br><span class="line">                <span class="keyword">if</span>(inputHandler.moveAmount &gt; <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    animatorHandler.PlayerTargetAnimation(<span class="string">"Rolling"</span>, <span class="literal">true</span>);</span><br><span class="line">                    moveDirection.y = <span class="number">0</span>;</span><br><span class="line">                    Quaternion rollRotation = Quaternion.LookRotation(moveDirection);</span><br><span class="line">                    myTransform.rotation = rollRotation;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    animatorHandler.PlayerTargetAnimation(<span class="string">"Step_Back"</span>, <span class="literal">true</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="AnimatorHandler-cs"><a href="#AnimatorHandler-cs" class="headerlink" title="AnimatorHandler.cs"></a>AnimatorHandler.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span> &#123; </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AnimatorHandler</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        PlayerManager playerManager;</span><br><span class="line">        <span class="keyword">public</span> Animator anim;</span><br><span class="line">        InputHandler inputHandler;</span><br><span class="line">        PlayerLocomotion playerLocomotion;</span><br><span class="line">        <span class="keyword">int</span> vertical;</span><br><span class="line">        <span class="keyword">int</span> horizontal;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> canRotate;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Initialize</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            playerManager = GetComponentInParent&lt;PlayerManager&gt;();</span><br><span class="line">            anim = GetComponent&lt;Animator&gt;();</span><br><span class="line">            inputHandler = GetComponentInParent&lt;InputHandler&gt;();</span><br><span class="line">            playerLocomotion = GetComponentInParent&lt;PlayerLocomotion&gt;();</span><br><span class="line">            vertical = Animator.StringToHash(<span class="string">"Vertical"</span>);</span><br><span class="line">            horizontal = Animator.StringToHash(<span class="string">"Horizontal"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UpdateAnimatorValues</span>(<span class="params"><span class="keyword">float</span> verticalMovement, <span class="keyword">float</span> horizontalMovement, <span class="keyword">bool</span> isSprinting</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span> Vertical</span></span><br><span class="line">            <span class="keyword">float</span> v = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(verticalMovement &gt; <span class="number">0</span> &amp;&amp; verticalMovement &lt; <span class="number">0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">0.5f</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(verticalMovement &gt; <span class="number">0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(verticalMovement &lt; <span class="number">0</span> &amp;&amp; verticalMovement &gt; <span class="number">-0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">-0.5f</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(verticalMovement &lt; <span class="number">-0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span> Horizontal</span></span><br><span class="line">            <span class="keyword">float</span> h = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(horizontalMovement &gt; <span class="number">0</span> &amp;&amp; horizontalMovement &lt; <span class="number">0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                h = <span class="number">0.5f</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(horizontalMovement &gt; <span class="number">0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                h = <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(horizontalMovement &lt; <span class="number">0</span> &amp;&amp; horizontalMovement &gt; <span class="number">-0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                h = <span class="number">-0.5f</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(verticalMovement &lt; <span class="number">-0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                h = <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                h = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (isSprinting)</span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">2</span>;</span><br><span class="line">                h = horizontalMovement;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            anim.SetFloat(vertical, v, <span class="number">0.1f</span>, Time.deltaTime);</span><br><span class="line">            anim.SetFloat(horizontal, h, <span class="number">0.1f</span>, Time.deltaTime);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">PlayerTargetAnimation</span>(<span class="params"><span class="keyword">string</span> targetAnim, <span class="keyword">bool</span> isInteracting</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            anim.applyRootMotion = isInteracting;</span><br><span class="line">            anim.SetBool(<span class="string">"IsInteracting"</span>, <span class="literal">true</span>);</span><br><span class="line">            anim.CrossFade(targetAnim, <span class="number">0.2f</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">CanRotate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            canRotate = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">StopRotate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            canRotate = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnAnimatorMove</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (playerManager.isInteracting == <span class="literal">false</span>)</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">float</span> delta = Time.deltaTime;</span><br><span class="line">            playerLocomotion.rigidbody.drag = <span class="number">0</span>;</span><br><span class="line">            Vector3 deltaPosition = anim.deltaPosition;</span><br><span class="line">            deltaPosition.y = <span class="number">0</span>;</span><br><span class="line">            Vector3 velocity = deltaPosition / delta;</span><br><span class="line">            playerLocomotion.rigidbody.velocity = velocity;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、可能出现的问题"><a href="#三、可能出现的问题" class="headerlink" title="三、可能出现的问题"></a>三、可能出现的问题</h2><p>以上四个脚本修改完后，播放游戏，摄像机会出现不跟随的情况。</p><p>解决方法：把Hierarchy中Player原来的CameraHandler组件删除掉，再重新添加上，重新配置Target Transform、Camera Transform、Camera Pivot Transform即可，参考《DarkSoulsDemo（二）摄像机管理器》。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DarkSoulsDemo（五）角色冲刺</title>
      <link href="/2020/06/20/DarkSoulsDemo%EF%BC%88%E4%BA%94%EF%BC%89%E8%A7%92%E8%89%B2%E5%86%B2%E5%88%BA/"/>
      <url>/2020/06/20/DarkSoulsDemo%EF%BC%88%E4%BA%94%EF%BC%89%E8%A7%92%E8%89%B2%E5%86%B2%E5%88%BA/</url>
      
        <content type="html"><![CDATA[<p>关键词：混合树，脚本控制</p><a id="more"></a><p>本文出自：<a href="https://www.youtube.com/watch?v=gyqfmE_1aus&amp;t=315s" target="_blank" rel="noopener">https://www.youtube.com/watch?v=gyqfmE_1aus&amp;t=315s</a></p><h2 id="一、导入、添加冲刺动画片段"><a href="#一、导入、添加冲刺动画片段" class="headerlink" title="一、导入、添加冲刺动画片段"></a>一、导入、添加冲刺动画片段</h2><p>打开动画控制器Humanoid，双击进入Locomotion，选中Blend Tree，在Inspector的Motion列表里点击加号新增动作域，将动画片段Sprint拖入。修改Pos X、Pos Y的值分别为0、2。</p><p><img src="/2020/06/20/DarkSoulsDemo%EF%BC%88%E4%BA%94%EF%BC%89%E8%A7%92%E8%89%B2%E5%86%B2%E5%88%BA/image-20200621112053231.png" alt="image-20200621112053231"></p><h2 id="二、修改脚本"><a href="#二、修改脚本" class="headerlink" title="二、修改脚本"></a>二、修改脚本</h2><p>用VS2017打开AnimatorHandler.cs，修改UpdateAnimatorValues方法如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UpdateAnimatorValues</span>(<span class="params"><span class="keyword">float</span> verticalMovement, <span class="keyword">float</span> horizontalMovement, <span class="keyword">bool</span> isSprinting</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">region</span> Vertical ...</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">region</span> Horizontal ...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isSprinting)</span><br><span class="line">    &#123;</span><br><span class="line">        v = <span class="number">2</span>;</span><br><span class="line">        h = horizontalMovement;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    anim.SetFloat(vertical, v, <span class="number">0.1f</span>, Time.deltaTime);</span><br><span class="line">    anim.SetFloat(horizontal, h, <span class="number">0.1f</span>, Time.deltaTime);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在PlayerLocomotion.cs里添加声明bool类型变量isSprinting，并在HandleMovement()方法里传入animatorHandler.UpdateAnimatorValues()方法。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">bool</span> isSprinting;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleMovement</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">...</span><br><span class="line">    animatorHandler.UpdateAnimatorValues(inputHandler.moveAmount, <span class="number">0</span>, isSprinting);</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在InputHandler.cs里添加变量声明rollInputTimer、sprintFlag，修改HandleRollInput()方法。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">float</span> rollInputTimer;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">bool</span> sprintFlag;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">HandleRollInput</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    b_Input = inputActions.PlayerAction.Roll.phase == UnityEngine.InputSystem.InputActionPhase.Started;</span><br><span class="line">    <span class="keyword">if</span> (b_Input)</span><br><span class="line">    &#123;</span><br><span class="line">        rollInputTimer += delta;</span><br><span class="line">        sprintFlag = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(rollInputTimer &gt; <span class="number">0</span> &amp;&amp; rollInputTimer &lt; <span class="number">0.5f</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            sprintFlag = <span class="literal">false</span>;</span><br><span class="line">            rollFlag = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        rollInputTimer = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打开PlayerLocomotion.cs，声明变量sprintSpeed，修改HandlerMovement方法</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">SerializeField</span>]</span><br><span class="line"><span class="keyword">float</span> sprintSpeed = <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleMovement</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (inputHandler.rollFlag)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    moveDirection = cameraObject.forward * inputHandler.vertical;</span><br><span class="line">    moveDirection += cameraObject.right * inputHandler.horizontal;</span><br><span class="line">    moveDirection.Normalize();</span><br><span class="line">    moveDirection.y = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> speed = movementSpeed;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (inputHandler.sprintFlag)</span><br><span class="line">    &#123;</span><br><span class="line">        speed = sprintSpeed;</span><br><span class="line">        isSprinting = <span class="literal">true</span>;</span><br><span class="line">        moveDirection *= speed;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        moveDirection *= speed;  </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Vector3 projectedVelocity = Vector3.ProjectOnPlane(moveDirection, normalVector);</span><br><span class="line">    rigidbody.velocity = projectedVelocity;</span><br><span class="line"></span><br><span class="line">    animatorHandler.UpdateAnimatorValues(inputHandler.moveAmount, <span class="number">0</span>, isSprinting);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (animatorHandler.canRotate)</span><br><span class="line">    &#123;</span><br><span class="line">        HandleRotation(delta);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Update方法里添加对isSprinting的赋值；</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> delta = Time.deltaTime;</span><br><span class="line"></span><br><span class="line">    isSprinting = inputHandler.b_Input;</span><br><span class="line">    inputHandler.TickInput(delta);</span><br><span class="line">    HandleMovement(delta);</span><br><span class="line">    HandleRollingAndSprinting(delta);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打开PlayerManager,cs，修改Update方法</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    inputHandler.isInteracting = anim.GetBool(<span class="string">"IsInteracting"</span>);</span><br><span class="line">    inputHandler.rollFlag = <span class="literal">false</span>;</span><br><span class="line">    inputHandler.sprintFlag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存所有脚本，播放游戏，控制角色移动并按住键盘左Shift键或手柄B键，角色冲刺。</p><h2 id="三、脚本汇总"><a href="#三、脚本汇总" class="headerlink" title="三、脚本汇总"></a>三、脚本汇总</h2><h3 id="AnimatorHandler-cs"><a href="#AnimatorHandler-cs" class="headerlink" title="AnimatorHandler.cs"></a>AnimatorHandler.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span> &#123; </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AnimatorHandler</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> Animator anim;</span><br><span class="line">        <span class="keyword">public</span> InputHandler inputHandler;</span><br><span class="line">        <span class="keyword">public</span> PlayerLocomotion playerLocomotion;</span><br><span class="line">        <span class="keyword">int</span> vertical;</span><br><span class="line">        <span class="keyword">int</span> horizontal;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> canRotate;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Initialize</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            anim = GetComponent&lt;Animator&gt;();</span><br><span class="line">            inputHandler = GetComponentInParent&lt;InputHandler&gt;();</span><br><span class="line">            playerLocomotion = GetComponentInParent&lt;PlayerLocomotion&gt;();</span><br><span class="line">            vertical = Animator.StringToHash(<span class="string">"Vertical"</span>);</span><br><span class="line">            horizontal = Animator.StringToHash(<span class="string">"Horizontal"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UpdateAnimatorValues</span>(<span class="params"><span class="keyword">float</span> verticalMovement, <span class="keyword">float</span> horizontalMovement, <span class="keyword">bool</span> isSprinting</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span> Vertical</span></span><br><span class="line">            <span class="keyword">float</span> v = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(verticalMovement &gt; <span class="number">0</span> &amp;&amp; verticalMovement &lt; <span class="number">0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">0.5f</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(verticalMovement &gt; <span class="number">0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(verticalMovement &lt; <span class="number">0</span> &amp;&amp; verticalMovement &gt; <span class="number">-0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">-0.5f</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(verticalMovement &lt; <span class="number">-0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span> Horizontal</span></span><br><span class="line">            <span class="keyword">float</span> h = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(horizontalMovement &gt; <span class="number">0</span> &amp;&amp; horizontalMovement &lt; <span class="number">0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                h = <span class="number">0.5f</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(horizontalMovement &gt; <span class="number">0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                h = <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(horizontalMovement &lt; <span class="number">0</span> &amp;&amp; horizontalMovement &gt; <span class="number">-0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                h = <span class="number">-0.5f</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(verticalMovement &lt; <span class="number">-0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                h = <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                h = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (isSprinting)</span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">2</span>;</span><br><span class="line">                h = horizontalMovement;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            anim.SetFloat(vertical, v, <span class="number">0.1f</span>, Time.deltaTime);</span><br><span class="line">            anim.SetFloat(horizontal, h, <span class="number">0.1f</span>, Time.deltaTime);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">PlayerTargetAnimation</span>(<span class="params"><span class="keyword">string</span> targetAnim, <span class="keyword">bool</span> isInteracting</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            anim.applyRootMotion = isInteracting;</span><br><span class="line">            anim.SetBool(<span class="string">"IsInteracting"</span>, <span class="literal">true</span>);</span><br><span class="line">            anim.CrossFade(targetAnim, <span class="number">0.2f</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">CanRotate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            canRotate = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">StopRotate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            canRotate = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnAnimatorMove</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (inputHandler.isInteracting == <span class="literal">false</span>)</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">float</span> delta = Time.deltaTime;</span><br><span class="line">            playerLocomotion.rigidbody.drag = <span class="number">0</span>;</span><br><span class="line">            Vector3 deltaPosition = anim.deltaPosition;</span><br><span class="line">            deltaPosition.y = <span class="number">0</span>;</span><br><span class="line">            Vector3 velocity = deltaPosition / delta;</span><br><span class="line">            playerLocomotion.rigidbody.velocity = velocity;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="InputHandler-cs"><a href="#InputHandler-cs" class="headerlink" title="InputHandler.cs"></a>InputHandler.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span> &#123; </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">InputHandler</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> horizontal;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> vertical;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> moveAmount;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> mouseX;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> mouseY;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> b_Input;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> rollFlag;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> sprintFlag;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> rollInputTimer;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> isInteracting;</span><br><span class="line"></span><br><span class="line">        PlayerControls inputActions;</span><br><span class="line">        CameraHandler cameraHandler;</span><br><span class="line"></span><br><span class="line">        Vector2 movementInput;</span><br><span class="line">        Vector2 cameraInput;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            cameraHandler = CameraHandler.singleton;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FixedUpdate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">float</span> delta = Time.fixedDeltaTime;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(cameraHandler != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cameraHandler.FollowTarget(delta);</span><br><span class="line">                cameraHandler.HandleCameraRotation(delta, mouseX, mouseY);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnEnable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span>(inputActions == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                inputActions = <span class="keyword">new</span> PlayerControls();</span><br><span class="line">                inputActions.PlayerMovement.Movement.performed += inputActions =&gt; movementInput = inputActions.ReadValue&lt;Vector2&gt;();</span><br><span class="line">                inputActions.PlayerMovement.Camera.performed += i =&gt; cameraInput = i.ReadValue&lt;Vector2&gt;();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            inputActions.Enable();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDisable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            inputActions.Disable();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TickInput</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MoveInput(delta);</span><br><span class="line">            HandleRollInput(delta);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MoveInput</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            horizontal = movementInput.x;</span><br><span class="line">            vertical = movementInput.y;</span><br><span class="line">            moveAmount = Mathf.Clamp01(Mathf.Abs(horizontal) + Mathf.Abs(vertical));</span><br><span class="line">            mouseX = cameraInput.x;</span><br><span class="line">            mouseY = cameraInput.y;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">HandleRollInput</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            b_Input = inputActions.PlayerAction.Roll.phase == UnityEngine.InputSystem.InputActionPhase.Started;</span><br><span class="line">            <span class="keyword">if</span> (b_Input)</span><br><span class="line">            &#123;</span><br><span class="line">                rollInputTimer += delta;</span><br><span class="line">                sprintFlag = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(rollInputTimer &gt; <span class="number">0</span> &amp;&amp; rollInputTimer &lt; <span class="number">0.5f</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    sprintFlag = <span class="literal">false</span>;</span><br><span class="line">                    rollFlag = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                rollInputTimer = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PlayerLocomotion-cs"><a href="#PlayerLocomotion-cs" class="headerlink" title="PlayerLocomotion.cs"></a>PlayerLocomotion.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span> &#123; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerLocomotion</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        Transform cameraObject;</span><br><span class="line">        InputHandler inputHandler;</span><br><span class="line">        Vector3 moveDirection;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">HideInInspector</span>]</span><br><span class="line">        <span class="keyword">public</span> Transform myTransform;</span><br><span class="line">        [<span class="meta">HideInInspector</span>]</span><br><span class="line">        <span class="keyword">public</span> AnimatorHandler animatorHandler;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">new</span> Rigidbody rigidbody;</span><br><span class="line">        <span class="keyword">public</span> GameObject normalCamera;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Stats"</span>)</span>]</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">float</span> movementSpeed = <span class="number">5</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">float</span> sprintSpeed = <span class="number">7</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">float</span> rotationSpeed = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> isSprinting;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            rigidbody = GetComponent&lt;Rigidbody&gt;();</span><br><span class="line">            inputHandler = GetComponent&lt;InputHandler&gt;();</span><br><span class="line">            animatorHandler = GetComponentInChildren&lt;AnimatorHandler&gt;();</span><br><span class="line">            cameraObject = Camera.main.transform;</span><br><span class="line">            myTransform = transform;</span><br><span class="line">            animatorHandler.Initialize();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">float</span> delta = Time.deltaTime;</span><br><span class="line"></span><br><span class="line">            isSprinting = inputHandler.b_Input;</span><br><span class="line">            inputHandler.TickInput(delta);</span><br><span class="line">            HandleMovement(delta);</span><br><span class="line">            HandleRollingAndSprinting(delta);</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">region</span> Movement</span></span><br><span class="line">        Vector3 normalVector;</span><br><span class="line">        Vector3 targetPostion;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">HandleRotation</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Vector3 targetDir = Vector3.zero;</span><br><span class="line">            <span class="keyword">float</span> moveOverride = inputHandler.moveAmount;</span><br><span class="line"></span><br><span class="line">            targetDir = cameraObject.forward * inputHandler.vertical;</span><br><span class="line">            targetDir += cameraObject.right * inputHandler.horizontal;</span><br><span class="line"></span><br><span class="line">            targetDir.Normalize();</span><br><span class="line">            targetDir.y = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(targetDir == Vector3.zero)</span><br><span class="line">            &#123;</span><br><span class="line">                targetDir = myTransform.forward;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">float</span> rs = rotationSpeed;</span><br><span class="line">            Quaternion tr = Quaternion.LookRotation(targetDir);</span><br><span class="line">            Quaternion targetRotation = Quaternion.Slerp(myTransform.rotation, tr, rs * delta);</span><br><span class="line"></span><br><span class="line">            myTransform.rotation = targetRotation;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleMovement</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (inputHandler.rollFlag)</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            moveDirection = cameraObject.forward * inputHandler.vertical;</span><br><span class="line">            moveDirection += cameraObject.right * inputHandler.horizontal;</span><br><span class="line">            moveDirection.Normalize();</span><br><span class="line">            moveDirection.y = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">float</span> speed = movementSpeed;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (inputHandler.sprintFlag)</span><br><span class="line">            &#123;</span><br><span class="line">                speed = sprintSpeed;</span><br><span class="line">                isSprinting = <span class="literal">true</span>;</span><br><span class="line">                moveDirection *= speed;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                moveDirection *= speed;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Vector3 projectedVelocity = Vector3.ProjectOnPlane(moveDirection, normalVector);</span><br><span class="line">            rigidbody.velocity = projectedVelocity;</span><br><span class="line"></span><br><span class="line">            animatorHandler.UpdateAnimatorValues(inputHandler.moveAmount, <span class="number">0</span>, isSprinting);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (animatorHandler.canRotate)</span><br><span class="line">            &#123;</span><br><span class="line">                HandleRotation(delta);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleRollingAndSprinting</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (animatorHandler.anim.GetBool(<span class="string">"IsInteracting"</span>))</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            <span class="keyword">if</span> (inputHandler.rollFlag)</span><br><span class="line">            &#123;</span><br><span class="line">                moveDirection = cameraObject.forward * inputHandler.vertical;</span><br><span class="line">                moveDirection += cameraObject.right * inputHandler.horizontal;</span><br><span class="line">                <span class="keyword">if</span>(inputHandler.moveAmount &gt; <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    animatorHandler.PlayerTargetAnimation(<span class="string">"Rolling"</span>, <span class="literal">true</span>);</span><br><span class="line">                    moveDirection.y = <span class="number">0</span>;</span><br><span class="line">                    Quaternion rollRotation = Quaternion.LookRotation(moveDirection);</span><br><span class="line">                    myTransform.rotation = rollRotation;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    animatorHandler.PlayerTargetAnimation(<span class="string">"Step_Back"</span>, <span class="literal">true</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PlayerManager-cs"><a href="#PlayerManager-cs" class="headerlink" title="PlayerManager.cs"></a>PlayerManager.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerManager</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        InputHandler inputHandler;</span><br><span class="line">        Animator anim;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            inputHandler = GetComponent&lt;InputHandler&gt;();</span><br><span class="line">            anim = GetComponentInChildren&lt;Animator&gt;();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            inputHandler.isInteracting = anim.GetBool(<span class="string">"IsInteracting"</span>);</span><br><span class="line">            inputHandler.rollFlag = <span class="literal">false</span>;</span><br><span class="line">            inputHandler.sprintFlag = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DarkSoulsDemo（四）角色翻滚与后撤闪避</title>
      <link href="/2020/06/20/DarkSoulsDemo%EF%BC%88%E5%9B%9B%EF%BC%89%E8%A7%92%E8%89%B2%E7%BF%BB%E6%BB%9A%E4%B8%8E%E5%90%8E%E6%92%A4%E9%97%AA%E9%81%BF/"/>
      <url>/2020/06/20/DarkSoulsDemo%EF%BC%88%E5%9B%9B%EF%BC%89%E8%A7%92%E8%89%B2%E7%BF%BB%E6%BB%9A%E4%B8%8E%E5%90%8E%E6%92%A4%E9%97%AA%E9%81%BF/</url>
      
        <content type="html"><![CDATA[<p>关键词：脚本控制</p><a id="more"></a><p>本篇出自：<a href="https://www.youtube.com/watch?v=RVWh-YAQElQ" target="_blank" rel="noopener">https://www.youtube.com/watch?v=RVWh-YAQElQ</a></p><p>资源链接：<a href="https://assetstore.unity.com/packages/3d/animations/runner-action-animation-pack-153906" target="_blank" rel="noopener">https://assetstore.unity.com/packages/3d/animations/runner-action-animation-pack-153906</a></p><p>本篇中只用到Runner Action Animation Pack中的两个动画片段：</p><p>CLazy@Esc_StandRoll_JFront_Root、CLazy@Esc_BoostDash_Back_Root</p><h2 id="一、添加动画状态"><a href="#一、添加动画状态" class="headerlink" title="一、添加动画状态"></a>一、添加动画状态</h2><p>导入动画资源后，打开Humanoid动画控制器，进到Base Layer层，直接从项目窗口拖拽动画片段CLazy@Esc_StandRoll_JFront和CLazy@Esc_BoostDash_Back到Animator窗口中直接生成两个动画状态，分别重命名为Rolling、Step_Back。</p><p>建立两个转变关系：</p><p>Rolling =&gt; Locomotion</p><p>Step_Back =&gt; Locomotion</p><p>添加Bool类型参数IsInteracting</p><p><img src="/2020/06/20/DarkSoulsDemo%EF%BC%88%E5%9B%9B%EF%BC%89%E8%A7%92%E8%89%B2%E7%BF%BB%E6%BB%9A%E4%B8%8E%E5%90%8E%E6%92%A4%E9%97%AA%E9%81%BF/image-20200620164015991.png" alt="image-20200620164015991"></p><h2 id="二、编辑脚本"><a href="#二、编辑脚本" class="headerlink" title="二、编辑脚本"></a>二、编辑脚本</h2><p>打开PlayerLocomotion.cs，将下边的代码块封装成一个HandleMovement方法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">moveDirection = cameraObject.forward * inputHandler.vertical;</span><br><span class="line">moveDirection += cameraObject.right * inputHandler.horizontal;</span><br><span class="line">moveDirection.Normalize();</span><br><span class="line">moveDirection.y = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> speed = movementSpeed;</span><br><span class="line">moveDirection *= speed;</span><br><span class="line"></span><br><span class="line">Vector3 projectedVelocity = Vector3.ProjectOnPlane(moveDirection, normalVector);</span><br><span class="line">rigidbody.velocity = projectedVelocity;</span><br><span class="line"></span><br><span class="line">animatorHandler.UpdateAnimatorValues(inputHandler.moveAmount, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (animatorHandler.canRotate)</span><br><span class="line">&#123;</span><br><span class="line">    HandleRotation(delta);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>改完以后：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> delta = Time.deltaTime;</span><br><span class="line">    inputHandler.TickInput(delta);</span><br><span class="line">    HandleMovement(delta);</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">HandleRotation</span>(<span class="params"><span class="keyword">float</span> delta</span>)...</span></span><br><span class="line"><span class="function">        </span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleMovement</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    moveDirection = cameraObject.forward * inputHandler.vertical;</span><br><span class="line">    moveDirection += cameraObject.right * inputHandler.horizontal;</span><br><span class="line">    moveDirection.Normalize();</span><br><span class="line">    moveDirection.y = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> speed = movementSpeed;</span><br><span class="line">    moveDirection *= speed;</span><br><span class="line"></span><br><span class="line">    Vector3 projectedVelocity = Vector3.ProjectOnPlane(moveDirection, normalVector);</span><br><span class="line">    rigidbody.velocity = projectedVelocity;</span><br><span class="line"></span><br><span class="line">    animatorHandler.UpdateAnimatorValues(inputHandler.moveAmount, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (animatorHandler.canRotate)</span><br><span class="line">    &#123;</span><br><span class="line">        HandleRotation(delta);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打开AnimatorHandler.cs，添加方法PlayerTargetAnimation</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">PlayerTargetAnimation</span>(<span class="params"><span class="keyword">string</span> targetAnim, <span class="keyword">bool</span> isInteracting</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    anim.applyRootMotion = isInteracting;</span><br><span class="line">    anim.SetBool(<span class="string">"IsInteracting"</span>, <span class="literal">true</span>);</span><br><span class="line">    anim.CrossFade(targetAnim, <span class="number">0.2f</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、绑定按键"><a href="#三、绑定按键" class="headerlink" title="三、绑定按键"></a>三、绑定按键</h2><p>回到Unity编辑器，打开PlayerControls，添加Action Map，命名为Player Action。添加Action，取名Roll，Action Type为Button，添加绑定Button East [Gamepad]、Left Shift [Keyboard]。</p><p><img src="/2020/06/20/DarkSoulsDemo%EF%BC%88%E5%9B%9B%EF%BC%89%E8%A7%92%E8%89%B2%E7%BF%BB%E6%BB%9A%E4%B8%8E%E5%90%8E%E6%92%A4%E9%97%AA%E9%81%BF/image-20200620165518739.png" alt="image-20200620165518739"></p><p>打开InputHandler.cs，添加声明bool类型变量b_Input、rollFlag，编写方法HandleRollInput：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">bool</span> b_Input;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">bool</span> rollFlag;</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">HandleRollInput</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b_Input)</span><br><span class="line">    &#123;</span><br><span class="line">        rollFlag = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、脚本管理翻滚和后撤步动画"><a href="#四、脚本管理翻滚和后撤步动画" class="headerlink" title="四、脚本管理翻滚和后撤步动画"></a>四、脚本管理翻滚和后撤步动画</h2><p>打开PlayerLocomotion.cs，添加方法HandleRollingAndSprinting</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleRollingAndSprinting</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (animatorHandler.anim.GetBool(<span class="string">"IsInteracting"</span>))</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (inputHandler.rollFlag)</span><br><span class="line">    &#123;</span><br><span class="line">        moveDirection = cameraObject.forward * inputHandler.vertical;</span><br><span class="line">        moveDirection += cameraObject.right * inputHandler.horizontal;</span><br><span class="line">        <span class="keyword">if</span>(inputHandler.moveAmount &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            animatorHandler.PlayerTargetAnimation(<span class="string">"Rolling"</span>, <span class="literal">true</span>);</span><br><span class="line">            moveDirection.y = <span class="number">0</span>;</span><br><span class="line">            Quaternion rollRotation = Quaternion.LookRotation(moveDirection);</span><br><span class="line">            myTransform.rotation = rollRotation;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            animatorHandler.PlayerTargetAnimation(<span class="string">"Step_Back"</span>, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>回到InputHandler.cs，调用HandleRollInput，在HandleRollInpu里t补充对b_Input赋值。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TickInput</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    MoveInput(delta);</span><br><span class="line">    HandleRollInput(delta);</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">HandleRollInput</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    b_Input = inputActions.PlayerAction.Roll.phase == UnityEngine.InputSystem.InputActionPhase.Started;</span><br><span class="line">    <span class="keyword">if</span> (b_Input)</span><br><span class="line">    &#123;</span><br><span class="line">        rollFlag = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>切到PlayerLocomotion.cs，在Update方法里调用HandleRollingAndSprinting方法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> delta = Time.deltaTime;</span><br><span class="line"></span><br><span class="line">    inputHandler.TickInput(delta);</span><br><span class="line">    HandleMovement(delta);</span><br><span class="line">    HandleRollingAndSprinting(delta);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这时候播放游戏，角色随可以翻滚，但突然四处乱飘，接下来解决这个问题。</p><h2 id="五、管理互动权限"><a href="#五、管理互动权限" class="headerlink" title="五、管理互动权限"></a>五、管理互动权限</h2><p>首先在InputHandler.cs里声明bool类型公共变量isInteracting。</p><p>新建脚本PlayerManager.cs，编写代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerManager</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        InputHandler inputHandler;</span><br><span class="line">        Animator anim;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            inputHandler = GetComponent&lt;InputHandler&gt;();</span><br><span class="line">            anim = GetComponentInChildren&lt;Animator&gt;();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            inputHandler.isInteracting = anim.GetBool(<span class="string">"IsInteracting"</span>);</span><br><span class="line">            inputHandler.rollFlag = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>回到Animator窗口，选中Rolling窗台，在Inspector点击Add Behaviour，命名ResetIsInteracting，创建并添加脚本。</p><p><img src="/2020/06/20/DarkSoulsDemo%EF%BC%88%E5%9B%9B%EF%BC%89%E8%A7%92%E8%89%B2%E7%BF%BB%E6%BB%9A%E4%B8%8E%E5%90%8E%E6%92%A4%E9%97%AA%E9%81%BF/image-20200620173856244.png" alt="image-20200620173856244"></p><p>ResetIsInteracting.cs编写如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ResetIsInteracting</span> : <span class="title">StateMachineBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// OnStateExit is called when a transition ends and the state machine finishes evaluating this state</span></span><br><span class="line">    <span class="function"><span class="keyword">override</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnStateExit</span>(<span class="params">Animator animator, AnimatorStateInfo stateInfo, <span class="keyword">int</span> layerIndex</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        animator.SetBool(<span class="string">"IsInteracting"</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对Step_Back也应用上该脚本</p><p><img src="/2020/06/20/DarkSoulsDemo%EF%BC%88%E5%9B%9B%EF%BC%89%E8%A7%92%E8%89%B2%E7%BF%BB%E6%BB%9A%E4%B8%8E%E5%90%8E%E6%92%A4%E9%97%AA%E9%81%BF/image-20200620174243260.png" alt="image-20200620174243260"></p><p>在AnimatorHandler.cs里声明变量inputHandler和playerLocomotion，在Initialize方法里获取，添加OnAnimatorMove方法。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> InputHandler inputHandler;</span><br><span class="line"><span class="keyword">public</span> PlayerLocomotion playerLocomotion;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Initialize</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    anim = GetComponent&lt;Animator&gt;();</span><br><span class="line">    inputHandler = GetComponentInParent&lt;InputHandler&gt;();</span><br><span class="line">    playerLocomotion = GetComponentInParent&lt;PlayerLocomotion&gt;();</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnAnimatorMove</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (inputHandler.isInteracting == <span class="literal">false</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> delta = Time.deltaTime;</span><br><span class="line">    playerLocomotion.rigidbody.drag = <span class="number">0</span>;</span><br><span class="line">    Vector3 deltaPosition = anim.deltaPosition;</span><br><span class="line">    deltaPosition.y = <span class="number">0</span>;</span><br><span class="line">    Vector3 velocity = deltaPosition / delta;</span><br><span class="line">    playerLocomotion.rigidbody.velocity = velocity;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>给Player添加PlayerLocomotion脚本</p><p><img src="/2020/06/20/DarkSoulsDemo%EF%BC%88%E5%9B%9B%EF%BC%89%E8%A7%92%E8%89%B2%E7%BF%BB%E6%BB%9A%E4%B8%8E%E5%90%8E%E6%92%A4%E9%97%AA%E9%81%BF/image-20200620175732776.png" alt="image-20200620175732776"></p><p>好，现在播放游戏，可以在按方向键的同时按键盘左Shift键实现角色翻滚，单按Shift键原地后撤步闪避了。翻滚姿势截图有点丑，将就看吧。</p><p><img src="/2020/06/20/DarkSoulsDemo%EF%BC%88%E5%9B%9B%EF%BC%89%E8%A7%92%E8%89%B2%E7%BF%BB%E6%BB%9A%E4%B8%8E%E5%90%8E%E6%92%A4%E9%97%AA%E9%81%BF/image-20200620183304778.png" alt="image-20200620183304778"></p><p><img src="/2020/06/20/DarkSoulsDemo%EF%BC%88%E5%9B%9B%EF%BC%89%E8%A7%92%E8%89%B2%E7%BF%BB%E6%BB%9A%E4%B8%8E%E5%90%8E%E6%92%A4%E9%97%AA%E9%81%BF/image-20200620183355596.png" alt="image-20200620183355596"></p><p><img src="/2020/06/20/DarkSoulsDemo%EF%BC%88%E5%9B%9B%EF%BC%89%E8%A7%92%E8%89%B2%E7%BF%BB%E6%BB%9A%E4%B8%8E%E5%90%8E%E6%92%A4%E9%97%AA%E9%81%BF/image-20200620183523775.png" alt="image-20200620183523775"></p><h2 id="六、脚本汇总"><a href="#六、脚本汇总" class="headerlink" title="六、脚本汇总"></a>六、脚本汇总</h2><h3 id="InputHandler-cs"><a href="#InputHandler-cs" class="headerlink" title="InputHandler.cs"></a>InputHandler.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span> &#123; </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">InputHandler</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> horizontal;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> vertical;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> moveAmount;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> mouseX;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> mouseY;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> b_Input;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> rollFlag;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> isInteracting;</span><br><span class="line"></span><br><span class="line">        PlayerControls inputActions;</span><br><span class="line">        CameraHandler cameraHandler;</span><br><span class="line"></span><br><span class="line">        Vector2 movementInput;</span><br><span class="line">        Vector2 cameraInput;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            cameraHandler = CameraHandler.singleton;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FixedUpdate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">float</span> delta = Time.fixedDeltaTime;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(cameraHandler != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cameraHandler.FollowTarget(delta);</span><br><span class="line">                cameraHandler.HandleCameraRotation(delta, mouseX, mouseY);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnEnable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span>(inputActions == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                inputActions = <span class="keyword">new</span> PlayerControls();</span><br><span class="line">                inputActions.PlayerMovement.Movement.performed += inputActions =&gt; movementInput = inputActions.ReadValue&lt;Vector2&gt;();</span><br><span class="line">                inputActions.PlayerMovement.Camera.performed += i =&gt; cameraInput = i.ReadValue&lt;Vector2&gt;();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            inputActions.Enable();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDisable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            inputActions.Disable();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TickInput</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MoveInput(delta);</span><br><span class="line">            HandleRollInput(delta);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MoveInput</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            horizontal = movementInput.x;</span><br><span class="line">            vertical = movementInput.y;</span><br><span class="line">            moveAmount = Mathf.Clamp01(Mathf.Abs(horizontal) + Mathf.Abs(vertical));</span><br><span class="line">            mouseX = cameraInput.x;</span><br><span class="line">            mouseY = cameraInput.y;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">HandleRollInput</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            b_Input = inputActions.PlayerAction.Roll.phase == UnityEngine.InputSystem.InputActionPhase.Started;</span><br><span class="line">            <span class="keyword">if</span> (b_Input)</span><br><span class="line">            &#123;</span><br><span class="line">                rollFlag = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PlayerLocomotion-cs"><a href="#PlayerLocomotion-cs" class="headerlink" title="PlayerLocomotion.cs"></a>PlayerLocomotion.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span> &#123; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerLocomotion</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        Transform cameraObject;</span><br><span class="line">        InputHandler inputHandler;</span><br><span class="line">        Vector3 moveDirection;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">HideInInspector</span>]</span><br><span class="line">        <span class="keyword">public</span> Transform myTransform;</span><br><span class="line">        [<span class="meta">HideInInspector</span>]</span><br><span class="line">        <span class="keyword">public</span> AnimatorHandler animatorHandler;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">new</span> Rigidbody rigidbody;</span><br><span class="line">        <span class="keyword">public</span> GameObject normalCamera;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Stats"</span>)</span>]</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">float</span> movementSpeed = <span class="number">5</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">float</span> rotationSpeed = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            rigidbody = GetComponent&lt;Rigidbody&gt;();</span><br><span class="line">            inputHandler = GetComponent&lt;InputHandler&gt;();</span><br><span class="line">            animatorHandler = GetComponentInChildren&lt;AnimatorHandler&gt;();</span><br><span class="line">            cameraObject = Camera.main.transform;</span><br><span class="line">            myTransform = transform;</span><br><span class="line">            animatorHandler.Initialize();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">float</span> delta = Time.deltaTime;</span><br><span class="line"></span><br><span class="line">            inputHandler.TickInput(delta);</span><br><span class="line">            HandleMovement(delta);</span><br><span class="line">            HandleRollingAndSprinting(delta);</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">region</span> Movement</span></span><br><span class="line">        Vector3 normalVector;</span><br><span class="line">        Vector3 targetPostion;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">HandleRotation</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Vector3 targetDir = Vector3.zero;</span><br><span class="line">            <span class="keyword">float</span> moveOverride = inputHandler.moveAmount;</span><br><span class="line"></span><br><span class="line">            targetDir = cameraObject.forward * inputHandler.vertical;</span><br><span class="line">            targetDir += cameraObject.right * inputHandler.horizontal;</span><br><span class="line"></span><br><span class="line">            targetDir.Normalize();</span><br><span class="line">            targetDir.y = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(targetDir == Vector3.zero)</span><br><span class="line">            &#123;</span><br><span class="line">                targetDir = myTransform.forward;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">float</span> rs = rotationSpeed;</span><br><span class="line">            Quaternion tr = Quaternion.LookRotation(targetDir);</span><br><span class="line">            Quaternion targetRotation = Quaternion.Slerp(myTransform.rotation, tr, rs * delta);</span><br><span class="line"></span><br><span class="line">            myTransform.rotation = targetRotation;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleMovement</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            moveDirection = cameraObject.forward * inputHandler.vertical;</span><br><span class="line">            moveDirection += cameraObject.right * inputHandler.horizontal;</span><br><span class="line">            moveDirection.Normalize();</span><br><span class="line">            moveDirection.y = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">float</span> speed = movementSpeed;</span><br><span class="line">            moveDirection *= speed;</span><br><span class="line"></span><br><span class="line">            Vector3 projectedVelocity = Vector3.ProjectOnPlane(moveDirection, normalVector);</span><br><span class="line">            rigidbody.velocity = projectedVelocity;</span><br><span class="line"></span><br><span class="line">            animatorHandler.UpdateAnimatorValues(inputHandler.moveAmount, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (animatorHandler.canRotate)</span><br><span class="line">            &#123;</span><br><span class="line">                HandleRotation(delta);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleRollingAndSprinting</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (animatorHandler.anim.GetBool(<span class="string">"IsInteracting"</span>))</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            <span class="keyword">if</span> (inputHandler.rollFlag)</span><br><span class="line">            &#123;</span><br><span class="line">                moveDirection = cameraObject.forward * inputHandler.vertical;</span><br><span class="line">                moveDirection += cameraObject.right * inputHandler.horizontal;</span><br><span class="line">                <span class="keyword">if</span>(inputHandler.moveAmount &gt; <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    animatorHandler.PlayerTargetAnimation(<span class="string">"Rolling"</span>, <span class="literal">true</span>);</span><br><span class="line">                    moveDirection.y = <span class="number">0</span>;</span><br><span class="line">                    Quaternion rollRotation = Quaternion.LookRotation(moveDirection);</span><br><span class="line">                    myTransform.rotation = rollRotation;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    animatorHandler.PlayerTargetAnimation(<span class="string">"Step_Back"</span>, <span class="literal">true</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="AnimatorHandler-cs"><a href="#AnimatorHandler-cs" class="headerlink" title="AnimatorHandler.cs"></a>AnimatorHandler.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span> &#123; </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AnimatorHandler</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> Animator anim;</span><br><span class="line">        <span class="keyword">public</span> InputHandler inputHandler;</span><br><span class="line">        <span class="keyword">public</span> PlayerLocomotion playerLocomotion;</span><br><span class="line">        <span class="keyword">int</span> vertical;</span><br><span class="line">        <span class="keyword">int</span> horizontal;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> canRotate;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Initialize</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            anim = GetComponent&lt;Animator&gt;();</span><br><span class="line">            inputHandler = GetComponentInParent&lt;InputHandler&gt;();</span><br><span class="line">            playerLocomotion = GetComponentInParent&lt;PlayerLocomotion&gt;();</span><br><span class="line">            vertical = Animator.StringToHash(<span class="string">"Vertical"</span>);</span><br><span class="line">            horizontal = Animator.StringToHash(<span class="string">"Horizontal"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UpdateAnimatorValues</span>(<span class="params"><span class="keyword">float</span> verticalMovement, <span class="keyword">float</span> horizontalMovement</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span> Vertical</span></span><br><span class="line">            <span class="keyword">float</span> v = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(verticalMovement &gt; <span class="number">0</span> &amp;&amp; verticalMovement &lt; <span class="number">0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">0.5f</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(verticalMovement &gt; <span class="number">0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(verticalMovement &lt; <span class="number">0</span> &amp;&amp; verticalMovement &gt; <span class="number">-0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">-0.5f</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(verticalMovement &lt; <span class="number">-0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span> Horizontal</span></span><br><span class="line">            <span class="keyword">float</span> h = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(horizontalMovement &gt; <span class="number">0</span> &amp;&amp; horizontalMovement &lt; <span class="number">0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                h = <span class="number">0.5f</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(horizontalMovement &gt; <span class="number">0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                h = <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(horizontalMovement &lt; <span class="number">0</span> &amp;&amp; horizontalMovement &gt; <span class="number">-0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                h = <span class="number">-0.5f</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(verticalMovement &lt; <span class="number">-0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                h = <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                h = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">            anim.SetFloat(vertical, v, <span class="number">0.1f</span>, Time.deltaTime);</span><br><span class="line">            anim.SetFloat(horizontal, h, <span class="number">0.1f</span>, Time.deltaTime);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">PlayerTargetAnimation</span>(<span class="params"><span class="keyword">string</span> targetAnim, <span class="keyword">bool</span> isInteracting</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            anim.applyRootMotion = isInteracting;</span><br><span class="line">            anim.SetBool(<span class="string">"IsInteracting"</span>, <span class="literal">true</span>);</span><br><span class="line">            anim.CrossFade(targetAnim, <span class="number">0.2f</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">CanRotate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            canRotate = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">StopRotate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            canRotate = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnAnimatorMove</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (inputHandler.isInteracting == <span class="literal">false</span>)</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">float</span> delta = Time.deltaTime;</span><br><span class="line">            playerLocomotion.rigidbody.drag = <span class="number">0</span>;</span><br><span class="line">            Vector3 deltaPosition = anim.deltaPosition;</span><br><span class="line">            deltaPosition.y = <span class="number">0</span>;</span><br><span class="line">            Vector3 velocity = deltaPosition / delta;</span><br><span class="line">            playerLocomotion.rigidbody.velocity = velocity;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PlayerManager-cs"><a href="#PlayerManager-cs" class="headerlink" title="PlayerManager.cs"></a>PlayerManager.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerManager</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        InputHandler inputHandler;</span><br><span class="line">        Animator anim;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            inputHandler = GetComponent&lt;InputHandler&gt;();</span><br><span class="line">            anim = GetComponentInChildren&lt;Animator&gt;();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            inputHandler.isInteracting = anim.GetBool(<span class="string">"IsInteracting"</span>);</span><br><span class="line">            inputHandler.rollFlag = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ResetIsInteracting-cs"><a href="#ResetIsInteracting-cs" class="headerlink" title="ResetIsInteracting.cs"></a>ResetIsInteracting.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ResetIsInteracting</span> : <span class="title">StateMachineBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// OnStateExit is called when a transition ends and the state machine finishes evaluating this state</span></span><br><span class="line">    <span class="function"><span class="keyword">override</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnStateExit</span>(<span class="params">Animator animator, AnimatorStateInfo stateInfo, <span class="keyword">int</span> layerIndex</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        animator.SetBool(<span class="string">"IsInteracting"</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DarkSoulsDemo（三）摄像机碰撞</title>
      <link href="/2020/06/20/DarkSoulsDemo%EF%BC%88%E4%B8%89%EF%BC%89%E6%91%84%E5%83%8F%E6%9C%BA%E7%A2%B0%E6%92%9E/"/>
      <url>/2020/06/20/DarkSoulsDemo%EF%BC%88%E4%B8%89%EF%BC%89%E6%91%84%E5%83%8F%E6%9C%BA%E7%A2%B0%E6%92%9E/</url>
      
        <content type="html"><![CDATA[<p>关键词：摄像机</p><a id="more"></a><p>本片出自：<a href="https://www.youtube.com/watch?v=Don3lGSAF2A" target="_blank" rel="noopener">https://www.youtube.com/watch?v=Don3lGSAF2A</a></p><p>给Plane围上围墙，播放游戏，角色走到墙边，如果移动鼠标使摄像机到墙里，角色会被墙挡住。接下来我们将解决这个问题</p><p><img src="/2020/06/20/DarkSoulsDemo%EF%BC%88%E4%B8%89%EF%BC%89%E6%91%84%E5%83%8F%E6%9C%BA%E7%A2%B0%E6%92%9E/image-20200620125145990.png" alt="image-20200620125145990"></p><h2 id="一、修改CameraHandler脚本"><a href="#一、修改CameraHandler脚本" class="headerlink" title="一、修改CameraHandler脚本"></a>一、修改CameraHandler脚本</h2><p>打开CameraHandler.cs，声明Vector3类型变量cameraFollowVelocity并初始化，修改FollowTarget方法。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">private</span> Vector3 cameraFollowVelocity = Vector3.zero;</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">FollowTarget</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Vector3 targetPosition = Vector3.SmoothDamp(myTransform.position,</span><br><span class="line">                                                targetTransform.position,</span><br><span class="line">                                                <span class="keyword">ref</span> cameraFollowVelocity,</span><br><span class="line">                                                delta / followSpeed);</span><br><span class="line">    myTransform.position = targetPosition;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>声明如下变量并初始化，编写方法HandleCameraCollision</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">float</span> cameraSphereRadius = <span class="number">0.2f</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">float</span> cameraCollisionOffSet = <span class="number">0.2f</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">float</span> minimumCollisionOffSet = <span class="number">0.2f</span>;</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">HandleCameraCollision</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    targetPosition = defaultPosition;</span><br><span class="line">    RaycastHit hit;</span><br><span class="line">    Vector3 direction = cameraTransform.position - cameraPivotTransform.position;</span><br><span class="line">    direction.Normalize();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(Physics.SphereCast(cameraPivotTransform.position,</span><br><span class="line">                          cameraSphereRadius,</span><br><span class="line">                          direction,</span><br><span class="line">                          <span class="keyword">out</span> hit,</span><br><span class="line">                          Mathf.Abs(targetPosition),</span><br><span class="line">                          ignoreLayers))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">float</span> dis = Vector3.Distance(cameraPivotTransform.position, hit.point);</span><br><span class="line">        targetPosition = -(dis - cameraCollisionOffSet);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(Mathf.Abs(targetPosition) &lt; minimumCollisionOffSet)</span><br><span class="line">    &#123;</span><br><span class="line">        targetPosition = -minimumCollisionOffSet;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cameraTransformPosition.z = Mathf.Lerp(cameraTransform.localPosition.z,</span><br><span class="line">                                           targetPosition,</span><br><span class="line">                                           delta / <span class="number">0.2f</span>);</span><br><span class="line">    cameraTransform.localPosition = cameraTransformPosition;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再次修改FollowTarget方法，调用HandleCameraCollision方法。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">FollowTarget</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Vector3 targetPosition = Vector3.SmoothDamp(myTransform.position, </span><br><span class="line">                                                targetTransform.position, <span class="keyword">ref</span> cameraFollowVelocity, delta / followSpeed);</span><br><span class="line">    myTransform.position = targetPosition;</span><br><span class="line">    HandleCameraCollision(delta);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二、修改层级，调整Camera-Pivot"><a href="#二、修改层级，调整Camera-Pivot" class="headerlink" title="二、修改层级，调整Camera Pivot"></a>二、修改层级，调整Camera Pivot</h2><p>回到Unity编辑器，修改Camera Holder、Camera Pivot的层级为Controller。</p><p><img src="/2020/06/20/DarkSoulsDemo%EF%BC%88%E4%B8%89%EF%BC%89%E6%91%84%E5%83%8F%E6%9C%BA%E7%A2%B0%E6%92%9E/image-20200620135924787.png" alt="image-20200620135924787"></p><p>调整Camera Pivot|Transform|Y到与角色的头部差不多高。</p><p><img src="/2020/06/20/DarkSoulsDemo%EF%BC%88%E4%B8%89%EF%BC%89%E6%91%84%E5%83%8F%E6%9C%BA%E7%A2%B0%E6%92%9E/image-20200620143727326.png" alt="image-20200620143727326"></p><p>播放游戏，控制角色走到墙边，此时摄像机再身后保持正常距离。</p><p><img src="/2020/06/20/DarkSoulsDemo%EF%BC%88%E4%B8%89%EF%BC%89%E6%91%84%E5%83%8F%E6%9C%BA%E7%A2%B0%E6%92%9E/image-20200620143124247.png" alt="image-20200620143124247"></p><p>移动鼠标使摄像机处在角色面前，摄像机与墙有碰撞而不会穿过墙。</p><p><img src="/2020/06/20/DarkSoulsDemo%EF%BC%88%E4%B8%89%EF%BC%89%E6%91%84%E5%83%8F%E6%9C%BA%E7%A2%B0%E6%92%9E/image-20200620143521391.png" alt="image-20200620143521391"></p><h2 id="三、脚本汇总"><a href="#三、脚本汇总" class="headerlink" title="三、脚本汇总"></a>三、脚本汇总</h2><h3 id="CameraHandler-cs"><a href="#CameraHandler-cs" class="headerlink" title="CameraHandler.cs"></a>CameraHandler.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CameraHandler</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> Transform targetTransform;</span><br><span class="line">        <span class="keyword">public</span> Transform cameraTransform;</span><br><span class="line">        <span class="keyword">public</span> Transform cameraPivotTransform;</span><br><span class="line">        <span class="keyword">private</span> Transform myTransform;</span><br><span class="line">        <span class="keyword">private</span> Vector3 cameraTransformPosition;</span><br><span class="line">        <span class="keyword">private</span> LayerMask ignoreLayers;</span><br><span class="line">        <span class="keyword">private</span> Vector3 cameraFollowVelocity = Vector3.zero;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> CameraHandler singleton;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> lookSpeed = <span class="number">0.1f</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> followSpeed = <span class="number">0.1f</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> pivotSpeed = <span class="number">0.03f</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> targetPosition;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> defaultPosition;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> lookAngle;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> pivotAngle;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> minimumPivot = <span class="number">-35</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> maximumPivot = <span class="number">35</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> cameraSphereRadius = <span class="number">0.2f</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> cameraCollisionOffSet = <span class="number">0.2f</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> minimumCollisionOffSet = <span class="number">0.2f</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            singleton = <span class="keyword">this</span>;</span><br><span class="line">            myTransform = transform;</span><br><span class="line">            defaultPosition = cameraTransform.localPosition.z;</span><br><span class="line">            ignoreLayers = ~(<span class="number">1</span> &lt;&lt; <span class="number">8</span> | <span class="number">1</span> &lt;&lt; <span class="number">9</span> | <span class="number">1</span> &lt;&lt; <span class="number">10</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">FollowTarget</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Vector3 targetPosition = Vector3.SmoothDamp(myTransform.position, </span><br><span class="line">                targetTransform.position, <span class="keyword">ref</span> cameraFollowVelocity, delta / followSpeed);</span><br><span class="line">            myTransform.position = targetPosition;</span><br><span class="line">            HandleCameraCollision(delta);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleCameraRotation</span>(<span class="params"><span class="keyword">float</span> delta, <span class="keyword">float</span> mouseXInput, <span class="keyword">float</span> mouseYInput</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            lookAngle += (mouseXInput * lookSpeed) / delta;</span><br><span class="line">            pivotAngle -= (mouseYInput * pivotSpeed) / delta;</span><br><span class="line">            pivotAngle = Mathf.Clamp(pivotAngle, minimumPivot, maximumPivot);</span><br><span class="line"></span><br><span class="line">            Vector3 rotation = Vector3.zero;</span><br><span class="line">            rotation.y = lookAngle;</span><br><span class="line">            Quaternion targetRotation = Quaternion.Euler(rotation);</span><br><span class="line">            myTransform.rotation = targetRotation;</span><br><span class="line"></span><br><span class="line">            rotation = Vector3.zero;</span><br><span class="line">            rotation.x = pivotAngle;</span><br><span class="line">            targetRotation = Quaternion.Euler(rotation);</span><br><span class="line">            cameraPivotTransform.localRotation = targetRotation;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">HandleCameraCollision</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            targetPosition = defaultPosition;</span><br><span class="line">            RaycastHit hit;</span><br><span class="line">            Vector3 direction = cameraTransform.position - cameraPivotTransform.position;</span><br><span class="line">            direction.Normalize();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(Physics.SphereCast(cameraPivotTransform.position,</span><br><span class="line">                cameraSphereRadius,</span><br><span class="line">                direction,</span><br><span class="line">                <span class="keyword">out</span> hit,</span><br><span class="line">                Mathf.Abs(targetPosition),</span><br><span class="line">                ignoreLayers))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">float</span> dis = Vector3.Distance(cameraPivotTransform.position, hit.point);</span><br><span class="line">                targetPosition = -(dis - cameraCollisionOffSet);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(Mathf.Abs(targetPosition) &lt; minimumCollisionOffSet)</span><br><span class="line">            &#123;</span><br><span class="line">                targetPosition = -minimumCollisionOffSet;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            cameraTransformPosition.z = Mathf.Lerp(cameraTransform.localPosition.z,</span><br><span class="line">                targetPosition,</span><br><span class="line">                delta / <span class="number">0.2f</span>);</span><br><span class="line">            cameraTransform.localPosition = cameraTransformPosition;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DarkSoulsDemo（二）摄像机管理器</title>
      <link href="/2020/06/19/DarkSoulsDemo%EF%BC%88%E4%BA%8C%EF%BC%89%E6%91%84%E5%83%8F%E6%9C%BA%E7%AE%A1%E7%90%86%E5%99%A8/"/>
      <url>/2020/06/19/DarkSoulsDemo%EF%BC%88%E4%BA%8C%EF%BC%89%E6%91%84%E5%83%8F%E6%9C%BA%E7%AE%A1%E7%90%86%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>关键词：摄像机管理脚本</p><a id="more"></a><p>本篇出自：<a href="https://www.youtube.com/watch?v=c1FYp1oOFIs" target="_blank" rel="noopener">https://www.youtube.com/watch?v=c1FYp1oOFIs</a></p><h2 id="一、布置摄像机"><a href="#一、布置摄像机" class="headerlink" title="一、布置摄像机"></a>一、布置摄像机</h2><p>在Hierarchy新建一个空物体，命名为Camera Holder，右键Camera Holder，新建一个空物体，命名为Camera Pivot，将Main Camera拖拽到Camera Pivot。</p><p><img src="/2020/06/19/DarkSoulsDemo%EF%BC%88%E4%BA%8C%EF%BC%89%E6%91%84%E5%83%8F%E6%9C%BA%E7%AE%A1%E7%90%86%E5%99%A8/image-20200620105630903.png" alt="image-20200620105630903"></p><h2 id="二、写脚本"><a href="#二、写脚本" class="headerlink" title="二、写脚本"></a>二、写脚本</h2><p>新建一个脚本，取名CameraHandler.cs，用VS2017打开，编写代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CameraHandler</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> Transform targetTransform;</span><br><span class="line">        <span class="keyword">public</span> Transform cameraTransform;</span><br><span class="line">        <span class="keyword">public</span> Transform cameraPivotTransform;</span><br><span class="line">        <span class="keyword">private</span> Transform myTransform;</span><br><span class="line">        <span class="keyword">private</span> Vector3 cameraTransformPosition;</span><br><span class="line">        <span class="keyword">private</span> LayerMask ignoreLayers;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> CameraHandler singleton;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> lookSpeed = <span class="number">0.1f</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> followSpeed = <span class="number">0.1f</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> pivotSpeed = <span class="number">0.03f</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> defaultPosition;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> lookAngle;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> pivotAngle;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> minimumPivot = <span class="number">-35</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> maximumPivot = <span class="number">35</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            singleton = <span class="keyword">this</span>;</span><br><span class="line">            myTransform = transform;</span><br><span class="line">            defaultPosition = cameraTransform.localPosition.z;</span><br><span class="line">            ignoreLayers = ~(<span class="number">1</span> &lt;&lt; <span class="number">8</span> | <span class="number">1</span> &lt;&lt; <span class="number">9</span> | <span class="number">1</span> &lt;&lt; <span class="number">10</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、设置层级、脚本补充"><a href="#三、设置层级、脚本补充" class="headerlink" title="三、设置层级、脚本补充"></a>三、设置层级、脚本补充</h2><p>回到Unity编辑器，在Hierarchy选中Player，在Inspector设置层级。</p><p><img src="/2020/06/19/DarkSoulsDemo%EF%BC%88%E4%BA%8C%EF%BC%89%E6%91%84%E5%83%8F%E6%9C%BA%E7%AE%A1%E7%90%86%E5%99%A8/image-20200620110418619.png" alt="image-20200620110418619"></p><p><img src="/2020/06/19/DarkSoulsDemo%EF%BC%88%E4%BA%8C%EF%BC%89%E6%91%84%E5%83%8F%E6%9C%BA%E7%AE%A1%E7%90%86%E5%99%A8/image-20200620110515678.png" alt="image-20200620110515678"></p><p><img src="/2020/06/19/DarkSoulsDemo%EF%BC%88%E4%BA%8C%EF%BC%89%E6%91%84%E5%83%8F%E6%9C%BA%E7%AE%A1%E7%90%86%E5%99%A8/image-20200620110607910.png" alt="image-20200620110607910"></p><p>回到CameraHandler.cs，在Awake方法下编写FollowTarget方法和HandleCameraRotation方法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)...</span></span><br><span class="line"><span class="function">     </span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">FollowTarget</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span> &#123;</span><br><span class="line">     Vector3 targetPosition = Vector3.Lerp(myTransform.position, targetTransform.position, delta / followSpeed);</span><br><span class="line">     myTransform.position = targetPosition;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleCameraRotation</span>(<span class="params"><span class="keyword">float</span> delta, <span class="keyword">float</span> mouseXInput, <span class="keyword">float</span> mouseYInput</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    lookAngle += (mouseXInput * lookSpeed) / delta;</span><br><span class="line">    pivotAngle -= (mouseYInput * pivotSpeed) / delta;</span><br><span class="line">    pivotAngle = Mathf.Clamp(pivotAngle, minimumPivot, maximumPivot);</span><br><span class="line"></span><br><span class="line">    Vector3 rotation = Vector3.zero;</span><br><span class="line">    rotation.y = lookAngle;</span><br><span class="line">    Quaternion targetRotation = Quaternion.Euler(rotation);</span><br><span class="line">    myTransform.rotation = targetRotation;</span><br><span class="line"></span><br><span class="line">    rotation = Vector3.zero;</span><br><span class="line">    rotation.x = pivotAngle;</span><br><span class="line">    targetRotation = Quaternion.Euler(rotation);</span><br><span class="line">    cameraPivotTransform.localRotation = targetRotation;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>回到InputHandler.cs 声明CameraHandler类型变量cameraHandler，编写Awake方法和FixedUpdate方法</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">CameraHandler cameraHandler;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cameraHandler = CameraHandler.singleton;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FixedUpdate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> delta = Time.fixedDeltaTime;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(cameraHandler != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cameraHandler.FollowTarget(delta);</span><br><span class="line">        cameraHandler.HandleCameraRotation(delta, mouseX, mouseY);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、配置摄像机"><a href="#四、配置摄像机" class="headerlink" title="四、配置摄像机"></a>四、配置摄像机</h2><p>保存脚本，回到Unity编辑器，选中将CameraHandler.cs添加到Camera Holder，并给Target Transform、Camera Transform、Camera Pivot Transform赋值。</p><p><img src="/2020/06/19/DarkSoulsDemo%EF%BC%88%E4%BA%8C%EF%BC%89%E6%91%84%E5%83%8F%E6%9C%BA%E7%AE%A1%E7%90%86%E5%99%A8/image-20200620112444496.png" alt="image-20200620112444496"></p><p>然后将Player、Camera Holder、Camera Pivot的位置坐标全部重置为（0，0，0），选中Main Camera ,调整到角色后背合适的位置。调整摄像机视野Main Camera|Camera|Field of View。</p><p><img src="/2020/06/19/DarkSoulsDemo%EF%BC%88%E4%BA%8C%EF%BC%89%E6%91%84%E5%83%8F%E6%9C%BA%E7%AE%A1%E7%90%86%E5%99%A8/image-20200620113344191.png" alt="image-20200620113344191"></p><p>现在保存场景，播放游戏，在移动角色的同时，我们可以像再黑暗之魂里一样移动摄像机的视角。</p><h2 id="五、脚本汇总"><a href="#五、脚本汇总" class="headerlink" title="五、脚本汇总"></a>五、脚本汇总</h2><h3 id="CameraHandler-cs"><a href="#CameraHandler-cs" class="headerlink" title="CameraHandler.cs"></a>CameraHandler.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CameraHandler</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> Transform targetTransform;</span><br><span class="line">        <span class="keyword">public</span> Transform cameraTransform;</span><br><span class="line">        <span class="keyword">public</span> Transform cameraPivotTransform;</span><br><span class="line">        <span class="keyword">private</span> Transform myTransform;</span><br><span class="line">        <span class="keyword">private</span> Vector3 cameraTransformPosition;</span><br><span class="line">        <span class="keyword">private</span> LayerMask ignoreLayers;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> CameraHandler singleton;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> lookSpeed = <span class="number">0.1f</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> followSpeed = <span class="number">0.1f</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> pivotSpeed = <span class="number">0.03f</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> defaultPosition;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> lookAngle;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> pivotAngle;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> minimumPivot = <span class="number">-35</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> maximumPivot = <span class="number">35</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            singleton = <span class="keyword">this</span>;</span><br><span class="line">            myTransform = transform;</span><br><span class="line">            defaultPosition = cameraTransform.localPosition.z;</span><br><span class="line">            ignoreLayers = ~(<span class="number">1</span> &lt;&lt; <span class="number">8</span> | <span class="number">1</span> &lt;&lt; <span class="number">9</span> | <span class="number">1</span> &lt;&lt; <span class="number">10</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">FollowTarget</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Vector3 targetPosition = Vector3.Lerp(myTransform.position, targetTransform.position, delta / followSpeed);</span><br><span class="line">            myTransform.position = targetPosition;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleCameraRotation</span>(<span class="params"><span class="keyword">float</span> delta, <span class="keyword">float</span> mouseXInput, <span class="keyword">float</span> mouseYInput</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            lookAngle += (mouseXInput * lookSpeed) / delta;</span><br><span class="line">            pivotAngle -= (mouseYInput * pivotSpeed) / delta;</span><br><span class="line">            pivotAngle = Mathf.Clamp(pivotAngle, minimumPivot, maximumPivot);</span><br><span class="line"></span><br><span class="line">            Vector3 rotation = Vector3.zero;</span><br><span class="line">            rotation.y = lookAngle;</span><br><span class="line">            Quaternion targetRotation = Quaternion.Euler(rotation);</span><br><span class="line">            myTransform.rotation = targetRotation;</span><br><span class="line"></span><br><span class="line">            rotation = Vector3.zero;</span><br><span class="line">            rotation.x = pivotAngle;</span><br><span class="line">            targetRotation = Quaternion.Euler(rotation);</span><br><span class="line">            cameraPivotTransform.localRotation = targetRotation;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="InputHandler-cs"><a href="#InputHandler-cs" class="headerlink" title="InputHandler.cs"></a>InputHandler.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span> &#123; </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">InputHandler</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> horizontal;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> vertical;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> moveAmount;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> mouseX;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> mouseY;</span><br><span class="line"></span><br><span class="line">        PlayerControls inputActions;</span><br><span class="line">        CameraHandler cameraHandler;</span><br><span class="line"></span><br><span class="line">        Vector2 movementInput;</span><br><span class="line">        Vector2 cameraInput;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            cameraHandler = CameraHandler.singleton;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FixedUpdate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">float</span> delta = Time.fixedDeltaTime;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(cameraHandler != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cameraHandler.FollowTarget(delta);</span><br><span class="line">                cameraHandler.HandleCameraRotation(delta, mouseX, mouseY);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnEnable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span>(inputActions == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                inputActions = <span class="keyword">new</span> PlayerControls();</span><br><span class="line">                inputActions.PlayerMovement.Movement.performed += inputActions =&gt; movementInput = inputActions.ReadValue&lt;Vector2&gt;();</span><br><span class="line">                inputActions.PlayerMovement.Camera.performed += i =&gt; cameraInput = i.ReadValue&lt;Vector2&gt;();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            inputActions.Enable();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDisable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            inputActions.Disable();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TickInput</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MoveInput(delta);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MoveInput</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            horizontal = movementInput.x;</span><br><span class="line">            vertical = movementInput.y;</span><br><span class="line">            moveAmount = Mathf.Clamp01(Mathf.Abs(horizontal) + Mathf.Abs(vertical));</span><br><span class="line">            mouseX = cameraInput.x;</span><br><span class="line">            mouseY = cameraInput.y;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DarkSoulsDemo（一）角色行走</title>
      <link href="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/"/>
      <url>/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/</url>
      
        <content type="html"><![CDATA[<p>关键词：移动、Input System插件、混合树</p><a id="more"></a><p>本篇出自：<a href="https://www.youtube.com/watch?v=LOC5GJ5rFFw" target="_blank" rel="noopener">https://www.youtube.com/watch?v=LOC5GJ5rFFw</a></p><h2 id="一、资源导入"><a href="#一、资源导入" class="headerlink" title="一、资源导入"></a>一、资源导入</h2><p>本篇用到的资源链接：</p><p>动画：<a href="https://drive.google.com/drive/folders/1j2HicZMabg4h2Oe8ocxGNuKBHY5kzFJA" target="_blank" rel="noopener">https://drive.google.com/drive/folders/1j2HicZMabg4h2Oe8ocxGNuKBHY5kzFJA</a></p><p>模型：<a href="https://drive.google.com/drive/folders/1X6DLqSsLT2EAIYpcZGYL-Z93hYOo2sxa" target="_blank" rel="noopener">https://drive.google.com/drive/folders/1X6DLqSsLT2EAIYpcZGYL-Z93hYOo2sxa</a></p><p>动画资源文件：Idle.anim、Run.anim、Sprint.anim、Walk.anim。</p><p>FBX文件：LowPolyMan.fbx</p><p>用Unity 2019.3.4f1Personal新建一个3D项目，导入上述资源，给场景SampleScene新建一个3D物体Plane。在Assets/Materials下新建一个材质（Material）取名为Floor_MAT。选中Floor_MAT，在Inspector点击Main Maps|Albedo选择Default-Checker-Gray(Texture 2D)。修改Tiling|X为5，Y为1。然后从项目窗口将Floor_MAT拖拽到场景中的Plane上。</p><p>在Hierarchy新建一个空的GameObject，重命名为Player。从项目窗口将LowPolyMan.fbx拖拽到Player，成为其子项。将场景中的LowPolyMan也重命名为Player。</p><p>新建两个脚本PlayerLocomotion.cs、InputHandler.cs。</p><h2 id="二、Input-System"><a href="#二、Input-System" class="headerlink" title="二、Input System"></a>二、Input System</h2><p>打开Packages Manager，安装Input System，如果没找到可以点击Advanced|Show preview packages。</p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618204104291.png" alt="image-20200618204104291"></p><p>安装过程中会弹出对话窗口，点击Yes。安装完后Unity编辑器将自动重启。</p><p>在项目窗口右键，选中Create|Input Action。</p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618204357104.png" alt="image-20200618204357104"></p><p>重命名为PlayerControls，这个将控制控制器的输入。选中PlayerControls，在Inspector勾选Generate C# Class，点击Apply。</p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618204651632.png" alt="image-20200618204651632"></p><p>这时，PlayerControls.cs会被自动创建，我们双击打开PlayerControls（Input Action）。</p><p>点击加号添加一个Action Maps，命名为Player Movement，添加两个Action，分别命名为Movement、Camera。修改Movement的属性Action|Action Type为Pass Through，Control Type为Vector 2</p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618205504866.png" alt="image-20200618205504866"></p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618214052176.png" alt="image-20200618214052176"></p><p>删掉Movement下的&lt;No Binding&gt;（右键选择Delete），点击Movementy同行右边的加号，选择Add 2D Vector Composite。</p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618205756335.png" alt="image-20200618205756335"></p><p>重命名为WASD，设置它的属性Composite|Composite Type为2D Vector，Mode为Analog</p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618205956087.png" alt="image-20200618205956087"></p><p>设置WASD下的四个动作如下，</p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618213926007.png" alt="image-20200618213926007"></p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618210207321.png" alt="image-20200618210207321"></p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618213731388.png" alt="image-20200618213731388"></p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618213821839.png" alt="image-20200618213821839"></p><p>选择Camera下的&lt;No Binding&gt;，设置Path为Right Stick [Gamepad]，添加Processor Stick Deadzone。</p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618214330830.png" alt="image-20200618214330830"></p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618214529084.png" alt="image-20200618214529084"></p><p>在Camera下添加Binding，设置Path为Delta[Mouse]，添加属性Normalize Vector 2。</p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618214645347.png" alt="image-20200618214645347"></p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618214755135.png" alt="image-20200618214755135"></p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618215016354.png" alt="image-20200618215016354"></p><p>然后关闭窗口，在弹出的对话框中选择Save。</p><p>然后打开Project Setting，选中Input System Package，点击Create settings asset按钮，修改Default Hold Time为0。</p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618215441893.png" alt="image-20200618215441893"></p><h2 id="三、给角色添加碰撞体组件和刚体组件"><a href="#三、给角色添加碰撞体组件和刚体组件" class="headerlink" title="三、给角色添加碰撞体组件和刚体组件"></a>三、给角色添加碰撞体组件和刚体组件</h2><p>给Player添加胶囊碰撞体组件，设置属性Radus为0.3，Height为2。</p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618215824983.png" alt="image-20200618215824983"></p><p>添加Rigidbody组件，勾选Constraints Freeze Rotation X、Y、Z。</p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618220003141.png" alt="image-20200618220003141"></p><h2 id="四、编写脚本实现角色转向"><a href="#四、编写脚本实现角色转向" class="headerlink" title="四、编写脚本实现角色转向"></a>四、编写脚本实现角色转向</h2><p>然后用VS2017打开InputHandler.cs，编写脚本如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span> &#123; </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">InputHandler</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> horizontal;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> vertical;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> moveAmount;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> mouseX;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> mouseY;</span><br><span class="line"></span><br><span class="line">        PlayerControls inputActions;</span><br><span class="line"></span><br><span class="line">        Vector2 movementInput;</span><br><span class="line">        Vector2 cameraInput;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnEnable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span>(inputActions == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                inputActions = <span class="keyword">new</span> PlayerControls();</span><br><span class="line">                inputActions.PlayerMovement.Movement.performed += inputActions =&gt; movementInput = inputActions.ReadValue&lt;Vector2&gt;();</span><br><span class="line">                inputActions.PlayerMovement.Camera.performed += i =&gt; cameraInput = i.ReadValue&lt;Vector2&gt;();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            inputActions.Enable();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDisable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            inputActions.Disable();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TickInput</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MoveInput(delta);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MoveInput</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            horizontal = movementInput.x;</span><br><span class="line">            vertical = movementInput.y;</span><br><span class="line">            moveAmount = Mathf.Clamp01(Mathf.Abs(horizontal) + Mathf.Abs(vertical));</span><br><span class="line">            mouseX = cameraInput.x;</span><br><span class="line">            mouseY = cameraInput.y;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后用VS2017打开PlayerLocomotion.cs，编写脚本如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span> &#123; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerLocomotion</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        Transform cameraObject;</span><br><span class="line">        InputHandler inputHandler;</span><br><span class="line">        Vector3 moveDirection;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">HideInInspector</span>]</span><br><span class="line">        <span class="keyword">public</span> Transform myTransform;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">new</span> Rigidbody rigidbody;</span><br><span class="line">        <span class="keyword">public</span> GameObject normalCamera;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Stats"</span>)</span>]</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">float</span> movementSpeed = <span class="number">5</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">float</span> rotationSpeed = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            rigidbody = GetComponent&lt;Rigidbody&gt;();</span><br><span class="line">            inputHandler = GetComponent&lt;InputHandler&gt;();</span><br><span class="line">            animatorHandler = GetComponentInChildren&lt;AnimatorHandler&gt;();</span><br><span class="line">            cameraObject = Camera.main.transform;</span><br><span class="line">            myTransform = transform;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">float</span> delta = Time.deltaTime;</span><br><span class="line"></span><br><span class="line">            inputHandler.TickInput(delta);</span><br><span class="line"></span><br><span class="line">            moveDirection = cameraObject.forward * inputHandler.vertical;</span><br><span class="line">            moveDirection += cameraObject.right * inputHandler.horizontal;</span><br><span class="line">            moveDirection.Normalize();</span><br><span class="line">            moveDirection.y = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">float</span> speed = movementSpeed;</span><br><span class="line">            moveDirection *= speed;</span><br><span class="line"></span><br><span class="line">            Vector3 projectedVelocity = Vector3.ProjectOnPlane(moveDirection, normalVector);</span><br><span class="line">            rigidbody.velocity = projectedVelocity;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">region</span> Movement</span></span><br><span class="line">        Vector3 normalVector;</span><br><span class="line">        Vector3 targetPostion;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">HandleRotation</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Vector3 targetDir = Vector3.zero;</span><br><span class="line">            <span class="keyword">float</span> moveOverride = inputHandler.moveAmount;</span><br><span class="line"></span><br><span class="line">            targetDir = cameraObject.forward * inputHandler.vertical;</span><br><span class="line">            targetDir += cameraObject.right * inputHandler.horizontal;</span><br><span class="line"></span><br><span class="line">            targetDir.Normalize();</span><br><span class="line">            targetDir.y = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(targetDir == Vector3.zero)</span><br><span class="line">            &#123;</span><br><span class="line">                targetDir = myTransform.forward;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">float</span> rs = rotationSpeed;</span><br><span class="line">            Quaternion tr = Quaternion.LookRotation(targetDir);</span><br><span class="line">            Quaternion targetRotation = Quaternion.Slerp(myTransform.rotation, tr, rs * delta);</span><br><span class="line"></span><br><span class="line">            myTransform.rotation = targetRotation;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>回到Unity编辑器，将InputHandler.cs和PlayerLocomotion.cs添加到Player</p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618220941129.png" alt="image-20200618220941129"></p><p>播放游戏，通过WASD我们可以控制角色在平面上“滑行”。</p><p>如果在按W/S键的时候角色往天上移动，则需要将Main Camera放置在能够平视角色的位置上（通过Ctrl+Shift+F设置位置）。</p><p>接下来添加脚本来控制动画。</p><p>新建脚本AnimatorHandler.cs，编写脚本如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span> &#123; </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AnimatorHandler</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> Animator anim;</span><br><span class="line">        <span class="keyword">int</span> vertical;</span><br><span class="line">        <span class="keyword">int</span> horizontal;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> canRotate;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Initialize</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            anim = GetComponent&lt;Animator&gt;();</span><br><span class="line">            vertical = Animator.StringToHash(<span class="string">"Vertical"</span>);</span><br><span class="line">            horizontal = Animator.StringToHash(<span class="string">"Horizontal"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UpdateAnimatorValues</span>(<span class="params"><span class="keyword">float</span> verticalMovement, <span class="keyword">float</span> horizontalMovement</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span> Vertical</span></span><br><span class="line">            <span class="keyword">float</span> v = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(verticalMovement &gt; <span class="number">0</span> &amp;&amp; verticalMovement &lt; <span class="number">0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">0.5f</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(verticalMovement &gt; <span class="number">0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(verticalMovement &lt; <span class="number">0</span> &amp;&amp; verticalMovement &gt; <span class="number">-0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">-0.5f</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(verticalMovement &lt; <span class="number">-0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span> Horizontal</span></span><br><span class="line">            <span class="keyword">float</span> h = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(horizontalMovement &gt; <span class="number">0</span> &amp;&amp; horizontalMovement &lt; <span class="number">0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                h = <span class="number">0.5f</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(horizontalMovement &gt; <span class="number">0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                h = <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(horizontalMovement &lt; <span class="number">0</span> &amp;&amp; horizontalMovement &gt; <span class="number">-0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                h = <span class="number">-0.5f</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(verticalMovement &lt; <span class="number">-0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                h = <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                h = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">            anim.SetFloat(vertical, v, <span class="number">0.1f</span>, Time.deltaTime);</span><br><span class="line">            anim.SetFloat(horizontal, h, <span class="number">0.1f</span>, Time.deltaTime);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">CanRotate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            canRotate = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">StopRotate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            canRotate = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打开PlayerLocomotion.cs，添加AnimatorHandler类型公共变量animatorHandler：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">[<span class="meta">HideInInspector</span>]</span><br><span class="line">        <span class="keyword">public</span> Transform myTransform;</span><br><span class="line"><span class="comment">//↓↓↓声明变量animatorHandler</span></span><br><span class="line">        [<span class="meta">HideInInspector</span>]</span><br><span class="line">        <span class="keyword">public</span> AnimatorHandler animatorHandler;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">new</span> Rigidbody rigidbody;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>在Start方法添加语句获取AnimatorHandler组件以及调用animatorHandler的初始化方法。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    rigidbody = GetComponent&lt;Rigidbody&gt;();</span><br><span class="line">    inputHandler = GetComponent&lt;InputHandler&gt;();</span><br><span class="line">    <span class="comment">//↓↓↓获取AnimatorHandler组件，这里用GetComponentInChildren是因为该组件是属于Player的子项Player的</span></span><br><span class="line">    animatorHandler = GetComponentInChildren&lt;AnimatorHandler&gt;();</span><br><span class="line">...</span><br><span class="line">    <span class="comment">//调用animatorHandler的初始化方法</span></span><br><span class="line">    animatorHandler.Initialize();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Update方法里添加语句实现转向判断</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">if</span> (animatorHandler.canRotate)</span><br><span class="line">    &#123;</span><br><span class="line">        HandleRotation(delta);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存修改后的脚本，回到Unity编辑器，将AnimatorHandler.cs添加到Player的子项Player，勾选Can Rotate。</p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618223109582.png" alt="image-20200618223109582"></p><p>播放游戏，想在控制角色移动，角色会转向。</p><h3 id="实际遇到的问题："><a href="#实际遇到的问题：" class="headerlink" title="实际遇到的问题："></a>实际遇到的问题：</h3><ol><li>发现角色没有转向，原因是没有勾选Can Rotate。</li><li>按W/S键时，角色没有转向，原因是这条语句漏写了。</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">HandleRotation</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">...</span><br><span class="line">    targetDir = cameraObject.forward * inputHandler.vertical;</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><h2 id="五、加入动画"><a href="#五、加入动画" class="headerlink" title="五、加入动画"></a>五、加入动画</h2><p>在Assets/Animator下新建一个Animator Controller，命名为Humanoid，将其拖拽添加到场景中Player|Player|Animator|Controller，双击Humanoid打开并进入Animtor窗口。</p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618224129014.png" alt="image-20200618224129014"></p><p>点击Parameters标签，点击加号添加两个Float类型参数Horizontal、Vertical。</p><p>然后回到Layers标签，在Base Layer新建混合树，重命名为Locomotion。</p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618225000001.png" alt="image-20200618225000001"></p><p>双击进入Locomotion，将Blend Tree的混合模式设为2D Freeform Cartesian，设置参数Horizontal、Vertical，在Motion列表添加三个动作域，并分别做如下配置。</p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618225850260.png" alt="image-20200618225850260"></p><p>如果动画预览窗口里没有显示正确的模型，从项目窗口中拖入LowPolyMan.fbx即可。</p><p>打开PlayerLocomotion.cs，在Update方法添加如下语句：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">...</span><br><span class="line">    animatorHandler.UpdateAnimatorValues(inputHandler.moveAmount, <span class="number">0</span>);</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>保存脚本，回到Unity编辑器，设置Player|Player|Animator|Avatar为LowPolyManAvatar。</p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618231441712.png" alt="image-20200618231441712"></p><p>播放游戏。此时角色的移动带有跑动动画。</p><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618230923858.png" alt="image-20200618230923858"></p><h3 id="实际遇到的问题：-1"><a href="#实际遇到的问题：-1" class="headerlink" title="实际遇到的问题："></a>实际遇到的问题：</h3><ol><li><p>角色没有跑动，原因：</p><ol><li>LowPolyMan模型没有设置Rig|Animation Type为Humanoid。</li><li>Player|Player|Animator|Avatar为”None“。</li><li>在Animator设置Float型参数Vertical时，错写成“vertical”。</li></ol></li><li><p>角色跑动的时候会“闪现、乱窜“，原因是勾选了Apply Root Motion。</p></li></ol><p><img src="/2020/06/17/DarkSoulsDemo%EF%BC%88%E4%B8%80%EF%BC%89%E8%A7%92%E8%89%B2%E8%A1%8C%E8%B5%B0/image-20200618231814491.png" alt="image-20200618231814491"></p><h2 id="六、脚本汇总"><a href="#六、脚本汇总" class="headerlink" title="六、脚本汇总"></a>六、脚本汇总</h2><h3 id="InputHandler-cs"><a href="#InputHandler-cs" class="headerlink" title="InputHandler.cs"></a>InputHandler.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span> &#123; </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">InputHandler</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> horizontal;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> vertical;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> moveAmount;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> mouseX;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> mouseY;</span><br><span class="line"></span><br><span class="line">        PlayerControls inputActions;</span><br><span class="line"></span><br><span class="line">        Vector2 movementInput;</span><br><span class="line">        Vector2 cameraInput;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnEnable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span>(inputActions == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                inputActions = <span class="keyword">new</span> PlayerControls();</span><br><span class="line">                inputActions.PlayerMovement.Movement.performed += inputActions =&gt; movementInput = inputActions.ReadValue&lt;Vector2&gt;();</span><br><span class="line">                inputActions.PlayerMovement.Camera.performed += i =&gt; cameraInput = i.ReadValue&lt;Vector2&gt;();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            inputActions.Enable();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDisable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            inputActions.Disable();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TickInput</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MoveInput(delta);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MoveInput</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            horizontal = movementInput.x;</span><br><span class="line">            vertical = movementInput.y;</span><br><span class="line">            moveAmount = Mathf.Clamp01(Mathf.Abs(horizontal) + Mathf.Abs(vertical));</span><br><span class="line">            mouseX = cameraInput.x;</span><br><span class="line">            mouseY = cameraInput.y;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PlayerLocomotion-cs"><a href="#PlayerLocomotion-cs" class="headerlink" title="PlayerLocomotion.cs"></a>PlayerLocomotion.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span> &#123; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerLocomotion</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        Transform cameraObject;</span><br><span class="line">        InputHandler inputHandler;</span><br><span class="line">        Vector3 moveDirection;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">HideInInspector</span>]</span><br><span class="line">        <span class="keyword">public</span> Transform myTransform;</span><br><span class="line">        [<span class="meta">HideInInspector</span>]</span><br><span class="line">        <span class="keyword">public</span> AnimatorHandler animatorHandler;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">new</span> Rigidbody rigidbody;</span><br><span class="line">        <span class="keyword">public</span> GameObject normalCamera;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">Header(<span class="meta-string">"Stats"</span>)</span>]</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">float</span> movementSpeed = <span class="number">5</span>;</span><br><span class="line">        [<span class="meta">SerializeField</span>]</span><br><span class="line">        <span class="keyword">float</span> rotationSpeed = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            rigidbody = GetComponent&lt;Rigidbody&gt;();</span><br><span class="line">            inputHandler = GetComponent&lt;InputHandler&gt;();</span><br><span class="line">            animatorHandler = GetComponentInChildren&lt;AnimatorHandler&gt;();</span><br><span class="line">            cameraObject = Camera.main.transform;</span><br><span class="line">            myTransform = transform;</span><br><span class="line">            animatorHandler.Initialize();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">float</span> delta = Time.deltaTime;</span><br><span class="line"></span><br><span class="line">            inputHandler.TickInput(delta);</span><br><span class="line"></span><br><span class="line">            moveDirection = cameraObject.forward * inputHandler.vertical;</span><br><span class="line">            moveDirection += cameraObject.right * inputHandler.horizontal;</span><br><span class="line">            moveDirection.Normalize();</span><br><span class="line">            moveDirection.y = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">float</span> speed = movementSpeed;</span><br><span class="line">            moveDirection *= speed;</span><br><span class="line"></span><br><span class="line">            Vector3 projectedVelocity = Vector3.ProjectOnPlane(moveDirection, normalVector);</span><br><span class="line">            rigidbody.velocity = projectedVelocity;</span><br><span class="line"></span><br><span class="line">            animatorHandler.UpdateAnimatorValues(inputHandler.moveAmount, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (animatorHandler.canRotate)</span><br><span class="line">            &#123;</span><br><span class="line">                HandleRotation(delta);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">region</span> Movement</span></span><br><span class="line">        Vector3 normalVector;</span><br><span class="line">        Vector3 targetPostion;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">HandleRotation</span>(<span class="params"><span class="keyword">float</span> delta</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Vector3 targetDir = Vector3.zero;</span><br><span class="line">            <span class="keyword">float</span> moveOverride = inputHandler.moveAmount;</span><br><span class="line"></span><br><span class="line">            targetDir = cameraObject.forward * inputHandler.vertical;</span><br><span class="line">            targetDir += cameraObject.right * inputHandler.horizontal;</span><br><span class="line"></span><br><span class="line">            targetDir.Normalize();</span><br><span class="line">            targetDir.y = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(targetDir == Vector3.zero)</span><br><span class="line">            &#123;</span><br><span class="line">                targetDir = myTransform.forward;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">float</span> rs = rotationSpeed;</span><br><span class="line">            Quaternion tr = Quaternion.LookRotation(targetDir);</span><br><span class="line">            Quaternion targetRotation = Quaternion.Slerp(myTransform.rotation, tr, rs * delta);</span><br><span class="line"></span><br><span class="line">            myTransform.rotation = targetRotation;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="AnimatorHandler-cs"><a href="#AnimatorHandler-cs" class="headerlink" title="AnimatorHandler.cs"></a>AnimatorHandler.cs</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MJ</span> &#123; </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AnimatorHandler</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> Animator anim;</span><br><span class="line">        <span class="keyword">int</span> vertical;</span><br><span class="line">        <span class="keyword">int</span> horizontal;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> canRotate;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Initialize</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            anim = GetComponent&lt;Animator&gt;();</span><br><span class="line">            vertical = Animator.StringToHash(<span class="string">"Vertical"</span>);</span><br><span class="line">            horizontal = Animator.StringToHash(<span class="string">"Horizontal"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UpdateAnimatorValues</span>(<span class="params"><span class="keyword">float</span> verticalMovement, <span class="keyword">float</span> horizontalMovement</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span> Vertical</span></span><br><span class="line">            <span class="keyword">float</span> v = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(verticalMovement &gt; <span class="number">0</span> &amp;&amp; verticalMovement &lt; <span class="number">0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">0.5f</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(verticalMovement &gt; <span class="number">0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(verticalMovement &lt; <span class="number">0</span> &amp;&amp; verticalMovement &gt; <span class="number">-0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">-0.5f</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(verticalMovement &lt; <span class="number">-0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                v = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span> Horizontal</span></span><br><span class="line">            <span class="keyword">float</span> h = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(horizontalMovement &gt; <span class="number">0</span> &amp;&amp; horizontalMovement &lt; <span class="number">0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                h = <span class="number">0.5f</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(horizontalMovement &gt; <span class="number">0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                h = <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(horizontalMovement &lt; <span class="number">0</span> &amp;&amp; horizontalMovement &gt; <span class="number">-0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                h = <span class="number">-0.5f</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(verticalMovement &lt; <span class="number">-0.55f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                h = <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                h = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">            anim.SetFloat(vertical, v, <span class="number">0.1f</span>, Time.deltaTime);</span><br><span class="line">            anim.SetFloat(horizontal, h, <span class="number">0.1f</span>, Time.deltaTime);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">CanRotate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            canRotate = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">StopRotate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            canRotate = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过脚本改变角色控制器</title>
      <link href="/2020/06/16/%E9%80%9A%E8%BF%87%E8%84%9A%E6%9C%AC%E6%94%B9%E5%8F%98%E8%A7%92%E8%89%B2%E6%8E%A7%E5%88%B6%E5%99%A8/"/>
      <url>/2020/06/16/%E9%80%9A%E8%BF%87%E8%84%9A%E6%9C%AC%E6%94%B9%E5%8F%98%E8%A7%92%E8%89%B2%E6%8E%A7%E5%88%B6%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p><strong>Unity 2018 Cookbook | Charpter 10 3D Animation | Transforming the Character Controller via scripts</strong></p><p>根动作是一种给角色赋予动画的手段。虽然实用且精准，但有时还是需要手动调整角色动作的一两个相位。如果你只有一个现成的动画，或者你想让角色的移动受到其他变量的影响。你将需要一个脚本来重载根动作。</p><p>本文中，我们将使用一个只在Y轴上运动的跳跃动画片段，使角色在跳跃的同事向前或向后移动，我们将学习如何使用脚本通过角色的速度来影响跳跃方向。</p><a id="more"></a><p>本文使用的资源链接：<a href="https://github.com/PacktPublishing/Unity-2018-Cookbook-Third-Edition/tree/master/Chapter10_3DAnimation/10_05_script_transform_control" target="_blank" rel="noopener">https://github.com/PacktPublishing/Unity-2018-Cookbook-Third-Edition/tree/master/Chapter10_3DAnimation/10_05_script_transform_control</a></p><p>完成后项目资源链接：<a href="https://github.com/dr-matt-smith/unity-cookbook-2018-ch10-05-script-control-transform" target="_blank" rel="noopener">https://github.com/dr-matt-smith/unity-cookbook-2018-ch10-05-script-control-transform</a></p><h2 id="一、设置动画片段"><a href="#一、设置动画片段" class="headerlink" title="一、设置动画片段"></a>一、设置动画片段</h2><p>新建一个3D项目导入Jumping.unitypackage和<a href="mailto:Swat@rifle_jump.fbx">Swat@rifle_jump.fbx</a>。。在项目窗口里打开场景mecanimPlayground。</p><p>选中Rig标签，改变AnimationType为Humanoid  and Avatar Definition toCreate From this Model . Confirm this byclicking on Apply .</p><p>点击Animations标签页，点击Clamp Range按钮调整时间线，勾选Loop Time和LoopPose选项。在Root Transform Rotation下勾选Bake Into Pose，设置Based Upon为Original。在Root Transform Position (Y)下方，保持Bake into Pose不勾选，设置Based Upon 为Original。在Root Transform Position (XZ) 下方保持Bake Into Pos不勾选，点击Apply应用设置。</p><p><img src="/2020/06/16/%E9%80%9A%E8%BF%87%E8%84%9A%E6%9C%AC%E6%94%B9%E5%8F%98%E8%A7%92%E8%89%B2%E6%8E%A7%E5%88%B6%E5%99%A8/image-20200622132826337.png" alt="image-20200622132826337"></p><h2 id="二、设置动画状态"><a href="#二、设置动画状态" class="headerlink" title="二、设置动画状态"></a>二、设置动画状态</h2><p>在项目窗口双击MainCharacter动画控制器并进入Animator窗口，在左上角选择Parameters选项页，点击加号新建 Trigger类型参数Jump，新建一个状态取名Jump。选中Jump状态，给它的Motion配置动画片段rifle_jump。</p><p><img src="/2020/06/16/%E9%80%9A%E8%BF%87%E8%84%9A%E6%9C%AC%E6%94%B9%E5%8F%98%E8%A7%92%E8%89%B2%E6%8E%A7%E5%88%B6%E5%99%A8/image-20200622133921918.png" alt="image-20200622133921918"></p><p>从Any State到Jump建立转变关系，勾选Has Exit Time，添加条件参数Jump。</p><p><img src="/2020/06/16/%E9%80%9A%E8%BF%87%E8%84%9A%E6%9C%AC%E6%94%B9%E5%8F%98%E8%A7%92%E8%89%B2%E6%8E%A7%E5%88%B6%E5%99%A8/image-20200622134426738.png" alt="image-20200622134426738"></p><p>从Jump到Move建立转变关系，勾选Has Exit Time。</p><p><img src="/2020/06/16/%E9%80%9A%E8%BF%87%E8%84%9A%E6%9C%AC%E6%94%B9%E5%8F%98%E8%A7%92%E8%89%B2%E6%8E%A7%E5%88%B6%E5%99%A8/image-20200622134611270.png" alt="image-20200622134611270"></p><h2 id="三、编辑脚本"><a href="#三、编辑脚本" class="headerlink" title="三、编辑脚本"></a>三、编辑脚本</h2><p>打开脚本文件BasicController.cs，添加变量声明</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">float</span> jumpHeight = <span class="number">1f</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">float</span> verticalSpeed = <span class="number">0f</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">float</span> xVelocity = <span class="number">0f</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">float</span> zVelocity = <span class="number">0f</span>;</span><br></pre></td></tr></table></figure><p>在Update方法的” if(controller.isGrounded){ “的下一行添加如下代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (Input.GetKey(KeyCode.Space))</span><br><span class="line">&#123;</span><br><span class="line">    anim.SetTrigger(<span class="string">"Jump"</span>);</span><br><span class="line">    verticalSpeed = jumpHeight;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在BasicController类的底部添加方法OnAnimatorMove：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnAnimatorMove</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Vector3 deltaPosition = anim.deltaPosition;</span><br><span class="line">    <span class="keyword">if</span> (controller.isGrounded)</span><br><span class="line">    &#123;</span><br><span class="line">        xVelocity = controller.velocity.x;</span><br><span class="line">        zVelocity = controller.velocity.z;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        deltaPosition.x = xVelocity * Time.deltaTime;</span><br><span class="line">        deltaPosition.z = zVelocity * Time.deltaTime;</span><br><span class="line">        anim.SetBool(<span class="string">"Jump"</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    deltaPosition.y = verticalSpeed;</span><br><span class="line">    controller.Move(deltaPosition);</span><br><span class="line">    verticalSpeed += Physics.gravity.y * Time.deltaTime;</span><br><span class="line">    <span class="keyword">if</span>((controller.collisionFlags &amp; CollisionFlags.Below) != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        verticalSpeed = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存脚本，播放游戏，我们可以通过空格键在角色走动的时候做跳跃动作。</p><p>BasicController.cs完整代码:</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="comment">/* ----------------------------------------</span></span><br><span class="line"><span class="comment"> * class to demonstrate how to control a </span></span><br><span class="line"><span class="comment"> * character using Character Controller and the Mecanim system</span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">BasicController</span>: <span class="title">MonoBehaviour</span> &#123;</span><br><span class="line"><span class="comment">// Variable for the character's Animator component</span></span><br><span class="line"><span class="keyword">private</span> Animator anim;</span><br><span class="line"><span class="comment">// Variable for the character's Character Controller component</span></span><br><span class="line"><span class="keyword">private</span> CharacterController controller;</span><br><span class="line"><span class="comment">// float variable for dampening speed values</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">float</span> transitionTime = <span class="number">.25</span>f;</span><br><span class="line"><span class="comment">// float variable for speed limit</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">float</span> speedLimit = <span class="number">1.0f</span>;</span><br><span class="line"><span class="comment">// boolean variable for moving diagonally, combining x and z speed</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">bool</span> moveDiagonally = <span class="literal">true</span>;</span><br><span class="line"><span class="comment">// boolean variable for directing the charater's direction with the mouse</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">bool</span> mouseRotate = <span class="literal">true</span>;</span><br><span class="line"><span class="comment">// boolean variable for directing the charater's direction with the keyboard</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">bool</span> keyboardRotate = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">float</span> jumpHeight = <span class="number">1f</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> verticalSpeed = <span class="number">0f</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> xVelocity = <span class="number">0f</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> zVelocity = <span class="number">0f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* ----------------------------------------</span></span><br><span class="line"><span class="comment"> * At Start, get character's Animator and Character Controller components</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span> (<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="comment">// Assign character's Controller to 'controller' variable</span></span><br><span class="line">controller = GetComponent&lt;CharacterController&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Assign character's Animator to 'anim' variable</span></span><br><span class="line">anim = GetComponent&lt;Animator&gt;();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ----------------------------------------</span></span><br><span class="line"><span class="comment"> * Whenever Directional controls are used, update variables from the Animator</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span> (<span class="params"></span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// IF Character Controller is grounded...</span></span><br><span class="line">        <span class="keyword">if</span> (controller.isGrounded) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (Input.GetKey(KeyCode.Space))</span><br><span class="line">            &#123;</span><br><span class="line">                anim.SetTrigger(<span class="string">"Jump"</span>);</span><br><span class="line">                verticalSpeed = jumpHeight;</span><br><span class="line">            &#125;      </span><br><span class="line"></span><br><span class="line"><span class="comment">// IF 'Q' key is being pressed, THEN...</span></span><br><span class="line"><span class="keyword">if</span>(Input.GetKey(KeyCode.Q))&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//... set 'TurnLeft' bool variable of the Animator as true</span></span><br><span class="line">anim.SetBool(<span class="string">"TurnLeft"</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ... and rotate character to its left</span></span><br><span class="line">transform.Rotate(Vector3.up * (Time.deltaTime * <span class="number">-45.0f</span>), Space.World);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ELSE, if 'Q' key is NOT being pressed, THEN...</span></span><br><span class="line">&#125;  <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//... set 'TurnLeft' bool variable of the Animator as false</span></span><br><span class="line">anim.SetBool(<span class="string">"TurnLeft"</span>, <span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// IF 'E' key is being pressed, THEN...</span></span><br><span class="line"><span class="keyword">if</span>(Input.GetKey(KeyCode.E))&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//... set 'TurnRight' bool variable of the Animator as true</span></span><br><span class="line">anim.SetBool(<span class="string">"TurnRight"</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ... and rotate character to its right</span></span><br><span class="line">transform.Rotate(Vector3.up * (Time.deltaTime * <span class="number">45.0f</span>), Space.World);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ELSE, if 'E' key is NOT being pressed, THEN...</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//... set 'TurnRight' bool variable of the Animator as false</span></span><br><span class="line">anim.SetBool(<span class="string">"TurnRight"</span>, <span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (Input.GetKey (KeyCode.RightShift) ||Input.GetKey (KeyCode.LeftShift))</span><br><span class="line"><span class="comment">// IF Shift key is pressed, THEN set speed limit to 0.5, slowing down the character</span></span><br><span class="line">speedLimit = <span class="number">0.5f</span>;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="comment">// ELSE, set speed limit to full speed (1.0)</span></span><br><span class="line">speedLimit = <span class="number">1.0f</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// a float variable to get Horizontal Axis input (left/right)</span></span><br><span class="line"><span class="keyword">float</span> h = Input.GetAxis(<span class="string">"Horizontal"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// a float variable to get Vertical Axis input (forward/backwards)</span></span><br><span class="line"><span class="keyword">float</span> v = Input.GetAxis(<span class="string">"Vertical"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// float variable for horizontal speed and direction, obtained by multiplying Horizontal Axis by the speed limit</span></span><br><span class="line"><span class="keyword">float</span> xSpeed = h * speedLimit;</span><br><span class="line"></span><br><span class="line"><span class="comment">// float variable for vertical speed and direction, obtained by multiplying Vertical Axis by the speed limit</span></span><br><span class="line"><span class="keyword">float</span> zSpeed = v * speedLimit;</span><br><span class="line"></span><br><span class="line"><span class="comment">// float variable for absolute speed </span></span><br><span class="line"><span class="keyword">float</span> speed = Mathf.Sqrt(h*h+v*v);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(v!=<span class="number">0</span> &amp;&amp; !moveDiagonally)</span><br><span class="line"><span class="comment">// IF Vertical Axis input is different than 0 AND moveDiagonally boolean is set to false, THEN set horizontal speed as 0 </span></span><br><span class="line">xSpeed = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(v!=<span class="number">0</span> &amp;&amp; keyboardRotate)</span><br><span class="line"><span class="comment">// IF Vertical Axis input is different than 0 AND keyboardRotate boolean is set to true, THEN rotate character according to Horizontal Axis input</span></span><br><span class="line"><span class="keyword">this</span>.transform.Rotate(Vector3.up * h, Space.World);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(mouseRotate)</span><br><span class="line"><span class="comment">// IF mouseRotate boolean is set to true, THEN rotate character according to Horizontal mouse movement</span></span><br><span class="line"><span class="keyword">this</span>.transform.Rotate(Vector3.up * (Input.GetAxis(<span class="string">"Mouse X"</span>)) * Mathf.Sign(v), Space.World);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set zSpeed float as 'zSpeed' variable of the Animator, dampening it for the amount of time in 'transitionTime' </span></span><br><span class="line">anim.SetFloat(<span class="string">"zSpeed"</span>, zSpeed, transitionTime, Time.deltaTime);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set xSpeed float as 'xSpeed' variable of the Animator, dampening it for the amount of time in 'transitionTime' </span></span><br><span class="line">anim.SetFloat(<span class="string">"xSpeed"</span>, xSpeed, transitionTime, Time.deltaTime);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set speed float as 'Speed' variable of the Animator, dampening it for the amount of time in 'transitionTime' </span></span><br><span class="line">anim.SetFloat(<span class="string">"Speed"</span>, speed, transitionTime, Time.deltaTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(Input.GetKeyDown(KeyCode.F))&#123;</span><br><span class="line"><span class="comment">// IF 'F' key is pressed, THEN set 'Grenade' variable of the Animator as true</span></span><br><span class="line">anim.SetBool(<span class="string">"Grenade"</span>, <span class="literal">true</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// ELSE, set 'Grenade' variable of the Animator as false</span></span><br><span class="line">anim.SetBool(<span class="string">"Grenade"</span>, <span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(Input.GetButtonDown(<span class="string">"Fire1"</span>))&#123;</span><br><span class="line"><span class="comment">// IF the 'Fire' button is pressed, THEN set 'Fire' variable of the Animator as true</span></span><br><span class="line">anim.SetBool(<span class="string">"Fire"</span>, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(Input.GetButtonUp(<span class="string">"Fire1"</span>))&#123;</span><br><span class="line"><span class="comment">// IF the 'Fire' button is released, THEN set 'Fire' variable of the Animator as false</span></span><br><span class="line">anim.SetBool(<span class="string">"Fire"</span>, <span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnAnimatorMove</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Vector3 deltaPosition = anim.deltaPosition;</span><br><span class="line">        <span class="keyword">if</span> (controller.isGrounded)</span><br><span class="line">        &#123;</span><br><span class="line">            xVelocity = controller.velocity.x;</span><br><span class="line">            zVelocity = controller.velocity.z;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            deltaPosition.x = xVelocity * Time.deltaTime;</span><br><span class="line">            deltaPosition.z = zVelocity * Time.deltaTime;</span><br><span class="line">            anim.SetBool(<span class="string">"Jump"</span>, <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        deltaPosition.y = verticalSpeed;</span><br><span class="line">        controller.Move(deltaPosition);</span><br><span class="line">        verticalSpeed += Physics.gravity.y * Time.deltaTime;</span><br><span class="line">        <span class="keyword">if</span>((controller.collisionFlags &amp; CollisionFlags.Below) != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            verticalSpeed = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、工作原理"><a href="#四、工作原理" class="headerlink" title="四、工作原理"></a>四、工作原理</h2><p>注意到当这个功能脚本加入到MsLaser时，MsLaser的Animator组件|Apply Root Motion参数变为Handled by Script（由脚本管理）。</p><p>OnAnimatorMove()方法中的指令重写了动画动作，其中controller.Move(deltaPosition)通过deltaPosition 3D 向量基本上替换了跳跃的方向。deltaPosition 3D 向量由角色跳前瞬时速度和变量jumpHeight与重力的随时间变化的计算结果（Y轴）。</p><p>通过语句“ SetTrigger(“Jump”) ”在Animator控制器里触发转变条件Jump为true，实现从Any State到Jump的状态转变。</p><p>Trigger类型参数与Bool类型参数类似，不同在于Trigger类型参数在被触发为true后，自动变回false。不需要再写代码将触发器设为false。</p><p>Trigger类型参数适用于事件发生后返回原来的状态。Jump状态到Move状态不需要条件，因此Jump动画播放完返回Move状态。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将多个状态组成子状态机</title>
      <link href="/2020/06/14/%E5%B0%86%E5%A4%9A%E4%B8%AA%E7%8A%B6%E6%80%81%E7%BB%84%E6%88%90%E5%AD%90%E7%8A%B6%E6%80%81%E6%9C%BA/"/>
      <url>/2020/06/14/%E5%B0%86%E5%A4%9A%E4%B8%AA%E7%8A%B6%E6%80%81%E7%BB%84%E6%88%90%E5%AD%90%E7%8A%B6%E6%80%81%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<p><strong>Unity 2018 Cookbook</strong> | <strong>Charpter 10 3D Animation</strong> | <strong>Organizing States into Sub-State Machines</strong></p><p>当Animator窗口中的内容太过凌乱时，我们可以考虑将多个动画状态组成子状态机。</p><p>在本篇，我们将使用这个技术来驱动角色。因为要用到的动画剪辑不包含根动作（Root Motion），借此说明如何在无需根动作（Root Motion）的条件下通过一个脚本控制角色从左/右转向45°。</p><a id="more"></a><h2 id="一、导入资源"><a href="#一、导入资源" class="headerlink" title="一、导入资源"></a>一、导入资源</h2><p>用到的资源链接：</p><p><a href="https://github.com/PacktPublishing/Unity-2018-Cookbook-Third-Edition/tree/master/Chapter10_3DAnimation/10_04_substate_machines" target="_blank" rel="noopener">https://github.com/PacktPublishing/Unity-2018-Cookbook-Third-Edition/tree/master/Chapter10_3DAnimation/10_04_substate_machines</a></p><p>完成后的项目资源链接：</p><p><a href="https://github.com/dr-matt-smith/unity-cookbook-2018-ch10-04-substate-machines" target="_blank" rel="noopener">https://github.com/dr-matt-smith/unity-cookbook-2018-ch10-04-substate-machines</a></p><p>导入资源Turning.unitypackage、<a href="mailto:Swat@turn_right_45_degrees.fbx">Swat@turn_right_45_degrees.fbx</a>、Swat@turn_left.fbx、BasicController.cs。</p><h2 id="二、设置动画剪辑"><a href="#二、设置动画剪辑" class="headerlink" title="二、设置动画剪辑"></a>二、设置动画剪辑</h2><p>在项目窗口找到并双击打开关卡场景mecanimPlayground，接下来设置动画剪辑。</p><p>在项目窗口选中Swat@turn_left，在Inspector选中Rig标签，修改Animation Type为Humanoid，设置Avatar Definition为Create From this Model，点击Apply确认应用。</p><p>点击Animation标签，点击Clamp Range按钮，调节动画时间线（Start：0，End：40），勾选Loop Time。</p><p>勾选Root Transform Rotation下方的Bake Into Pose，设置Based Upon为Original。勾选Root Transform Position ( Y )下方的Bake Into Pose，设置Based Upon (atStart)为Original。保持Root TransformPosition (XZ)下方的Bake Into Pose未选中，点击Apply应用修改。</p><p><img src="/2020/06/14/%E5%B0%86%E5%A4%9A%E4%B8%AA%E7%8A%B6%E6%80%81%E7%BB%84%E6%88%90%E5%AD%90%E7%8A%B6%E6%80%81%E6%9C%BA/image-20200614233432771.png" alt="image-20200614233432771"></p><p>对Swat@turning_right_45_degrees做同样的设置。</p><h2 id="三、添加子状态机"><a href="#三、添加子状态机" class="headerlink" title="三、添加子状态机"></a>三、添加子状态机</h2><p>双击动画控制器MainCharacter并进入Animator窗口，选则Parameters标签，点击加号新建两个布尔类型参数，分别重命名为TurnLeft，TurnRight。</p><p>选中Base Layer层，在网格区域右键，选择 select Create Sub-StateMachine，在Inspector重命名为Turn。双击进入子状态机Turn。在网格区域右键，选择 Create State | Empty 新建一个空状态，重命名为Turn Left。同样地，再新建一个状态Turn Right。给状态Turn Left分配动画剪辑turn_left motion clip，给状态Turn Right分配动画剪辑turning_right_45_degrees。</p><p><img src="/2020/06/14/%E5%B0%86%E5%A4%9A%E4%B8%AA%E7%8A%B6%E6%80%81%E7%BB%84%E6%88%90%E5%AD%90%E7%8A%B6%E6%80%81%E6%9C%BA/image-20200615000526924.png" alt="image-20200615000526924"></p><p>点击顶部信息栏的Base Layer回到Base Layer层。</p><p><img src="/2020/06/14/%E5%B0%86%E5%A4%9A%E4%B8%AA%E7%8A%B6%E6%80%81%E7%BB%84%E6%88%90%E5%AD%90%E7%8A%B6%E6%80%81%E6%9C%BA/image-20200615001935514.png" alt="image-20200615001935514"></p><p>从Move状态起始，新建一个转换关系,  点击Turn，选择State | Turn Left。选中刚刚建立的箭头，在Inspector里取消勾选Has Exit Time，在条件列表里点击加号，添加条件TurnLeft值为true。同样地，再建一个从Move到Turn Right子状态的转换关系。</p><p><img src="/2020/06/14/%E5%B0%86%E5%A4%9A%E4%B8%AA%E7%8A%B6%E6%80%81%E7%BB%84%E6%88%90%E5%AD%90%E7%8A%B6%E6%80%81%E6%9C%BA/image-20200615002218614.png" alt="image-20200615002218614"></p><p><img src="/2020/06/14/%E5%B0%86%E5%A4%9A%E4%B8%AA%E7%8A%B6%E6%80%81%E7%BB%84%E6%88%90%E5%AD%90%E7%8A%B6%E6%80%81%E6%9C%BA/image-20200615141244633.png" alt="image-20200615141244633"></p><p>进入子状态机Turn,选中Turn Left状态右键建立转变关系，点击(Up)Base Layer，选则States|Move。选中刚建立的箭头，再Inspector里取消勾选Has Exit Time，在条件列表里点击加号添加条件TurnLeft值为false。同样再建立从Turn Right到Move的转变关系。</p><p><img src="/2020/06/14/%E5%B0%86%E5%A4%9A%E4%B8%AA%E7%8A%B6%E6%80%81%E7%BB%84%E6%88%90%E5%AD%90%E7%8A%B6%E6%80%81%E6%9C%BA/image-20200615135722126.png" alt="image-20200615135722126"></p><p><img src="/2020/06/14/%E5%B0%86%E5%A4%9A%E4%B8%AA%E7%8A%B6%E6%80%81%E7%BB%84%E6%88%90%E5%AD%90%E7%8A%B6%E6%80%81%E6%9C%BA/image-20200615140500867.png" alt="image-20200615140500867"></p><p><img src="/2020/06/14/%E5%B0%86%E5%A4%9A%E4%B8%AA%E7%8A%B6%E6%80%81%E7%BB%84%E6%88%90%E5%AD%90%E7%8A%B6%E6%80%81%E6%9C%BA/image-20200615140609472.png" alt="image-20200615140609472"></p><h2 id="四、脚本功能"><a href="#四、脚本功能" class="headerlink" title="四、脚本功能"></a>四、脚本功能</h2><p>打开脚本<strong>BasicController.cs</strong>，在<strong>Update方法</strong>的<strong>“ if(controller.isGrounded){ “</strong>下一行添加如下代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span> (<span class="params"></span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// IF Character Controller is grounded...</span></span><br><span class="line">    <span class="keyword">if</span>(controller.isGrounded)&#123;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKey(KeyCode.Q))</span><br><span class="line">        &#123;</span><br><span class="line">            anim.SetBool(<span class="string">"TurnLeft"</span>, <span class="literal">true</span>);</span><br><span class="line">            transform.Rotate(Vector3.up * (Time.deltaTime * <span class="number">-45.0f</span>), Space.World);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            anim.SetBool(<span class="string">"TurnLeft"</span>, <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKey(KeyCode.E))</span><br><span class="line">        &#123;</span><br><span class="line">            anim.SetBool(<span class="string">"TurnRight"</span>, <span class="literal">true</span>);</span><br><span class="line">            transform.Rotate(Vector3.up * (Time.deltaTime * <span class="number">45.0f</span>), Space.World);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            anim.SetBool(<span class="string">"TurnRight"</span>, <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存脚本，选中Hirarchy中的MsLaser，在Inspector里的Basic Controller组件下取消勾选Move Diagonally、Mouse Rotate，勾选KeyBoard Rotate。</p><p><img src="/2020/06/14/%E5%B0%86%E5%A4%9A%E4%B8%AA%E7%8A%B6%E6%80%81%E7%BB%84%E6%88%90%E5%AD%90%E7%8A%B6%E6%80%81%E6%9C%BA/image-20200615150738351.png" alt="image-20200615150738351"></p><p>播放游戏，我们可以按住Q键/E键来控制角色的左右转向。</p><h2 id="五、工作原理"><a href="#五、工作原理" class="headerlink" title="五、工作原理"></a>五、工作原理</h2><p>子状态机可以将多个状态封装成一个简便易调用的实体。子状态机内部的状态可以转变到外部的状态，甚至可以转变到其他子状态机里的状态。</p><p>关于角色转向，我们使用“ transform.Rotate(Vector3.up *(Time.deltaTime * -45.0f) , Space.World) ”语句让角色在我们按下Q/E键时转向，语句” animator.SetBool(“TurnLeft”, true) “用于触发正确的动画剪辑，从而不需要根动作（Root Motion）。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过动画层和动画遮罩制作混合动画</title>
      <link href="/2020/06/14/%E9%80%9A%E8%BF%87%E5%8A%A8%E7%94%BB%E5%B1%82%E5%92%8C%E5%8A%A8%E7%94%BB%E9%81%AE%E7%BD%A9%E5%88%B6%E4%BD%9C%E6%B7%B7%E5%90%88%E5%8A%A8%E7%94%BB/"/>
      <url>/2020/06/14/%E9%80%9A%E8%BF%87%E5%8A%A8%E7%94%BB%E5%B1%82%E5%92%8C%E5%8A%A8%E7%94%BB%E9%81%AE%E7%BD%A9%E5%88%B6%E4%BD%9C%E6%B7%B7%E5%90%88%E5%8A%A8%E7%94%BB/</url>
      
        <content type="html"><![CDATA[<p><strong>Unity 2018 Cookbook</strong> | <strong>Chapter 10 3D Animation</strong> | <strong>Mixing animations with Layersand Masks</strong></p><p>使用混合动画可以增加角色动画的复杂度，节省了很多动画剪辑。通过混合动画，我们可以对角色指定身体部位播放指定的动画。</p><p>在本篇中，我们将使用这个技术实现角色在下半身保持闲置或行动的同时，上半身做出射击和扔手榴弹的动作。</p><a id="more"></a><h2 id="一、导入资源"><a href="#一、导入资源" class="headerlink" title="一、导入资源"></a>一、导入资源</h2><p>需要的资源的链接：</p><p><a href="https://github.com/PacktPublishing/Unity-2018-Cookbook-Third-Edition/tree/master/Chapter10_3DAnimation/10_03_mix_mask_anims" target="_blank" rel="noopener">https://github.com/PacktPublishing/Unity-2018-Cookbook-Third-Edition/tree/master/Chapter10_3DAnimation/10_03_mix_mask_anims</a></p><p>完成后的项目资源链接：</p><p><a href="https://github.com/dr-matt-smith/unity-cookbook-2018-ch10-03-mask-layers-mixing-animations" target="_blank" rel="noopener">https://github.com/dr-matt-smith/unity-cookbook-2018-ch10-03-mask-layers-mixing-animations</a></p><p>首先导入Mixing.unitypackage、<a href="mailto:Swat@firing_rifle.fbx">Swat@firing_rifle.fbx</a>、Swat@toss_grenade.fbx、BasicController.cs 。</p><h2 id="二、设置动画剪辑"><a href="#二、设置动画剪辑" class="headerlink" title="二、设置动画剪辑"></a>二、设置动画剪辑</h2><p>在项目窗口里双击打开场景mecanimPlayground level，选中项目窗口里的Swat@firing_rifle，在Inspector选中Rig标签，修改Animation Type为Humanoid，设置Avatar Definition为Create From this Model，点击Apply确认。</p><p><img src="/2020/06/14/%E9%80%9A%E8%BF%87%E5%8A%A8%E7%94%BB%E5%B1%82%E5%92%8C%E5%8A%A8%E7%94%BB%E9%81%AE%E7%BD%A9%E5%88%B6%E4%BD%9C%E6%B7%B7%E5%90%88%E5%8A%A8%E7%94%BB/image-20200614184059665.png" alt="image-20200614184059665"></p><p>然后点击Animation选项卡，点击Clamp Range按钮后可以调节动画时间线。勾选Loop Time、Loop Pose，在Root Transform Rotation下方勾选Bake Into Pose，Based Upon选择Original。在Root Transform Position (Y)下方勾选Bake Into Pose，Based Upon (at Start)选择Original。Root Transform Position (XZ)下方的Bake Into Pose保持不勾选，点击Apply。</p><p><img src="/2020/06/14/%E9%80%9A%E8%BF%87%E5%8A%A8%E7%94%BB%E5%B1%82%E5%92%8C%E5%8A%A8%E7%94%BB%E9%81%AE%E7%BD%A9%E5%88%B6%E4%BD%9C%E6%B7%B7%E5%90%88%E5%8A%A8%E7%94%BB/image-20200614185114013.png" alt="image-20200614185114013"></p><p>同理设置Swa t@toss_grenade，具体不同设置建下图。</p><p><img src="/2020/06/14/%E9%80%9A%E8%BF%87%E5%8A%A8%E7%94%BB%E5%B1%82%E5%92%8C%E5%8A%A8%E7%94%BB%E9%81%AE%E7%BD%A9%E5%88%B6%E4%BD%9C%E6%B7%B7%E5%90%88%E5%8A%A8%E7%94%BB/image-20200614185339003.png" alt="image-20200614185339003"></p><h2 id="三、创建动画遮罩"><a href="#三、创建动画遮罩" class="headerlink" title="三、创建动画遮罩"></a>三、创建动画遮罩</h2><p>在项目窗口新建一个Avatar Mask并重命名为BodyMask。选中BodyMask，在Inspector里展开Humanoid section，身体区块或IK节点呈现绿色表示已被选中（默认全部选中），红色则表示未选中。我们点击取消选中角色的两条腿、脚下踩着的圆形区块以及两个脚IK节点。</p><p><img src="/2020/06/14/%E9%80%9A%E8%BF%87%E5%8A%A8%E7%94%BB%E5%B1%82%E5%92%8C%E5%8A%A8%E7%94%BB%E9%81%AE%E7%BD%A9%E5%88%B6%E4%BD%9C%E6%B7%B7%E5%90%88%E5%8A%A8%E7%94%BB/image-20200614185945985.png" alt="image-20200614185945985"></p><h2 id="四、创建动画层"><a href="#四、创建动画层" class="headerlink" title="四、创建动画层"></a>四、创建动画层</h2><p>在项目窗口里双击打开动画控制器MainCharacter并进入到Animator窗口。</p><p>点击Layers选项卡，然后点击加号新建一个动画层，命名为Upper Body。点击Upper Body右边的小齿轮按钮进一步设置，修改Weight参数为1，然后在Mask选则刚才做好的BodyMask，Blending选择Additive。</p><p><img src="/2020/06/14/%E9%80%9A%E8%BF%87%E5%8A%A8%E7%94%BB%E5%B1%82%E5%92%8C%E5%8A%A8%E7%94%BB%E9%81%AE%E7%BD%A9%E5%88%B6%E4%BD%9C%E6%B7%B7%E5%90%88%E5%8A%A8%E7%94%BB/image-20200614190725613.png" alt="image-20200614190725613"></p><p>在Upper Body层里（即选中Upper Body层），在网格区里通过右键|Create State |Empty新建两个空的状态，然后分别重命名为Fire、Grenade，将橘黄色的默认状态重命名为Null。</p><p>点击Parameters选项卡，新建两个Bool类型条件参数，分别命名为Fire、Grenade。选中Fire状态，在Inspector里的Motion选择动画剪辑firing_rifle。同理，Grenade的Motion选择动画剪辑toss_grenade。</p><p><img src="/2020/06/14/%E9%80%9A%E8%BF%87%E5%8A%A8%E7%94%BB%E5%B1%82%E5%92%8C%E5%8A%A8%E7%94%BB%E9%81%AE%E7%BD%A9%E5%88%B6%E4%BD%9C%E6%B7%B7%E5%90%88%E5%8A%A8%E7%94%BB/image-20200614192555087.png" alt="image-20200614192555087"></p><p>右键Null状态，选择Make Transition，点击Fire状态，建立一条由Null到Fire的转变关系（箭头）。选中这个箭头，在Inspector里取消勾选Has Exit Time选项，在Condition里点击加号添加转变条件，选择Fire，值选中true。同理，给Null状态到Grenade状态建立一个转变关系，取消勾选Has Exit Time，转变条件为Grenade值等于true。</p><p><img src="/2020/06/14/%E9%80%9A%E8%BF%87%E5%8A%A8%E7%94%BB%E5%B1%82%E5%92%8C%E5%8A%A8%E7%94%BB%E9%81%AE%E7%BD%A9%E5%88%B6%E4%BD%9C%E6%B7%B7%E5%90%88%E5%8A%A8%E7%94%BB/image-20200614192029296.png" alt="image-20200614192029296"></p><p>然后再建立Grenade到Null的转变箭头，勾选Has Exit Time，转变条件为Grenade值等于false。建立Fire到Null的转变箭头，勾选Has Exit Time，转变条件为Fire值等于false。</p><p><img src="/2020/06/14/%E9%80%9A%E8%BF%87%E5%8A%A8%E7%94%BB%E5%B1%82%E5%92%8C%E5%8A%A8%E7%94%BB%E9%81%AE%E7%BD%A9%E5%88%B6%E4%BD%9C%E6%B7%B7%E5%90%88%E5%8A%A8%E7%94%BB/image-20200614193132066.png" alt="image-20200614193132066"></p><h2 id="五、脚本功能"><a href="#五、脚本功能" class="headerlink" title="五、脚本功能"></a>五、脚本功能</h2><p>双击打开脚本BasicController.cs，再Update方法结尾处添上如下代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span> (<span class="params"></span>)</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">//控制播放扔手榴弹动画    </span></span><br><span class="line">    <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.F))</span><br><span class="line">    &#123;</span><br><span class="line">        anim.SetBool(<span class="string">"Grenade"</span>, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        anim.SetBool(<span class="string">"Grenade"</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//控制播放开火射击动画</span></span><br><span class="line">    <span class="keyword">if</span> (Input.GetButtonDown(<span class="string">"Fire1"</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        anim.SetBool(<span class="string">"Fire"</span>, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (Input.GetButtonUp(<span class="string">"Fire1"</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        anim.SetBool(<span class="string">"Fire"</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存代码，然后播放游戏，这时我们可以通过WASD控制角色走动，并且可以一边走动一边单击鼠标左键开火，一边走动一边按F键扔手榴弹。</p><h2 id="六、实现原理"><a href="#六、实现原理" class="headerlink" title="六、实现原理"></a>六、实现原理</h2><p>动画遮罩（Avatar Mask）筛出角色的某个身体部位再某个动画层中的某个动作。</p><p>除此之外，案例中Upper body层的设置参数Blending除了Additve还可以设置为Override。设置为Additive表示当前层的动画状态将附加在权重低的动画层之上。如果改为Override，当前层的动画将完全覆盖权重低的动画层。</p><p>关于动画层和动画遮罩的更多信息：</p><p><a href="http://docs.unity3d.com/Manual/AnimationLayers.html" target="_blank" rel="noopener">http://docs.unity3d.com/Manual/AnimationLayers.html</a></p><p><a href="http://docs.unity3d.com/Manual/class-AvatarMask.html" target="_blank" rel="noopener">http://docs.unity3d.com/Manual/class-AvatarMask.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用根动作和混合树实现角色走动</title>
      <link href="/2020/06/13/%E5%88%A9%E7%94%A8%E6%A0%B9%E5%8A%A8%E4%BD%9C%E5%92%8C%E6%B7%B7%E5%90%88%E6%A0%91%E5%AE%9E%E7%8E%B0%E8%A7%92%E8%89%B2%E8%B5%B0%E5%8A%A8/"/>
      <url>/2020/06/13/%E5%88%A9%E7%94%A8%E6%A0%B9%E5%8A%A8%E4%BD%9C%E5%92%8C%E6%B7%B7%E5%90%88%E6%A0%91%E5%AE%9E%E7%8E%B0%E8%A7%92%E8%89%B2%E8%B5%B0%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<p><strong>Unity 2018 Cookbook</strong> | <strong>Charpter 10 3D Animation</strong> | <strong>Moving Your character with root motion and Blend Trees</strong></p><p>Mecanim动画系统可以将根动作（Root Motion）应用到角色上。换言之，它可以让角色根据动画剪辑自然协调地运动从而避免角色虽然有所移动但看上去像是在循环播放原地踏步。</p><p>该动画系统的另一个特色功能是混合树。混合树简单易用，可以过渡自然地混合多个动画剪辑。在本篇，物品们将利用这些特色功能实现角色的向前或向后行走、奔跑，以及以不同的速度左拐和右拐。</p><a id="more"></a><h2 id="一、资源导入"><a href="#一、资源导入" class="headerlink" title="一、资源导入"></a>一、资源导入</h2><p>往Unity导入动画有两种形式。其中一种形式是一个动作片段对应一个动画文件，导入的每一个动画文件都有统一的命名格式（modelName@animation），比如MsLazer@idle、MsLazer@jumping等。另一种形式是一个模型对应一个动画文件，这个动画包含所有需要的动作片段，使用时需要开发者在Unity编辑器中通过指定起始帧和结束帧来剪切。 本篇使用的是第一种形式，因为比较简单明了。 </p><p>了解更多可以参考文档： <a href="https://docs.unity3d.com/Manual/Splittinganimations.html" target="_blank" rel="noopener">https://docs.unity3d.com/Manual/Splittinganimations.html</a> .</p><p>本篇使用的资源链接：<a href="https://github.com/PacktPublishing/Unity-2018-Cookbook-Third-Edition/tree/master/Chapter10_3DAnimation/10_02_root_motion_blend" target="_blank" rel="noopener">https://github.com/PacktPublishing/Unity-2018-Cookbook-Third-Edition/tree/master/Chapter10_3DAnimation/10_02_root_motion_blend</a></p><p>完成后项目资源链接：<a href="https://github.com/dr-matt-smith/unity-cookbook-2018-ch10-02-root-motion-blend-trees" target="_blank" rel="noopener">https://github.com/dr-matt-smith/unity-cookbook-2018-ch10-02-root-motion-blend-trees</a></p><p>新建一个项目，导入Character_02.unitypackage。导入FBX文件Swat@rifle_run、Swat@run_backward、Swat@strafe、Swat@strafe_2、Swat@strafe_left、Swat@strafe_right、Swat@walking、Swat@walking_backward。</p><h2 id="二、设置动画片段"><a href="#二、设置动画片段" class="headerlink" title="二、设置动画片段"></a>二、设置动画片段</h2><p>在项目窗口选中Swat@rifle_run，在Inspector点击Rig标签。修改AnimationType为Humanoid，设置Avatar Definition为Create From this Model，点击Apply确认。</p><p><img src="/2020/06/13/%E5%88%A9%E7%94%A8%E6%A0%B9%E5%8A%A8%E4%BD%9C%E5%92%8C%E6%B7%B7%E5%90%88%E6%A0%91%E5%AE%9E%E7%8E%B0%E8%A7%92%E8%89%B2%E8%B5%B0%E5%8A%A8/image-20200615164503765.png" alt="image-20200615164503765"></p><p>点击Animations标签 (Rig的右边 )，预览窗口 (Inspector底部)将显示消息“ No model is available for preview ”。拖拽MsLaser@T-Pose到预览窗口。</p><p><img src="/2020/06/13/%E5%88%A9%E7%94%A8%E6%A0%B9%E5%8A%A8%E4%BD%9C%E5%92%8C%E6%B7%B7%E5%90%88%E6%A0%91%E5%AE%9E%E7%8E%B0%E8%A7%92%E8%89%B2%E8%B5%B0%E5%8A%A8/image-20200615164908474.png" alt="image-20200615164908474"></p><p>勾选Loop Time和Loop Pose选项。点击Clamp Range按钮调节时间线调至动画片段的实际时间段（23帧后角色暂停运动左移剪掉），点击Apply确认。</p><p><img src="/2020/06/13/%E5%88%A9%E7%94%A8%E6%A0%B9%E5%8A%A8%E4%BD%9C%E5%92%8C%E6%B7%B7%E5%90%88%E6%A0%91%E5%AE%9E%E7%8E%B0%E8%A7%92%E8%89%B2%E8%B5%B0%E5%8A%A8/image-20200615165134381.png" alt="image-20200615165134381"></p><p><img src="/2020/06/13/%E5%88%A9%E7%94%A8%E6%A0%B9%E5%8A%A8%E4%BD%9C%E5%92%8C%E6%B7%B7%E5%90%88%E6%A0%91%E5%AE%9E%E7%8E%B0%E8%A7%92%E8%89%B2%E8%B5%B0%E5%8A%A8/image-20200615165520085.png" alt="image-20200615165520085"></p><p>勾选Root Transform Rotation下的Bake Into Pose，设置Based Upon为Original。在Root Transform Position (Y)下勾选Bake Into Pose，设置BasedUpon (at Start)为Original。保持RootTransform Position (XZ)下的Bake Into Pose为未勾选，设置Based Upon (atStart)为Center of Mass，最后点击Apply。</p><p><img src="/2020/06/13/%E5%88%A9%E7%94%A8%E6%A0%B9%E5%8A%A8%E4%BD%9C%E5%92%8C%E6%B7%B7%E5%90%88%E6%A0%91%E5%AE%9E%E7%8E%B0%E8%A7%92%E8%89%B2%E8%B5%B0%E5%8A%A8/image-20200615170229071.png" alt="image-20200615170229071"></p><p>重复上述步骤设置以下动画片段：Swat@run_backward、Swat@strafe、Swat@strafe_2、Swat@strafe_left、Swat@strafe_right、Swat@walking、Swat@walking_backward。</p><p>现在在场景中添加一个3D平台，在Hierarchy窗口里右键，选择3D Object | Plane。</p><p><img src="/2020/06/13/%E5%88%A9%E7%94%A8%E6%A0%B9%E5%8A%A8%E4%BD%9C%E5%92%8C%E6%B7%B7%E5%90%88%E6%A0%91%E5%AE%9E%E7%8E%B0%E8%A7%92%E8%89%B2%E8%B5%B0%E5%8A%A8/image-20200615171036295.png" alt="image-20200615171036295"></p><p>将预制体MsLaser的一个实例拖拽到场景中的平台上。在Hierarchy窗口选中MsLaser这个GameObject，在Inspector添加一个Character Controller组件（点击Add Component按钮，选择Component | Physics| Character Controller）。然后设置Skin Width为0.0001，Center为（0, 0.9, 0），修改Radius为0.34，Height为1.79。</p><p><img src="/2020/06/13/%E5%88%A9%E7%94%A8%E6%A0%B9%E5%8A%A8%E4%BD%9C%E5%92%8C%E6%B7%B7%E5%90%88%E6%A0%91%E5%AE%9E%E7%8E%B0%E8%A7%92%E8%89%B2%E8%B5%B0%E5%8A%A8/image-20200615173511072.png" alt="image-20200615173511072"></p><p><img src="/2020/06/13/%E5%88%A9%E7%94%A8%E6%A0%B9%E5%8A%A8%E4%BD%9C%E5%92%8C%E6%B7%B7%E5%90%88%E6%A0%91%E5%AE%9E%E7%8E%B0%E8%A7%92%E8%89%B2%E8%B5%B0%E5%8A%A8/image-20200615174131698.png" alt="image-20200615174131698"></p><p>在Project窗口里双击动画控制器MainCharacter顺便打开了Animator窗口。选择Animator窗口左上的Parameters标签，点击加号添加3个Float类型参数，分别重命名为xSpeed、zSpeed、Speed。</p><p><img src="/2020/06/13/%E5%88%A9%E7%94%A8%E6%A0%B9%E5%8A%A8%E4%BD%9C%E5%92%8C%E6%B7%B7%E5%90%88%E6%A0%91%E5%AE%9E%E7%8E%B0%E8%A7%92%E8%89%B2%E8%B5%B0%E5%8A%A8/image-20200615175039264.png" alt="image-20200615175039264"></p><p><img src="/2020/06/13/%E5%88%A9%E7%94%A8%E6%A0%B9%E5%8A%A8%E4%BD%9C%E5%92%8C%E6%B7%B7%E5%90%88%E6%A0%91%E5%AE%9E%E7%8E%B0%E8%A7%92%E8%89%B2%E8%B5%B0%E5%8A%A8/image-20200615175142329.png" alt="image-20200615175142329"></p><h2 id="三、建立混合树"><a href="#三、建立混合树" class="headerlink" title="三、建立混合树"></a>三、建立混合树</h2><p>在已有的Base Layer动画中里已经有了一个Idle状态，这时我们需要再新建一个，在网格区域右键选择Create State | From New BlendTree。选中BlendTree状态，在Inspector里重命名为Move 。</p><p><img src="/2020/06/13/%E5%88%A9%E7%94%A8%E6%A0%B9%E5%8A%A8%E4%BD%9C%E5%92%8C%E6%B7%B7%E5%90%88%E6%A0%91%E5%AE%9E%E7%8E%B0%E8%A7%92%E8%89%B2%E8%B5%B0%E5%8A%A8/image-20200615175743603.png" alt="image-20200615175743603"></p><p>双击进入Move，里边有一个空的混合树。选中这个Blend Tree，在Inspector重命名为itMove,，然后修改Blend Type为2DFreeform Directional。在Parameters 处设置参数为xSpeed和zSpeed。最后点击Motion列表底部的加号添加动作域，添加9个动作域。</p><p><img src="/2020/06/13/%E5%88%A9%E7%94%A8%E6%A0%B9%E5%8A%A8%E4%BD%9C%E5%92%8C%E6%B7%B7%E5%90%88%E6%A0%91%E5%AE%9E%E7%8E%B0%E8%A7%92%E8%89%B2%E8%B5%B0%E5%8A%A8/image-20200615180331878.png" alt="image-20200615180331878"></p><p><img src="/2020/06/13/%E5%88%A9%E7%94%A8%E6%A0%B9%E5%8A%A8%E4%BD%9C%E5%92%8C%E6%B7%B7%E5%90%88%E6%A0%91%E5%AE%9E%E7%8E%B0%E8%A7%92%E8%89%B2%E8%B5%B0%E5%8A%A8/image-20200615180941588.png" alt="image-20200615180941588"></p><p><img src="/2020/06/13/%E5%88%A9%E7%94%A8%E6%A0%B9%E5%8A%A8%E4%BD%9C%E5%92%8C%E6%B7%B7%E5%90%88%E6%A0%91%E5%AE%9E%E7%8E%B0%E8%A7%92%E8%89%B2%E8%B5%B0%E5%8A%A8/image-20200615181352493.png" alt="image-20200615181352493"></p><p>使用以下动作片段部署动作域和他们的Pos X、Pos Y值：</p><table><thead><tr><th>动作域</th><th>Pos X</th><th>Pos Y</th></tr></thead><tbody><tr><td>Run_backwards</td><td>0</td><td>-1</td></tr><tr><td>Walking_backwards</td><td>0</td><td>-0.5</td></tr><tr><td>Rifle_aiming_idle</td><td>0</td><td>0</td></tr><tr><td>Walking</td><td>0</td><td>0.5</td></tr><tr><td>Rifle_run</td><td>0</td><td>1</td></tr><tr><td>Strafe</td><td>-1</td><td>0</td></tr><tr><td>Strafe_left</td><td>-0.5</td><td>0</td></tr><tr><td>Strafe_right</td><td>0.5</td><td>0</td></tr><tr><td>Strafe_2</td><td>1</td><td>0</td></tr></tbody></table><p>通过点击动作域，然后在弹出窗口选择动作片段，或者如果多个动作片段有相同的名字，可以从项目窗口点击模型图标展开，然后拖拽进来。</p><p><img src="/2020/06/13/%E5%88%A9%E7%94%A8%E6%A0%B9%E5%8A%A8%E4%BD%9C%E5%92%8C%E6%B7%B7%E5%90%88%E6%A0%91%E5%AE%9E%E7%8E%B0%E8%A7%92%E8%89%B2%E8%B5%B0%E5%8A%A8/image-20200615184101057.png" alt="image-20200615184101057"></p><p>要回到Base Layer，可以双击Animator窗口的网格背景返回，或者点击Animator窗口顶部的Base Layer按钮。</p><p><img src="/2020/06/13/%E5%88%A9%E7%94%A8%E6%A0%B9%E5%8A%A8%E4%BD%9C%E5%92%8C%E6%B7%B7%E5%90%88%E6%A0%91%E5%AE%9E%E7%8E%B0%E8%A7%92%E8%89%B2%E8%B5%B0%E5%8A%A8/image-20200616215047670.png" alt="image-20200616215047670"></p><p>因为Move混合树中已经具备rifle_aiming_idle动作片段，我们可以删掉原有的Idle状态（右键Idle状态，在菜单中选择Delete）。Move混合状态的颜色将变为橙色，表示成为新的默认状态。</p><h2 id="四、添加脚本"><a href="#四、添加脚本" class="headerlink" title="四、添加脚本"></a>四、添加脚本</h2><p>现在添加脚本，真正将玩家的输入转化为控制动画的变量。新建一个C#脚本，命名为BasicController ,将其作为组件添加到场景中的MsLazer对象。脚本代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ----------------------------------------</span></span><br><span class="line"><span class="comment"> * class to demonstrate how to control a </span></span><br><span class="line"><span class="comment"> * character using Character Controller and the Mecanim system</span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">BasicController</span>: <span class="title">MonoBehaviour</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// reference to character's Animator component</span></span><br><span class="line"><span class="keyword">private</span> Animator anim;</span><br><span class="line"></span><br><span class="line"><span class="comment">// reference to character's Character Controller component</span></span><br><span class="line"><span class="keyword">private</span> CharacterController controller;</span><br><span class="line"></span><br><span class="line"><span class="comment">// dampening speed </span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">float</span> transitionTime = <span class="number">.25</span>f;</span><br><span class="line"></span><br><span class="line"><span class="comment">// speed limit</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">float</span> speedLimit = <span class="number">1.0f</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// moving diagonally glaf (true then combine x and z speed)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">bool</span> moveDiagonally = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// control character's direction with mouse</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">bool</span> mouseRotate = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// control character's direction with keyboard</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">bool</span> keyboardRotate = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ----------------------------------------</span></span><br><span class="line"><span class="comment"> * cache character's Animator and Character Controller components</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span> (<span class="params"></span>) </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">controller = GetComponent&lt;CharacterController&gt;();</span><br><span class="line">anim = GetComponent&lt;Animator&gt;();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ----------------------------------------</span></span><br><span class="line"><span class="comment"> * Whenever Directional controls are used, update variables from the Animator</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span> (<span class="params"></span>)</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// IF Character Controller is grounded...</span></span><br><span class="line"><span class="keyword">if</span>(controller.isGrounded)&#123;</span><br><span class="line"><span class="keyword">if</span> (Input.GetKey (KeyCode.RightShift) ||Input.GetKey (KeyCode.LeftShift))</span><br><span class="line"><span class="comment">// IF Shift key is pressed, THEN set speed limit to 0.5, slowing down the character</span></span><br><span class="line">speedLimit = <span class="number">0.5f</span>;</span><br><span class="line"> <span class="keyword">else</span> </span><br><span class="line"><span class="comment">// ELSE, set speed limit to full speed (1.0)</span></span><br><span class="line">speedLimit = <span class="number">1.0f</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// a float variable to get Horizontal Axis input (left/right)</span></span><br><span class="line"><span class="keyword">float</span> h = Input.GetAxis(<span class="string">"Horizontal"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// a float variable to get Vertical Axis input (forward/backwards)</span></span><br><span class="line"><span class="keyword">float</span> v = Input.GetAxis(<span class="string">"Vertical"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// float variable for horizontal speed and direction, obtained by multiplying Horizontal Axis by the speed limit</span></span><br><span class="line"><span class="keyword">float</span> xSpeed = h * speedLimit;</span><br><span class="line"></span><br><span class="line"><span class="comment">// float variable for vertical speed and direction, obtained by multiplying Vertical Axis by the speed limit</span></span><br><span class="line"><span class="keyword">float</span> zSpeed = v * speedLimit;</span><br><span class="line"></span><br><span class="line"><span class="comment">// float variable for absolute speed </span></span><br><span class="line"><span class="keyword">float</span> speed = Mathf.Sqrt(h*h+v*v);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(v!=<span class="number">0</span> &amp;&amp; !moveDiagonally)</span><br><span class="line"><span class="comment">// IF Vertical Axis input is different than 0 AND moveDiagonally boolean is set to false, THEN set horizontal speed as 0 </span></span><br><span class="line">xSpeed = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(v!=<span class="number">0</span> &amp;&amp; keyboardRotate)</span><br><span class="line"><span class="comment">// IF Vertical Axis input is different than 0 AND keyboardRotate boolean is set to true, THEN rotate character according to Horizontal Axis input</span></span><br><span class="line"><span class="keyword">this</span>.transform.Rotate(Vector3.up * h, Space.World);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(mouseRotate)</span><br><span class="line"><span class="comment">// IF mouseRotate boolean is set to true, THEN rotate character according to Horizontal mouse movement</span></span><br><span class="line"><span class="keyword">this</span>.transform.Rotate(Vector3.up * (Input.GetAxis(<span class="string">"Mouse X"</span>)) * Mathf.Sign(v), Space.World);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set zSpeed float as 'zSpeed' variable of the Animator, dampening it for the amount of time in 'transitionTime' </span></span><br><span class="line">anim.SetFloat(<span class="string">"zSpeed"</span>, zSpeed, transitionTime, Time.deltaTime);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set xSpeed float as 'xSpeed' variable of the Animator, dampening it for the amount of time in 'transitionTime' </span></span><br><span class="line">anim.SetFloat(<span class="string">"xSpeed"</span>, xSpeed, transitionTime, Time.deltaTime);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set speed float as 'Speed' variable of the Animator, dampening it for the amount of time in 'transitionTime' </span></span><br><span class="line">anim.SetFloat(<span class="string">"Speed"</span>, speed, transitionTime, Time.deltaTime);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>播放游戏，我们可以用方向键或WASD键控制角色走动。按住Shift键将减慢走动速度。</p><h2 id="五、工作原理"><a href="#五、工作原理" class="headerlink" title="五、工作原理"></a>五、工作原理</h2><p>当BasicController脚本检测到任一方向键被按下，它将动画状态的速度变量赋上大于0的值，进而从闲置动画转为行动动画。Move状态根据输入变量混合已部署的动作片段。输入变量xSpeed从水平轴输入获取，典型例如A/D键，输入变量zSpeed从垂直轴输入获取，典型例如W/S键。Mecanim动画系统将根动作应用到角色上，角色根据获取到的方向进行移动。</p><p>例如当W键和D键被按下， 变量xSpeed和变量zSpeed的值将提升至1.0。从Inspector可以看到，这两个变量的结合将导致动作片段rifle_run和strafe_2的混合，让角色沿前右斜对角方向行动。</p><p><img src="/2020/06/13/%E5%88%A9%E7%94%A8%E6%A0%B9%E5%8A%A8%E4%BD%9C%E5%92%8C%E6%B7%B7%E5%90%88%E6%A0%91%E5%AE%9E%E7%8E%B0%E8%A7%92%E8%89%B2%E8%B5%B0%E5%8A%A8/image-20200617145357336.png" alt="image-20200617145357336"></p><p>BasicController组件下右3个复选框：Move Diagonally默认勾选表示允许向前/向后运动可以与向左/向右运动混合；Mouse Rotate默认勾选表示允许角色在运动过程中通过鼠标转向；Keyboard Rotate默认不勾选允许同时按下键盘前/后方向键与左/右方向键来使角色转向。</p><p>混合树使用2D Freeform Directional混合类型。然而，如果我们只有四个动作片段（前后左右），2D Simple Directional将会是更好的选择。 </p><p>了解更多关于混合树和二维混合可以查看Unity文档：<br><a href="http://docs.unity3d.com/Manual/BlendTree-2DBlending.html" target="_blank" rel="noopener">http://docs.unity3d.com/Manual/BlendTree-2DBlending.html</a></p><p>关于Mecanim动画系统的详细介绍，通过以下链接查看：<br><a href="http://docs.unity3d.com/Manual/AnimationOverview.html" target="_blank" rel="noopener">http://docs.unity3d.com/Manual/AnimationOverview.html</a></p><p>Mecanim场景样例可以在Unity Asset Store获取：<br><a href="https://www.assetstore.unity3d.com/en/#!/content/5328" target="_blank" rel="noopener">https://www.assetstore.unity3d.com/en/#!/content/5328</a></p><p>Mecanim视频教程可以在这里获取：<br><a href="http://unity3d.com/pt/learn/tutorials/topics/animation" target="_blank" rel="noopener">http://unity3d.com/pt/learn/tutorials/topics/animation</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity动画系统</title>
      <link href="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/"/>
      <url>/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<p>动画的播放控制、人形动画、动画遮罩、分层控制、退出控制、动画事件</p><a id="more"></a><p>创建一个项目AnimationDemo，导入资源包Assets.unitypackage和Mking.unitypackage，进入Assets/Fantasy Forest Environment Free Sample/Scenes下的demoScene_free场景，将Hierarchy里的LowPoly_Cyc(1)、LowPoly_Cyc(2)、LowPoly_Cyc(3)删掉，保存场景。在LowPoly_Cyc的Inspector视窗里单击Animator|Avatar：modelAvatar，然后选中modelAvatar对应的model。</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200425084358787.png" alt="image-20200425084358787"></p><p>model里还没有添加上动画，我们再看看model下方的Ready。</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200425084945034.png" alt="image-20200425084945034"></p><p>点击Inspector下方的播放小按钮，可以预览动画剪辑Ready，我们也可以添加动画剪辑，点击加号新增一个Take 001，然后设置起始时间和结束时间即可。</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200425085204228.png" alt="image-20200425085204228"></p><p>接下来我们右键Hierarchy下的LowPoly_Cyc，点击Unpack Prefab取消预制体，再将LowPoly_Cyc的Animator组件移除掉。下边将从零讲解Unity动画的添加与设置</p><h1 id="一、动画的播放控制"><a href="#一、动画的播放控制" class="headerlink" title="一、动画的播放控制"></a>一、动画的播放控制</h1><p>我们在Assets文件夹下新建一个Animator文件夹，在其中创建一个Animator Controller(动画控制器)，重命名为enemyAnimator，双击打开。然后将Assets/LowPoly_Cyc/FBX/Ready下的动画剪辑Ready拖拽到Animator视窗。同理，将动画剪辑Run、skill1、skill2、skill3、Stun也拖拽进来。</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200425105149743.png" alt="image-20200425105149743"></p><p>在Animtor窗口里，选中AnyState右键选择Make Transition（创建过渡），再点击添加进来的动画剪辑，进行连接。</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200425105541802.png" alt="image-20200425105541802"></p><p>接着我们在右边的Parameters视窗设置过渡条件。</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200425105831435.png" alt="image-20200425105831435"></p><p>过渡条件有Float、Int、Bool、Trigger。我们先添加一个Int类型过渡条件，命名为id。选中AnyState到Run之间的过渡条件箭头，在其Inspector|Conditions修改条件为“id Equals 1”。</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200425112011715.png" alt="image-20200425112011715"></p><p>同理，将AnyState到skill1、skill2、skill3、Stun的条件分别设置为”id Equals 0、2、3、4、5”。</p><p>将Settings|Can Transition To（可以过渡到自己）取消勾选</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200425171712882.png" alt="image-20200425171712882"></p><p>给LowPoly_Cyc添加一个Animator（动画器）组件，将Assets/LowPoly_Cyc/FBX/model下的modelAvatar添加到Animator|Avatar</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200425114208796.png" alt="image-20200425114208796"></p><p>将Assets/Animator/enemyAnimator拖拽到Animator|Controller</p><p>然后创建一个脚本文件AnimatorMgr.cs</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AnimatorMgr</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    Animator anim;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        anim = transform.GetComponent&lt;Animator&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Alpha0))</span><br><span class="line">        &#123;</span><br><span class="line">            anim.SetInteger(<span class="string">"id"</span>, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Alpha1))</span><br><span class="line">        &#123;</span><br><span class="line">            anim.SetInteger(<span class="string">"id"</span>, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Alpha2))</span><br><span class="line">        &#123;</span><br><span class="line">            anim.SetInteger(<span class="string">"id"</span>, <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Alpha3))</span><br><span class="line">        &#123;</span><br><span class="line">            anim.SetInteger(<span class="string">"id"</span>, <span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Alpha4))</span><br><span class="line">        &#123;</span><br><span class="line">            anim.SetInteger(<span class="string">"id"</span>, <span class="number">4</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Alpha5))</span><br><span class="line">        &#123;</span><br><span class="line">            anim.SetInteger(<span class="string">"id"</span>, <span class="number">5</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将AnimatorMgr.cs作为组件添加到LowPoly_Cyc。</p><p>播放游戏，角色先进入Ready动画状态，然后按1进入Run状态，按2进入skill1状态，按3进入skill2状态，按4进入skill3状态，按5进入Stun状态。</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200425172341825.png" alt="image-20200425172341825"></p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200425172416607.png" alt="image-20200425172416607"></p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200425172512305.png" alt="image-20200425172512305"></p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200425172605539.png" alt="image-20200425172605539"></p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200425172705254.png" alt="image-20200425172705254"></p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200425172747299.png" alt="image-20200425172747299"></p><p>要想动画循环播放，双击Animator窗口中要循环的动画状态（例如Ready），在项目窗口对应的文件会被选中，在Inspector视窗勾选Loop Time（循环时间），点击Apply即可。</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200425173113155.png" alt="image-20200425173113155"></p><h1 id="二、人形动画"><a href="#二、人形动画" class="headerlink" title="二、人形动画"></a>二、人形动画</h1><ul><li>动画的复用</li></ul><p>在Assets/asobi_chan_b/Assets/Meshes下有一个人型模型asobi_chan_b，在它下边只有两个动画Take001和Take002。</p><p>我们将asobi_chan_b拖拽进场景中，在Inspector取消勾选Animator|Apply Root Motion，因为根运动（Root Motion）用于动画控制，它可以使角色在场景中随着动画跑动。</p><p>然后选中Assets/Animator下的enemyAnimator，按Ctrl+D拷贝一份，重命名为PlayerAnimator，拖拽添加到场景中的asobi_chan_b的Animator|Controller。</p><p>双击打开PlayerAnimator，在Animator窗口中选中Ready，将Assets/asobi_chan_b/Assets/Meshs/asobi_chan_b/Take 001拖拽到Motion，将Take 002拖拽到Run的Motion。</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200610144206662.png" alt="image-20200610144206662"></p><p>在Assets/Mking/mAnimation下还有一个人形动画模型@MK_attackWhirl，我们可以将它的攻击动画复用到asobi_chan_b上。于是选中PlayerAnimtor中的skill1状态，将Assets/Mking/mAnimation/@MK_attackWhirl/MK_attackWhirl拖拽到Motion。同样地，将MK_blockAttack拖拽到skill2的Motion，将MK_stabJumpFward拖拽到skill3的Motion，将MK_hitFfront拖拽到Stun的Motion，</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200610145112679.png" alt="image-20200610145112679"></p><p>复制LowPoly_Cyc的脚本组件，添加到asobi_chan_b中</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200610150221322.png" alt="image-20200610150221322"></p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200610150422787.png" alt="image-20200610150422787"></p><p>选中项目窗口里的asobi_chan_b，在Animation选项卡下，选中Take 002，然后勾选下方的Loop Time。</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200610152226023.png" alt="image-20200610152226023"></p><p>保存后播放游戏，角色开始处于闲置状态，当按下1时，开始跑动。</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200610150926200.png" alt="image-20200610150926200"></p><p>当按下2时，开始执行attackWhirl。</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200610151142829.png" alt="image-20200610151142829"></p><p>当按下3时，开始执行blockAttack。</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200610151403414.png" alt="image-20200610151403414"></p><p>当按下4时，开始执行stabJumpFward。</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200610151553234.png" alt="image-20200610151553234"></p><p>当按下5时，开始执行hitFfront。</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200610151645663.png" alt="image-20200610151645663"></p><h1 id="三、动画遮罩"><a href="#三、动画遮罩" class="headerlink" title="三、动画遮罩"></a>三、动画遮罩</h1><ul><li>屏蔽某个部位的运动</li></ul><p>在项目窗口右键新建|Avatar Mask，重名名为EnemyAvatar，拷贝一份后再重命名为PlayerAvatar。</p><p>选中EnemyAvatar，将Assets/LowPoly_Cyc/FBX/model/modelAvatar拖拽到EnemyAvatar的Transform|Use skeleton from，点击Import skeleton。</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200610211241758.png" alt="image-20200610211241758"></p><p>打开EnemyAnimator，点击Base Layer右边的小齿轮，点击Mask，选择EnemyAvatar。</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200610213548380.png" alt="image-20200610213548380"></p><p>回到EnemyAvatar的Inspector窗口，取消勾选角色的下半身节点，播放游戏，角色无论做哪些动画都是下半身僵直的。</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200610213717945.png" alt="image-20200610213717945"></p><p>接下来对人形动画使用遮罩，我们先在PlayerAnimator创建一个Run动画层，然后在其中添加一个Run状态，在其Motion附上动画剪辑Run。从Any State到Run建立一个转变关系，转变条件设为id值等于1，同时将Base Layer里的Any State到Run的条件改为id等于1000。拷贝一个PlayerAvatar，名为PlayerAvatar 1，设置PlayerAvatar如下：</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200610225601929.png" alt="image-20200610225601929"></p><p>设置PlayerAvatar 1如下：</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200610225657825.png" alt="image-20200610225657825"></p><p>将PlayerAvatar 1应用到Base Layer，将PlayerAvatar应用到Run，并设置Run的Weight为1。</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200610225847209.png" alt="image-20200610225847209"></p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200610225958876.png" alt="image-20200610225958876"></p><p>点击播放游戏，角色会立刻开始奔跑，当我们按2时，角色下半身保持奔跑，上半身做攻击动作。</p><p><img src="/2020/04/24/Unity%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/image-20200610230324908.png" alt="image-20200610230324908"></p><h1 id="四、分层控制和退出控制"><a href="#四、分层控制和退出控制" class="headerlink" title="四、分层控制和退出控制"></a>四、分层控制和退出控制</h1><h1 id="五、动画事件"><a href="#五、动画事件" class="headerlink" title="五、动画事件"></a>五、动画事件</h1>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity用户输入管理</title>
      <link href="/2020/04/22/Unity%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5%E7%AE%A1%E7%90%86/"/>
      <url>/2020/04/22/Unity%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>虚拟轴、获取键盘事件、获取鼠标事件、移动设备输入</p><a id="more"></a><h1 id="一、虚拟轴"><a href="#一、虚拟轴" class="headerlink" title="一、虚拟轴"></a>一、虚拟轴</h1><p>使用API：<strong>Input.GetAxis()</strong>，参数：轴的名称</p><p>根据当前输入实时变更，所以使用的时候应该去持续获得更新的值，否则得到的结果是不准确的</p><p>使用范围：较多应用在对角色的控制上</p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p>我们可以在菜单栏|Edit|Project Settings…|Input Manager里查看有关玩家输入的设置</p><p><img src="/2020/04/22/Unity%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5%E7%AE%A1%E7%90%86/image-20200423165430439.png" alt="image-20200423165430439"></p><p>新建一个Test.cs，将其作为组件添加到一个物体上比如一个Capsule。，编辑Test.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">float</span> horizontal = Input.GetAxis(<span class="string">"Horizontal"</span>);</span><br><span class="line">        <span class="keyword">float</span> vertical = Input.GetAxis(<span class="string">"Vertical"</span>);</span><br><span class="line">        <span class="keyword">if</span>(horizontal != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            transform.position = <span class="keyword">new</span> Vector3(transform.position.x + (horizontal * <span class="number">0.1f</span>),</span><br><span class="line">                transform.position.y,</span><br><span class="line">                transform.position.z);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (vertical != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            transform.position = <span class="keyword">new</span> Vector3(transform.position.x,</span><br><span class="line">                transform.position.y,</span><br><span class="line">                transform.position.z + (vertical * <span class="number">0.1f</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>播放游戏，我们可以通过按键盘的上下左右方向键或WASD控制Capsule的前后左右平移。</p><p>要控制Capsule的转向，我们还可以<strong>修改Test.cs的Update方法</strong>如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">float</span> horizontal = Input.GetAxis(<span class="string">"Horizontal"</span>);</span><br><span class="line">        <span class="keyword">float</span> vertical = Input.GetAxis(<span class="string">"Vertical"</span>);</span><br><span class="line">        <span class="keyword">if</span>(horizontal != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//transform.position = new Vector3(transform.position.x + (horizontal * 0.1f),</span></span><br><span class="line">            <span class="comment">//    transform.position.y,</span></span><br><span class="line">            <span class="comment">//    transform.position.z);</span></span><br><span class="line">            transform.eulerAngles = <span class="keyword">new</span> Vector3(transform.eulerAngles.x,</span><br><span class="line">                transform.eulerAngles.y + horizontal,</span><br><span class="line">                transform.eulerAngles.z);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (vertical != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            transform.position = <span class="keyword">new</span> Vector3(transform.position.x,</span><br><span class="line">                transform.position.y,</span><br><span class="line">                transform.position.z + (vertical * <span class="number">0.1f</span>));</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>播放游戏，我们可以通过左右方向键或AD键控制Capsule的水平转向。</p><h1 id="二、获取键盘事件"><a href="#二、获取键盘事件" class="headerlink" title="二、获取键盘事件"></a>二、获取键盘事件</h1><p>使用API：</p><p><strong>Input.GetKey</strong>，某个键是否被持续按下；</p><p><strong>Input.GetKeyDown</strong>，某个键是否被按下；</p><p><strong>Input.GetKeyUp</strong>，某个键是否被弹起。</p><p>可以传递小写的键的名称作为参数，也可以传递一个<strong>KeyCode</strong>的值，返回值属于布尔类型。</p><p>使用范围：</p><p>需要根据玩家按下键盘上某个键才能触发的事件上，比如说技能释放，需要等待用户按下技能键的时候进行释放，由或者说按下ESC键呼出系统菜单等。</p><h2 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h2><p>编辑Test.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKey(KeyCode.A))<span class="comment">//或者Input.GetKey("a")</span></span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">"A键被按下了"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Q))<span class="comment">//或者Input.GetKeyDown("q")</span></span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">"Q键被按下了"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyUp(KeyCode.W))<span class="comment">//或者Input.GetKeyUp("w")</span></span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">"W键被放开了"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>播放游戏，当我们按A键时，每一帧控制台都会识别A键被按下然后打印信息，按住A键则控制台持续打印消息；当我们按下Q键时，只在按下的那一帧识别并只打印一次消息，即按一次打印一次。按住W键，只有在松开时控制台才打印消息。</p><h1 id="三、获取鼠标事件"><a href="#三、获取鼠标事件" class="headerlink" title="三、获取鼠标事件"></a>三、获取鼠标事件</h1><p>使用的API：</p><p><strong>Input.GetMouseButtonDown</strong>，当按键按下；</p><p><strong>Input.GetMouseButtonUp</strong>，当按键抬起；</p><p><strong>Input.GetMouseButton</strong>，当按键被持续按下。</p><p>参数：0代表左键，1代表右键，2代表中键</p><p>鼠标位置获取：<strong>Input.mousePosition</strong></p><p>适用范围：鼠标事件使用范围较广，比如左键点击地面，让角色移动过去，右键敌人发动攻击等。</p><h2 id="例子-2"><a href="#例子-2" class="headerlink" title="例子"></a>例子</h2><p>编辑Test.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        GameObject Capsule = GameObject.Find(<span class="string">"Capsule"</span>);</span><br><span class="line">        <span class="keyword">if</span> (Input.GetMouseButtonDown(<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            Capsule.transform.localScale = <span class="keyword">new</span> Vector3(<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetMouseButtonUp(<span class="number">1</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            Capsule.transform.localScale = <span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetMouseButton(<span class="number">2</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            Capsule.transform.localScale += <span class="keyword">new</span> Vector3(<span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.5f</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>播放游戏，当我们按下鼠标左键时，Capsule体积变为为2倍，当我们按住鼠标右键，松开时Capsule体积变为的1倍，当我们按住鼠标中键时，Capsule的体积持续放大。</p><p>我们将Capsule删掉，在将场景视图变为2D，在场景中新建一个Image，Test.cs添加到Main Camera上，编辑Test.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">bool</span> isDown = <span class="literal">false</span>; </span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;      </span><br><span class="line">        <span class="keyword">if</span> (Input.GetMouseButtonDown(<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            isDown = <span class="literal">true</span>;   </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetMouseButtonUp(<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            isDown = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (isDown)</span><br><span class="line">        &#123;</span><br><span class="line">            GameObject image = GameObject.Find(<span class="string">"Image"</span>);</span><br><span class="line">            image.transform.position = Input.mousePosition;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>播放游戏，当鼠标按住左键，Image会跳变到鼠标所在位置，移动鼠标，Image跟随移动，松开鼠标左键，Image停止跟随。</p><h1 id="四、移动设备输入"><a href="#四、移动设备输入" class="headerlink" title="四、移动设备输入"></a>四、移动设备输入</h1><p>使用的API：</p><p>Input.touchCount，最后一帧有多少根手指触碰到了，不同设备能追踪到的数量不同，iPhone一般最多支持五根手指。</p><p>Input.touches存储每根手指状态的数组，可以通过索引来访问每根手指的一些信息。常用信息有：</p><p>fingerid：触碰的唯一索引</p><p>position：这根手指当前所在的屏幕位置</p><p>deltaPosition：自上一帧以来，这根手指屏幕位置变化</p><h2 id="例子-3"><a href="#例子-3" class="headerlink" title="例子"></a>例子</h2><p>编辑Test.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    Text text;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        text = GameObject.Find(<span class="string">"Text"</span>).GetComponent&lt;Text&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span>(Input.touchCount &gt; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            text.text = <span class="string">"当前有："</span> + Input.touchCount</span><br><span class="line">            + <span class="string">"根手指触碰"</span> + Input.touches[<span class="number">0</span>].fingerId</span><br><span class="line">            + <span class="string">"当前手指所在的位置是："</span> + Input.touches[<span class="number">0</span>].position</span><br><span class="line">            + <span class="string">"上一帧到当前帧的变化"</span> + Input.touches[<span class="number">0</span>].deltaPosition;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打包成apk，</p>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于MVC的UI框架</title>
      <link href="/2020/04/22/%E5%9F%BA%E4%BA%8EMVC%E7%9A%84UI%E6%A1%86%E6%9E%B6/"/>
      <url>/2020/04/22/%E5%9F%BA%E4%BA%8EMVC%E7%9A%84UI%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<p>MVC</p><a id="more"></a><h1 id="MVC框架介绍"><a href="#MVC框架介绍" class="headerlink" title="MVC框架介绍"></a>MVC框架介绍</h1><h2 id="Mode数据模型"><a href="#Mode数据模型" class="headerlink" title="Mode数据模型"></a>Mode数据模型</h2><p><strong>目的：记录游戏模块相关数据。</strong></p><p>比如：账号、密码、角色、ID、所在帮派、攻击力、防御力、穿透、暴击、商城出售的道具信息（名称、价格、使用说明…）</p><p>这些数据是可以在多个模块中进行使用的，比如角色信息，是可以用于好友模块、房间模块、战斗模块等</p><p>如果不进行复用的话，需要拷贝很多份，维护起来非常麻烦。</p><p><strong>代码怎么写？</strong></p><p>建议使用单例模式</p><p>其他的没什么，只是约束了这个脚本里只保存数据，不做逻辑</p><p>但是，人是活的，有时候可以写一些对数据结构进行操作的接口，给控制器进行调用。</p><p>比如战斗模块，通常我们会在本地缓存十个玩家的信息。</p><p>提供存储、修改、查询、删除、清理的接口。</p><p>放到控制器去写也没问题，如果要在多个地方使用重复的代码，就需要在数据类中封装接口</p><h2 id="View视图"><a href="#View视图" class="headerlink" title="View视图"></a>View视图</h2><h2 id="Controller控制器"><a href="#Controller控制器" class="headerlink" title="Controller控制器"></a>Controller控制器</h2><h2 id="什么是模块？"><a href="#什么是模块？" class="headerlink" title="什么是模块？"></a>什么是模块？</h2><h2 id="MVC带来的好处"><a href="#MVC带来的好处" class="headerlink" title="MVC带来的好处"></a>MVC带来的好处</h2><h1 id="创建Model数据模型"><a href="#创建Model数据模型" class="headerlink" title="创建Model数据模型"></a>创建Model数据模型</h1><h1 id="View视图设计介绍"><a href="#View视图设计介绍" class="headerlink" title="View视图设计介绍"></a>View视图设计介绍</h1><h1 id="定义每个窗体用到的变量和方法"><a href="#定义每个窗体用到的变量和方法" class="headerlink" title="定义每个窗体用到的变量和方法"></a>定义每个窗体用到的变量和方法</h1><h1 id="画布与UI层级的设计"><a href="#画布与UI层级的设计" class="headerlink" title="画布与UI层级的设计"></a>画布与UI层级的设计</h1><h1 id="编写窗体对外的接口"><a href="#编写窗体对外的接口" class="headerlink" title="编写窗体对外的接口"></a>编写窗体对外的接口</h1><h1 id="编写窗体管理类"><a href="#编写窗体管理类" class="headerlink" title="编写窗体管理类"></a>编写窗体管理类</h1><h1 id="视图窗体的测试与bug修复"><a href="#视图窗体的测试与bug修复" class="headerlink" title="视图窗体的测试与bug修复"></a>视图窗体的测试与bug修复</h1><h1 id="模块控制器"><a href="#模块控制器" class="headerlink" title="模块控制器"></a>模块控制器</h1><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指Offer第2章基础知识笔记</title>
      <link href="/2020/04/16/%E5%89%91%E6%8C%87Offer%E7%AC%AC2%E7%AB%A0%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/04/16/%E5%89%91%E6%8C%87Offer%E7%AC%AC2%E7%AB%A0%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>编程语言（C++）</p><p>数据结构（数组、字符串、链表、树、栈、队列）</p><p>算法和数据操作（查找、排序、递归、循环、位运算）</p><a id="more"></a><h1 id="1-编程语言（C-）"><a href="#1-编程语言（C-）" class="headerlink" title="1. 编程语言（C++）"></a>1. 编程语言（C++）</h1><h1 id="2-数据结构"><a href="#2-数据结构" class="headerlink" title="2. 数据结构"></a>2. 数据结构</h1><h2 id="2-1-数组"><a href="#2-1-数组" class="headerlink" title="2.1 数组"></a>2.1 数组</h2><h2 id="2-2-字符串"><a href="#2-2-字符串" class="headerlink" title="2.2 字符串"></a>2.2 字符串</h2><h2 id="2-3-链表"><a href="#2-3-链表" class="headerlink" title="2.3 链表"></a>2.3 链表</h2><h2 id="2-4-树"><a href="#2-4-树" class="headerlink" title="2.4 树"></a>2.4 树</h2><h2 id="2-5-栈"><a href="#2-5-栈" class="headerlink" title="2.5 栈"></a>2.5 栈</h2><h2 id="2-6-队列"><a href="#2-6-队列" class="headerlink" title="2.6 队列"></a>2.6 队列</h2><h1 id="3-算法和数据操作"><a href="#3-算法和数据操作" class="headerlink" title="3. 算法和数据操作"></a>3. 算法和数据操作</h1><p><strong>排序</strong>和<strong>査找</strong>是面试时考查算法的重点。在准备面试的时候，我们应该重点掌握<strong>二分査找</strong>、<strong>归并排序</strong>和<strong>快速排序</strong>，做到能<strong>随时正确、完整地写出</strong>它们的代码。</p><p>有很多算法都可以用递归和循环两种不同的方式实现。通常基于递归的实现方法代码会比较简洁，但性能不如基于循环的实现方法。在面试的时候，我们可以根据题目的特点，甚至可以和面试官讨论选择合适的方法编程。</p><p>位运算可以看成是一类特殊的算法，它是把数字表示成二进制之后对0和1的操作。由于位运算的对象为二进制数字，所以不是很直观，但掌握它也不难，因为总共只有与、或、异或、左移和右移5种位运算。</p><h2 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h2><p>顺序査找、二分査找、哈希表査找和二叉排序树查找</p><p>在面试的时候，不管是用循环还是用递归，面试官都期待应聘者能够信手拈来写出完整正确的<strong>二分査找</strong>代码，否则可能连继续面试的兴趣都没有。</p><p>面试题8“旋转数组的最小数字”和面试题38 “数字在排序数组中出现的次数”都可以用二分査找算法解决。</p><p>如果面试题是要求在排序的数组（或者部分摊序的数组）中<strong>查找一个数字</strong>或者<strong>统计某个数字出现的次数</strong>，我们都可以尝试用<strong>二分査找</strong>算法。</p><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><h2 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h2><h2 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h2>]]></content>
      
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#网络编程</title>
      <link href="/2020/04/14/C%20Sharp%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
      <url>/2020/04/14/C%20Sharp%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>Socket-TCP、Socket-UDP、Http、实现文件下载的功能</p><a id="more"></a><p>目标：访问网络共享资源、实现玩家之间的交互</p><p>技术点应用：软件、游戏、网站、App、…</p><p>程序之间如何通信：通过IP找到通信的主机、通过Port找到主机上的程序</p><h1 id="Socket-TCP"><a href="#Socket-TCP" class="headerlink" title="Socket-TCP"></a>Socket-TCP</h1><h2 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h2><p>创建TcpListener实例x：</p><p>TcpListener.Create(port);</p><p>指定监听的端口</p><p>启动服务器：</p><p>x.Start();</p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>用VS2017创建控制台应用项目Server，添加类TCPServer。TCPServer.cs内容如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Net.Sockets;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Server</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">TCPServer</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//启动服务器的接口</span></span><br><span class="line">        TcpListener tcpListener;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//构建Socket网络通信</span></span><br><span class="line">                <span class="comment">//它是对Socket更上一层的封装</span></span><br><span class="line">                <span class="comment">//端口1-65535 每个程序的端口不能相同</span></span><br><span class="line">                <span class="comment">//在控制台输入指令：netstat -ano可以查看所有使用中的端口</span></span><br><span class="line">                tcpListener = TcpListener.Create(<span class="number">7788</span>);</span><br><span class="line">                tcpListener.Start(<span class="number">500</span>);</span><br><span class="line">                Console.WriteLine(<span class="string">"启动服务器成功！"</span>);</span><br><span class="line">                <span class="comment">//Accept方法进行监听来自客户端的连接</span></span><br><span class="line">                Accept();</span><br><span class="line"></span><br><span class="line">            &#125;<span class="keyword">catch</span>(Exception error)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(error);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//监听客户端的接口</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">async</span> <span class="keyword">void</span> <span class="title">Accept</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                TcpClient tcpClient = <span class="keyword">await</span> tcpListener.AcceptTcpClientAsync();</span><br><span class="line">                <span class="comment">//访问</span></span><br><span class="line">                Console.WriteLine(<span class="string">"客户端已连接："</span> + tcpClient.Client.RemoteEndPoint);</span><br><span class="line">                Accept();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception error)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(error);</span><br><span class="line">                tcpListener.Stop();<span class="comment">//停止服务器工作</span></span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Program.cs内容如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 服务器-TCP</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Server</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            TCPServer server = <span class="keyword">new</span> TCPServer();</span><br><span class="line">            server.Start();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//让程序阻塞在这里</span></span><br><span class="line">                Console.ReadLine();</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序运行后将在控制台打印“启动服务器成功！”</p><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><h3 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h3><p>用VS2017创建控制台应用项目Client，添加类Client。Client.cs内容如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Net.Sockets;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Client</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Client</span></span><br><span class="line">    &#123;</span><br><span class="line">        TcpClient client;</span><br><span class="line">        <span class="comment">//启动</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            client = <span class="keyword">new</span> TcpClient();</span><br><span class="line">            Connect();</span><br><span class="line">            <span class="comment">//连接的端口：7788</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//连接服务器</span></span><br><span class="line">        <span class="function"><span class="keyword">async</span> <span class="keyword">void</span> <span class="title">Connect</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">await</span> client.ConnectAsync(<span class="string">"127.0.0.1"</span>, <span class="number">7788</span>);</span><br><span class="line">                Console.WriteLine(<span class="string">"连接成功！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception error)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                Console.WriteLine(error.Message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//监听服务器消息</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//发送消息给服务器</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Progam.cs内容如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 客户端-TCP</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Client</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Client client = <span class="keyword">new</span> Client();</span><br><span class="line">            client.Start();</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.ReadLine();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先运行上一个TCP服务器例子程序，然后运行TCP客户端例子程序，客户端控制台打印“连接成功！”，服务器控制台打印：</p><p>启动服务器成功！<br>客户端已连接：[::ffff:127.0.0.1]:60056</p><h2 id="服务器与客户端相互发送、接收消息例子"><a href="#服务器与客户端相互发送、接收消息例子" class="headerlink" title="服务器与客户端相互发送、接收消息例子"></a>服务器与客户端相互发送、接收消息例子</h2><h3 id="作为服务器的Server项目"><a href="#作为服务器的Server项目" class="headerlink" title="作为服务器的Server项目"></a>作为服务器的Server项目</h3><h4 id="Program-cs"><a href="#Program-cs" class="headerlink" title="Program.cs"></a>Program.cs</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 服务器-TCP</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Server</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            TCPServer server = <span class="keyword">new</span> TCPServer();</span><br><span class="line">            server.Start();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//让程序阻塞在这里</span></span><br><span class="line">                <span class="keyword">string</span> text = Console.ReadLine();</span><br><span class="line">                server.tempClient.Send(Encoding.UTF8.GetBytes(text));</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="TCPServer-cs"><a href="#TCPServer-cs" class="headerlink" title="TCPServer.cs"></a>TCPServer.cs</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Net.Sockets;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Server</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">TCPServer</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//启动服务器的接口</span></span><br><span class="line">        TcpListener tcpListener;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//构建Socket网络通信</span></span><br><span class="line">                <span class="comment">//它是对Socket更上一层的封装</span></span><br><span class="line">                <span class="comment">//端口1-65535 每个程序的端口不能相同</span></span><br><span class="line">                <span class="comment">//在控制台输入指令：netstat -ano可以查看所有使用中的端口</span></span><br><span class="line">                tcpListener = TcpListener.Create(<span class="number">7788</span>);</span><br><span class="line"></span><br><span class="line">                tcpListener.Start(<span class="number">500</span>);</span><br><span class="line">                Console.WriteLine(<span class="string">"启动服务器成功！"</span>);</span><br><span class="line">                <span class="comment">//Accept方法进行监听来自客户端的连接</span></span><br><span class="line">                Accept();</span><br><span class="line"></span><br><span class="line">            &#125;<span class="keyword">catch</span>(Exception error)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(error);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Agent tempClient;</span><br><span class="line">        <span class="comment">//监听客户端的接口</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">async</span> <span class="keyword">void</span> <span class="title">Accept</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                TcpClient tcpClient = <span class="keyword">await</span> tcpListener.AcceptTcpClientAsync();</span><br><span class="line">                <span class="comment">//访问连接的客户端的远程IP和端口</span></span><br><span class="line">                <span class="comment">//IPv6的格式，IPv4没有ffff:这样的前缀</span></span><br><span class="line">                Console.WriteLine(<span class="string">"客户端已连接："</span> + tcpClient.Client.RemoteEndPoint);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//tcpClient代表与客户端的连接，通过它可以给客户端发送消息或接收客户端的消息。</span></span><br><span class="line">                <span class="comment">//1对多，构建每一个玩家的数据模型，在它内部去模拟每个玩家的行为。</span></span><br><span class="line">                Agent agent = <span class="keyword">new</span> Agent(tcpClient);</span><br><span class="line">                tempClient = agent;</span><br><span class="line">                Accept();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception error)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                Console.WriteLine(error);</span><br><span class="line">                tcpListener.Stop();<span class="comment">//停止服务器工作</span></span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Agent-cs"><a href="#Agent-cs" class="headerlink" title="Agent.cs"></a>Agent.cs</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Net.Sockets;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Server</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Agent</span></span><br><span class="line">    &#123;</span><br><span class="line">        TcpClient client;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Agent</span>(<span class="params">TcpClient tcpClient</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            client = tcpClient;</span><br><span class="line">            <span class="comment">//接收来自客户端的消息</span></span><br><span class="line">            Recieve();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Input</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 接收来自客户端的消息</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">async</span> <span class="keyword">void</span> <span class="title">Recieve</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//while循环进行持续的接收</span></span><br><span class="line">            <span class="comment">//条件是这个Socket处于连接状态</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//从流中读取数据</span></span><br><span class="line">            <span class="keyword">while</span> (client.Connected)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//缓存接收到的数据 byte[]</span></span><br><span class="line">                    <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4096</span>];</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">int</span> length = <span class="keyword">await</span> client.GetStream().ReadAsync(buffer,<span class="number">0</span>,buffer.Length);</span><br><span class="line">                    <span class="comment">//将字节数组转化为字符串</span></span><br><span class="line">                    Console.WriteLine(Encoding.UTF8.GetString(buffer, <span class="number">0</span>, length));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">catch</span> (Exception error)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(error.Message);</span><br><span class="line">                    client.Close();</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 发送消息给客户端</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="data"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> <span class="keyword">void</span> <span class="title">Send</span>(<span class="params"><span class="keyword">byte</span>[] data</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//客户端处于连接状态才能发送消息</span></span><br><span class="line">            <span class="keyword">if</span> (client.Connected)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//使用try catch方式来捕捉发送的时候可能出现的异常</span></span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//networkStream，向这个网络流，异步地写入数据=发送消息给服务器</span></span><br><span class="line">                    <span class="keyword">await</span> client.GetStream().WriteAsync(data, <span class="number">0</span>, data.Length);</span><br><span class="line">                    Console.WriteLine(<span class="string">"发送成功！"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">catch</span> (Exception error)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//打印异常消息，关闭客户端与服务器的连接</span></span><br><span class="line">                    client.Close();</span><br><span class="line">                    Console.WriteLine(error.Message);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="作为客户端的Client项目"><a href="#作为客户端的Client项目" class="headerlink" title="作为客户端的Client项目"></a>作为客户端的Client项目</h3><h4 id="Program-cs-1"><a href="#Program-cs-1" class="headerlink" title="Program.cs"></a>Program.cs</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 客户端-TCP</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Client</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Client client = <span class="keyword">new</span> Client();</span><br><span class="line">            client.Start();</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">string</span> input = Console.ReadLine();</span><br><span class="line">                client.Send(Encoding.UTF8.GetBytes(input));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Client-cs"><a href="#Client-cs" class="headerlink" title="Client.cs"></a>Client.cs</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Net.Sockets;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Client</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Client</span></span><br><span class="line">    &#123;</span><br><span class="line">        TcpClient client;</span><br><span class="line">        <span class="comment">//启动</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            client = <span class="keyword">new</span> TcpClient();</span><br><span class="line">            Connect();</span><br><span class="line">            <span class="comment">//连接的端口：7788</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//连接服务器</span></span><br><span class="line">        <span class="function"><span class="keyword">async</span> <span class="keyword">void</span> <span class="title">Connect</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">await</span> client.ConnectAsync(<span class="string">"127.0.0.1"</span>, <span class="number">7788</span>);</span><br><span class="line">                Console.WriteLine(<span class="string">"连接成功！"</span>);</span><br><span class="line">                Recieve();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception error)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                Console.WriteLine(error.Message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//监听服务器消息</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//发送消息给服务器</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> <span class="keyword">void</span> <span class="title">Send</span>(<span class="params"><span class="keyword">byte</span>[] data</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//客户端处于连接状态才能发送消息</span></span><br><span class="line">            <span class="keyword">if</span> (client.Connected)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//使用try catch方式来捕捉发送的时候可能出现的异常</span></span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//networkStream，向这个网络流，异步地写入数据=发送消息给服务器</span></span><br><span class="line">                    <span class="keyword">await</span> client.GetStream().WriteAsync(data, <span class="number">0</span>, data.Length);</span><br><span class="line">                    Console.WriteLine(<span class="string">"发送成功！"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">catch</span> (Exception error)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//打印异常消息，关闭客户端与服务器的连接</span></span><br><span class="line">                    client.Close();</span><br><span class="line">                    Console.WriteLine(error.Message);</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 接收服务器发来的消息</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">async</span> <span class="keyword">void</span> <span class="title">Recieve</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//while循环进行持续的接收</span></span><br><span class="line">            <span class="comment">//条件是这个Socket处于连接状态</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//从流中读取数据</span></span><br><span class="line">            <span class="keyword">while</span> (client.Connected)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//缓存接收到的数据 byte[]</span></span><br><span class="line">                    <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4096</span>];</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">int</span> length = <span class="keyword">await</span> client.GetStream().ReadAsync(buffer, <span class="number">0</span>, buffer.Length);</span><br><span class="line">                    <span class="comment">//将字节数组转化为字符串</span></span><br><span class="line">                    Console.WriteLine(Encoding.UTF8.GetString(buffer, <span class="number">0</span>, length));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">catch</span> (Exception error)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(error.Message);</span><br><span class="line">                    client.Close();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行Server项目，服务端控制台打印消息“启动服务器成功！”。</p><p>运行Client项目，客户端控制台打印消息“连接成功！”，服务端控制台打印消息“客户端已连接…”。</p><p>在客户端输入消息后回车，服务端接收到消息并打印。</p><p>在服务端输入消息后回车，客户端端接收到消息并打印。</p><p><img src="/2020/04/14/C%20Sharp%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/image-20200416173425579.png" alt="image-20200416173425579"></p><h1 id="Socket-UDP"><a href="#Socket-UDP" class="headerlink" title="Socket-UDP"></a>Socket-UDP</h1><p>相对TCP而言，UDP不需要建立连接。</p><p>TCP在建立连接后，每次未来数据的准确到达，都会进行发送和接收的确认。</p><h2 id="服务器-1"><a href="#服务器-1" class="headerlink" title="服务器"></a>服务器</h2><p>构建UdpClient对象x，构建的时候绑定端口</p><p>提供异步接收的接口，<strong>RecieveAsync</strong></p><p>提供异步发送的接口，<strong>SendAsync</strong></p><p>项目：Project_Server</p><p>Program.cs</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Server</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            UDPServer server = <span class="keyword">new</span> UDPServer();</span><br><span class="line">            server.Start();</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">               <span class="keyword">string</span> text = Console.ReadLine();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UDPServer.cs</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Net;</span><br><span class="line"><span class="keyword">using</span> System.Net.Sockets;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Server</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">UDPServer</span></span><br><span class="line">    &#123;</span><br><span class="line">        UdpClient udpClient;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//1-65535</span></span><br><span class="line">            udpClient = <span class="keyword">new</span> UdpClient(<span class="number">8899</span>);</span><br><span class="line">            Recieve();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        IPEndPoint remote;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 接收消息</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">async</span> <span class="keyword">void</span> <span class="title">Recieve</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">while</span> (udpClient != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//接收客户端的消息</span></span><br><span class="line">                    UdpReceiveResult result = <span class="keyword">await</span> udpClient.ReceiveAsync();</span><br><span class="line">                    remote = result.RemoteEndPoint;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">string</span> text = Encoding.UTF8.GetString(result.Buffer);</span><br><span class="line">                    Console.WriteLine(<span class="string">"接收到的数据："</span> + text);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">catch</span> (Exception error)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">"接收异常："</span> + error.Message);</span><br><span class="line">                    udpClient.Close();</span><br><span class="line">                    udpClient = <span class="literal">null</span>;</span><br><span class="line">                &#125;             </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 发送消息</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="data"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Send</span>(<span class="params"><span class="keyword">byte</span>[] data</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="客户端-1"><a href="#客户端-1" class="headerlink" title="客户端"></a>客户端</h2><p>构建UdpClient对象x，端口可以传递0，系统自动分配</p><p>提供异步接收的接口，<strong>RecieveAsync</strong></p><p>提供异步发送的接口，<strong>SendAsync</strong></p><p>项目名：Project_Client</p><p>Program.cs</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Client</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Client client = <span class="keyword">new</span> Client();</span><br><span class="line">            client.Start();</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">string</span> text = Console.ReadLine();</span><br><span class="line">                client.Send(Encoding.UTF8.GetBytes(text));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Client.cs</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Net.Sockets;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Client</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Client</span></span><br><span class="line">    &#123;</span><br><span class="line">        UdpClient udpClient;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//0表示由系统任意分配</span></span><br><span class="line">            udpClient = <span class="keyword">new</span> UdpClient(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> <span class="keyword">void</span> <span class="title">Send</span>(<span class="params"><span class="keyword">byte</span>[] data</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (udpClient != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                 <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> length = <span class="keyword">await</span> udpClient.SendAsync(data, data.Length, <span class="string">"127.0.0.1"</span>, <span class="number">8899</span>);</span><br><span class="line">                    <span class="keyword">if</span> (data.Length == length)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Console.WriteLine(<span class="string">"完整的发送！"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">catch</span> (Exception error)</span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    Console.WriteLine(error.Message);</span><br><span class="line">                    udpClient.Close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                udpClient.Close();</span><br><span class="line">                udpClient = <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序运行后在Project_Client的控制台窗口输入要发送的消息后回车，Project_Server的控制台窗口将打印接收到的消息，如下图：</p><p>![image-20200418223632262](D:\blog\source_posts\C Sharp网络编程\image-20200418223632262.png)</p><h2 id="服务器与客户端相互发送、接收消息例子-1"><a href="#服务器与客户端相互发送、接收消息例子-1" class="headerlink" title="服务器与客户端相互发送、接收消息例子"></a>服务器与客户端相互发送、接收消息例子</h2><h3 id="Project-Server"><a href="#Project-Server" class="headerlink" title="Project_Server"></a>Project_Server</h3><h4 id="Program-cs-2"><a href="#Program-cs-2" class="headerlink" title="Program.cs"></a>Program.cs</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Server</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            UDPServer server = <span class="keyword">new</span> UDPServer();</span><br><span class="line">            server.Start();</span><br><span class="line">            Console.WriteLine(<span class="string">"服务器已打开，请先接收客户端的消息"</span>);</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">               <span class="keyword">string</span> text = Console.ReadLine();</span><br><span class="line">               server.Send(Encoding.UTF8.GetBytes(text));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="UDPServer-cs"><a href="#UDPServer-cs" class="headerlink" title="UDPServer.cs"></a>UDPServer.cs</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Net;</span><br><span class="line"><span class="keyword">using</span> System.Net.Sockets;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Server</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">UDPServer</span></span><br><span class="line">    &#123;</span><br><span class="line">        UdpClient udpClient;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//1-65535</span></span><br><span class="line">            udpClient = <span class="keyword">new</span> UdpClient(<span class="number">8899</span>);</span><br><span class="line">            Recieve();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        IPEndPoint remote;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 接收消息</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">async</span> <span class="keyword">void</span> <span class="title">Recieve</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">while</span> (udpClient != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//接收客户端的消息</span></span><br><span class="line">                    UdpReceiveResult result = <span class="keyword">await</span> udpClient.ReceiveAsync();</span><br><span class="line">                    remote = result.RemoteEndPoint;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">string</span> text = Encoding.UTF8.GetString(result.Buffer);</span><br><span class="line">                    Console.WriteLine(<span class="string">"接收到的数据："</span> + text);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">catch</span> (Exception error)</span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    Console.WriteLine(<span class="string">"接收异常："</span> + error.Message);</span><br><span class="line">                    udpClient.Close();</span><br><span class="line">                    udpClient = <span class="literal">null</span>;</span><br><span class="line">                &#125;  </span><br><span class="line">            &#125;     </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 发送消息</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="data"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> <span class="keyword">void</span> <span class="title">Send</span>(<span class="params"><span class="keyword">byte</span>[] data</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span>(udpClient != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//对客户端来讲，它肯定是知道服务器的IP和端口</span></span><br><span class="line">                    <span class="comment">//对服务器来说，它无法知道客户端的IP和端口</span></span><br><span class="line">                    <span class="comment">//使用UDP都需要客户端先发送消息过来，我们才可以获取到用户的IP和端口</span></span><br><span class="line">                    <span class="comment">//其实使用TCP也是一样</span></span><br><span class="line">                    <span class="keyword">int</span> length = <span class="keyword">await</span> udpClient.SendAsync(data, data.Length,remote);</span><br><span class="line">                    <span class="keyword">if</span>(length == data.Length)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Console.WriteLine(<span class="string">"完整地发送了数据"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">catch</span> (Exception e)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">"发送了异常："</span> + e.Message);</span><br><span class="line">                    udpClient.Close();</span><br><span class="line">                    udpClient = <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                udpClient.Close();</span><br><span class="line">                udpClient = <span class="literal">null</span>;</span><br><span class="line">            &#125;            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Project-Client"><a href="#Project-Client" class="headerlink" title="Project_Client"></a>Project_Client</h3><h4 id="Program-cs-3"><a href="#Program-cs-3" class="headerlink" title="Program.cs"></a>Program.cs</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Client</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Client client = <span class="keyword">new</span> Client();</span><br><span class="line">            client.Start();</span><br><span class="line">            Console.WriteLine(<span class="string">"客户端已启动，现在开始发送消息吧"</span>);</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">string</span> text = Console.ReadLine();</span><br><span class="line">                client.Send(Encoding.UTF8.GetBytes(text));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Client-cs-1"><a href="#Client-cs-1" class="headerlink" title="Client.cs"></a>Client.cs</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Net.Sockets;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Client</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Client</span></span><br><span class="line">    &#123;</span><br><span class="line">        UdpClient udpClient;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//0表示由系统任意分配</span></span><br><span class="line">            udpClient = <span class="keyword">new</span> UdpClient(<span class="number">0</span>);</span><br><span class="line">            Recieve();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> <span class="keyword">void</span> <span class="title">Send</span>(<span class="params"><span class="keyword">byte</span>[] data</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (udpClient != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                 <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> length = <span class="keyword">await</span> udpClient.SendAsync(data, data.Length,</span><br><span class="line">                                                           <span class="string">"127.0.0.1"</span>, <span class="number">8899</span>);</span><br><span class="line">                    <span class="keyword">if</span> (data.Length == length)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Console.WriteLine(<span class="string">"完整的发送！"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">catch</span> (Exception error)</span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    Console.WriteLine(error.Message);</span><br><span class="line">                    udpClient.Close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                udpClient.Close();</span><br><span class="line">                udpClient = <span class="literal">null</span>;</span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> <span class="keyword">void</span> <span class="title">Recieve</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">while</span> (udpClient != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    UdpReceiveResult result = <span class="keyword">await</span> udpClient.ReceiveAsync();</span><br><span class="line">                    Console.WriteLine(Encoding.UTF8.GetString(result.Buffer));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">catch</span> (Exception e)</span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    Console.WriteLine(e.Message);</span><br><span class="line">                    udpClient.Close();</span><br><span class="line">                    udpClient = <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行两个程序后，先在客户端向服务器发送一条消息，此时服务器接收到消息并获知了客户端的端口，此时可以从服务器控制台向客户端发送消息。</p><p>![image-20200421201139889](D:\blog\source_posts\C Sharp网络编程\image-20200421201139889.png)</p><h1 id="Http"><a href="#Http" class="headerlink" title="Http"></a>Http</h1><h2 id="客户端发起Get请求、服务器接收请求"><a href="#客户端发起Get请求、服务器接收请求" class="headerlink" title="客户端发起Get请求、服务器接收请求"></a>客户端发起Get请求、服务器接收请求</h2><h2 id="服务器响应客户端的Get请求"><a href="#服务器响应客户端的Get请求" class="headerlink" title="服务器响应客户端的Get请求"></a>服务器响应客户端的Get请求</h2><h2 id="客户端Post请求与服务器响应"><a href="#客户端Post请求与服务器响应" class="headerlink" title="客户端Post请求与服务器响应"></a>客户端Post请求与服务器响应</h2><h2 id="实现文件下载功能"><a href="#实现文件下载功能" class="headerlink" title="实现文件下载功能"></a>实现文件下载功能</h2>]]></content>
      
      
      
        <tags>
            
            <tag> C&amp;#35 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>核心C#</title>
      <link href="/2020/04/12/%E6%A0%B8%E5%BF%83C%20Sharp/"/>
      <url>/2020/04/12/%E6%A0%B8%E5%BF%83C%20Sharp/</url>
      
        <content type="html"><![CDATA[<p>声明变量、变量的初始化和作用域、C#的预定义数据类型、在C#程序中指定执行流、使用命名空间组织class和type、Main()方法、使用内部注释和文档编制功能、预处理器指令、C#编程的推荐规则和约定</p><a id="more"></a><h1 id="1-C-基础"><a href="#1-C-基础" class="headerlink" title="1. C#基础"></a>1. C#基础</h1><p>在C#中，语句以分号（;）结尾，用花括号（{}）把语句组合为块。单行注释以两个斜杠字符开头（//），多行注释以一个斜杠和一个星号（/*）开头，以一个斜杠和一个星号（/*）结尾。C#区分大小写，即myVar和MyVar是两个不同的变量。</p><p>示例：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Wrox.HelloWorldApp</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"Hello, World!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在示例中，前几行代码与命名空间有关（后文将提到），命名空间是把有相关类组合在一起的方式。namespace关键字声明了一个命名空间，关联其中的类。其后花括号中的左右代码都被认为是在这个命名空间中。编译器在using语句指定的命名空间中查找<strong>没有在当前命名空间中定义但在代码中引用</strong>的类。这类似于Java中的import语句和C++中的using namespace语句。</p><p>使用using指令的原因是要使用一个库类System.Console。using System语句允许把这个类简写为Console（System命名空间中其他类也如此）如果没有using，就必须完全限定对Console.WriteLine()方法的调用，如下所示：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.Console.WriteLine(<span class="string">"Hello World!"</span>);</span><br></pre></td></tr></table></figure><p>使用using static声明，不仅可以打开命名空间，还可以打开类的所有静态成员。声明using static System.Console，可以调用Console类的WriteLine方法，但不使用类名：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">static</span> System.Console;</span><br><span class="line"><span class="comment">//...</span></span><br><span class="line">WriteLine(<span class="string">"Hello World!"</span>);</span><br></pre></td></tr></table></figure><p>标准的System命名空间包含了最常用的.NET类型。在C#中做的所有工作都依赖于.NET基类。C#没有用于输入和输出的内置关键字，而是完全依赖于.NET类。</p><p>在源代码中，声明一个类Program。但是，因为该类位于Wrox.HelloWorldApp命名空间中，所以其完整名称是Wrox.HelloWorldApp.Program。</p><p>所有C#代码都必须包含在类中。类的声明包括class关键字，其后是类名和一对花括号。与类相关的所有代码都应放在这对花括号中。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">Wrox.HelloWorldApp</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br></pre></td></tr></table></figure><p>Program类包含一个方法Main()。每个C#可执行文件（如控制台应用程序、Windows应用程序、Windows服务和Web应用程序）都必须有一个入口点——Main()方法（注意，M大写）。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br></pre></td></tr></table></figure><p>在程序启动时调用该方法。该方法要么没有返回值（void）要么返回一个整数（int）。注意，在C#中，方法定义如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[修饰符] 返回类型 方法名([参数])</span><br><span class="line">&#123;</span><br><span class="line">&#x2F;&#x2F;方法内容.</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一个方括号里的内容表示可选关键字。修饰符用于指定用户做定义的方法的某些特性，如可以在什么地方调用该方法。在本例中，Main()方法没有使用public访问修饰符，如果需要对Main()方法进行单元测试，可以给它使用public访问修饰符。运行库不需要使用public访问修饰符，仍可以调用方法。运行库没有创建类的实例，调用方法时，需要修饰符static。把返回类型设置为void，在本例中不包含任何参数。</p><p>最后看代码语句：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Console.WriteLine(<span class="string">"Hello World!"</span>);</span><br></pre></td></tr></table></figure><p>在本例中，只调用了System.Console类的WriteLine()方法，把一行文本写到控制台窗口上。WriteLine()是一个静态方法，在调用之前不需要实例化Console对象。</p><h1 id="2-变量"><a href="#2-变量" class="headerlink" title="2. 变量"></a>2. 变量</h1><p>没有变量不可能写出重要的程序。</p><p>C#中使用下述语句声明变量：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datatype identifier</span><br></pre></td></tr></table></figure><h2 id="2-1-初始化变量"><a href="#2-1-初始化变量" class="headerlink" title="2.1 初始化变量"></a>2.1 初始化变量</h2><h2 id="2-2-类型推断"><a href="#2-2-类型推断" class="headerlink" title="2.2 类型推断"></a>2.2 类型推断</h2><p>类型推断使用var关键字。声明变量的语法有些变化：使用var关键字替代实际的类型。编译器可以根据变量的初始化值“推断”变量的类型。例如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> someNumber = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>变成：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> someNumber = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>即使someNumber没有声明int，编译器也可以确定，只要someNumber在其作用域内，就是int类型。编译后上边两个语句是等价的。下边是另一个小例子：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">VariablesSample</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">var</span> name = <span class="string">"Bugs Bunny"</span>;</span><br><span class="line">            <span class="keyword">var</span> age = <span class="number">25</span>;</span><br><span class="line">            <span class="keyword">var</span> isRabbit = <span class="literal">true</span>;</span><br><span class="line">            Type nameType = name.GetType();</span><br><span class="line">            Type ageType = age.GetType();</span><br><span class="line">            Type isRabbitType = isRabbit.GetType();</span><br><span class="line">            Console.WriteLine(<span class="string">$"name is of type <span class="subst">&#123;nameType&#125;</span>"</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">$"age is of type <span class="subst">&#123;ageType&#125;</span>"</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">$"isRabbit is of type <span class="subst">&#123;isRabbitType&#125;</span>"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序输出如下：</p><p><img src="/2020/04/12/%E6%A0%B8%E5%BF%83C%20Sharp/image-20200413095925128.png" alt="image-20200413095925128"></p><p>需要遵循以下规则：</p><ul><li>变量必须初始化，否则，编译器没有推断变量类型的依据。</li><li>初始化器不能为空。</li><li>初始化器必须放在表达式中。</li><li>不能把初始化器设置为一个对象，除非在初始化器中创建了一个新对象。</li></ul><p>声明了变量且推断出类型后，就不能再改变变量的类型了。变量的类型确定后，对该变量进行任何赋值时，其强类型化规则必须以推断出的类型为基础。</p><h2 id="2-3-变量作用域"><a href="#2-3-变量作用域" class="headerlink" title="2.3 变量作用域"></a>2.3 变量作用域</h2><p>变量的作用域是可以访问该变量的代码区域。一般情况下，确定作用域遵循以下规则:</p><ul><li>只要类的局部变量在某个作用域内，其字段（也称为成员变量）也在该作用域内。</li><li>局部变量存在于表示声明该变量的块语句或方法结束的右花括号之前的作用域内。</li><li>在for、while或类似语句中声明的局部变量存在于该循环体内。</li></ul><h3 id="1-局部变量的作用域冲突"><a href="#1-局部变量的作用域冲突" class="headerlink" title="1. 局部变量的作用域冲突"></a>1. 局部变量的作用域冲突</h3><p>大型程序常常在不同部分为不同的变量使用相同的变量名。只要变量的作用域是程序的不同部分，就不会有问题，也不会产生多义性。但要注意，同名的局部变量不能在同一作用域内声明两次。例如，不能使用下面的代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> x = <span class="number">20</span>;</span><br><span class="line"><span class="comment">// some more code</span></span><br><span class="line"><span class="keyword">int</span> x = <span class="number">30</span>;</span><br></pre></td></tr></table></figure><p>考虑以下代码示例：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">VariableScopeSample</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> j;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(i);</span><br><span class="line">            &#125;  <span class="comment">// i goes out of scope here</span></span><br><span class="line">               <span class="comment">// We can declare a variable named i again, because</span></span><br><span class="line">               <span class="comment">// there's no other variable with that name in scope</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">9</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(i);</span><br><span class="line">            &#125;  <span class="comment">// i goes out of scope here.</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码很简单，使用两个for循环打印0<del>9的数字，再逆序打印0</del>9的数字。重要的是在同一个方法中，代码中的变量i声明了两次。可以这么做的原因是i在两个相互独立的循环内部声明，所以每个变量i对于各自的循环来说是局部变量。</p><p>下面是另一个例子：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">VariableScopeSample2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span> j = <span class="number">20</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// int j = 30; // Can't do this — j is still in scope</span></span><br><span class="line">                Console.WriteLine(j + i);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果试图编译它，会产生如下错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">error CS0136: 无法在此范围中声明名为“j”的局部变量或参数，</span><br><span class="line">因为该名称在封闭局部范围中用于定义局部变量或参数</span><br></pre></td></tr></table></figure><h3 id="2-字段和局部变量的作用域冲突"><a href="#2-字段和局部变量的作用域冲突" class="headerlink" title="2. 字段和局部变量的作用域冲突"></a>2. 字段和局部变量的作用域冲突</h3><h2 id="2-4-常量"><a href="#2-4-常量" class="headerlink" title="2.4 常量"></a>2.4 常量</h2><p>顾名思义，常量是其值在使用过程（生命周期）中不会发生变化的变量。在声明和初始化变量时，在变量的 前面加上关键字const,就可以把该变量指定为一个常量： </p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> a = <span class="number">100</span>; <span class="comment">// This value cannot be changed.</span></span><br></pre></td></tr></table></figure><p>常量具有如下特点：    ‘</p><ul><li><p>常量必须在声明时初始化。指定了其值后，就不能再改写了。</p></li><li><p>常量的值必须能在编译时用于计算。因此，不能用从变量中提取的值来初始化常量。如果需要这么做,<br>应使用只读字段。</p></li><li><p>常量总是隐式静态的。但注意，不必（实际上，是不允许）在常量声明中包含修饰符static。<br>在程序中使用常量至少有3个好处：</p><ul><li><p>由于使用易于读取的名称（名称的值易于理解）替代了较难读取的数字和字符串，常量使程序变得更易于<br>阅读。</p></li><li><p>常量使程序更易于修改。例如，在C#程序中有一个SalesTax常量，该常量的值为6%。如果以后销售<br>税率发生变化，把新值赋给这个常量，就可以修改所有的税款计算结果，而不必査找整个程序去修改<br>税率为0.06的每个项。</p></li><li><p>常量更容易避免程序出现错误。如果在声明常量的位置以外的某个地方将另一个值赋给常量，编译器<br>就会标记错误。</p></li></ul></li></ul><h1 id="3-预定义数据类型"><a href="#3-预定义数据类型" class="headerlink" title="3. 预定义数据类型"></a>3. 预定义数据类型</h1><h3 id="3-1-值类型和引用类型"><a href="#3-1-值类型和引用类型" class="headerlink" title="3.1 值类型和引用类型"></a>3.1 值类型和引用类型</h3><h2 id="3-2-NET类型"><a href="#3-2-NET类型" class="headerlink" title="3.2 .NET类型"></a>3.2 .NET类型</h2><h2 id="3-3-预定义的值类型"><a href="#3-3-预定义的值类型" class="headerlink" title="3.3 预定义的值类型"></a>3.3 预定义的值类型</h2><h2 id="3-4-预定义的引用类型"><a href="#3-4-预定义的引用类型" class="headerlink" title="3.4 预定义的引用类型"></a>3.4 预定义的引用类型</h2><h1 id="4-程序流控制"><a href="#4-程序流控制" class="headerlink" title="4. 程序流控制"></a>4. 程序流控制</h1><h1 id="5-命名空间"><a href="#5-命名空间" class="headerlink" title="5. 命名空间"></a>5. 命名空间</h1><h1 id="6-Main-方法"><a href="#6-Main-方法" class="headerlink" title="6. Main()方法"></a>6. Main()方法</h1><h1 id="7-使用注释"><a href="#7-使用注释" class="headerlink" title="7. 使用注释"></a>7. 使用注释</h1><h1 id="8-C-预处理器指令"><a href="#8-C-预处理器指令" class="headerlink" title="8. C#预处理器指令"></a>8. C#预处理器指令</h1><h1 id="9-C-编程准则"><a href="#9-C-编程准则" class="headerlink" title="9. C#编程准则"></a>9. C#编程准则</h1><h1 id="10-总结"><a href="#10-总结" class="headerlink" title="10. 总结"></a>10. 总结</h1>]]></content>
      
      
      
        <tags>
            
            <tag> C&amp;#35 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Unity 2019制作俄罗斯方块</title>
      <link href="/2020/04/09/%E7%94%A8Unity%202019%E5%88%B6%E4%BD%9C%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97/"/>
      <url>/2020/04/09/%E7%94%A8Unity%202019%E5%88%B6%E4%BD%9C%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<p>版本：Unity 2019.3.4f1 Personal</p><a id="more"></a><h1 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h1><p>GameManager.cs内容如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> DG.Tweening;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GameManager</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">enum</span> GameState</span><br><span class="line">    &#123;</span><br><span class="line">        Start,</span><br><span class="line">        Stop</span><br><span class="line">    &#125;</span><br><span class="line">    GameState gameState = GameState.Stop;</span><br><span class="line">    <span class="keyword">public</span> Button startGame;<span class="comment">//开始游戏按钮</span></span><br><span class="line">    <span class="keyword">public</span> Button stopGame;<span class="comment">//停止游戏按钮</span></span><br><span class="line">    <span class="keyword">public</span> Transform MaxPosx;<span class="comment">//方块X轴可移动的最小位置，相当于地图边界</span></span><br><span class="line">    <span class="keyword">public</span> Transform MinPosx;<span class="comment">//X轴最小</span></span><br><span class="line">    <span class="keyword">public</span> Transform MaxPosy;<span class="comment">//Y轴最大</span></span><br><span class="line">    <span class="keyword">public</span> Transform MinPosy;<span class="comment">//Y轴最小</span></span><br><span class="line">    <span class="keyword">public</span> Transform[,] map = <span class="keyword">new</span> Transform[<span class="number">11</span>, <span class="number">15</span>];<span class="comment">//二维数组，方块信息存储起来</span></span><br><span class="line">    <span class="keyword">public</span> GameObject[] shapes = <span class="keyword">new</span> GameObject[<span class="number">7</span>];<span class="comment">//7种不同的形状</span></span><br><span class="line">    <span class="keyword">public</span> Sprite[] sprites = <span class="keyword">new</span> Sprite[<span class="number">7</span>];<span class="comment">//七种颜色的方块</span></span><br><span class="line">    <span class="keyword">public</span> Sprite[] levelSprite = <span class="keyword">new</span> Sprite[<span class="number">5</span>];</span><br><span class="line">    Transform currentShape;<span class="comment">//当前形状</span></span><br><span class="line">    Transform nextShape;<span class="comment">//下一个形状</span></span><br><span class="line">    <span class="keyword">private</span> Transform preview;<span class="comment">//预览形状的父物体</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> level = <span class="number">1</span>;<span class="comment">//等级</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> score = <span class="number">0</span>;<span class="comment">//分数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> initSpeed = <span class="number">0.8f</span>;<span class="comment">//初始每次下降的时间</span></span><br><span class="line">    <span class="keyword">private</span> Transform shapePool;<span class="comment">//方块的父物体</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">float</span> spacing;<span class="comment">//两个方块的间距</span></span><br><span class="line">    <span class="keyword">private</span> Transform gameOver;<span class="comment">//游戏结束图片</span></span><br><span class="line">    <span class="keyword">private</span> Image levelImage;</span><br><span class="line">    <span class="keyword">private</span> Text scoreText;<span class="comment">//分数文本</span></span><br><span class="line">    <span class="keyword">private</span> Text upgradeScoreText;<span class="comment">//升级分数文本</span></span><br><span class="line">    <span class="keyword">private</span> AudioSource audioSource;<span class="comment">//音频源组件</span></span><br><span class="line">    <span class="keyword">public</span> AudioClip[] audioClips;<span class="comment">//音频剪辑的数组</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        preview = GameObject.Find(<span class="string">"Preview"</span>).transform;</span><br><span class="line">        spacing = Mathf.Abs(GameObject.Find(<span class="string">"Row/Block (1)"</span>).transform.position.x</span><br><span class="line">            - GameObject.Find(<span class="string">"Row/Block (2)"</span>).transform.position.x);</span><br><span class="line">        shapePool = GameObject.Find(<span class="string">"ShapePool"</span>).transform;</span><br><span class="line">        levelImage = GameObject.Find(<span class="string">"Level"</span>).GetComponent&lt;Image&gt;();</span><br><span class="line">        gameOver = transform.Find(<span class="string">"GameOver"</span>);</span><br><span class="line">        scoreText = GameObject.Find(<span class="string">"ScoreText"</span>).GetComponent&lt;Text&gt;();</span><br><span class="line">        upgradeScoreText = GameObject.Find(<span class="string">"UpgradeScoreText"</span>).GetComponent&lt;Text&gt;();</span><br><span class="line">        audioSource = transform.GetComponent&lt;AudioSource&gt;();</span><br><span class="line">        startGame.onClick.AddListener(StartGame);</span><br><span class="line">        stopGame.onClick.AddListener(StopGame);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 停止游戏</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">StopGame</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span>(gameState == GameState.Start)</span><br><span class="line">        &#123;</span><br><span class="line">            gameState = GameState.Stop;</span><br><span class="line">            <span class="keyword">if</span>(currentShape != <span class="literal">null</span>)</span><br><span class="line">            &#123;<span class="comment">//当前形状和下一块的形状不为空就销毁，等待下一局开始重新分配</span></span><br><span class="line">                Destroy(currentShape.gameObject);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(nextShape != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Destroy(nextShape.gameObject);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; shapePool.childCount; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Destroy(shapePool.GetChild(i).gameObject);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; map.GetLength(<span class="number">0</span>); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; map.GetLength(<span class="number">1</span>); j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    map[i, j] = <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//重置等级和积分</span></span><br><span class="line">        level = <span class="number">1</span>;</span><br><span class="line">        score = <span class="number">0</span>;</span><br><span class="line">        scoreText.text = <span class="string">"当前积分：0"</span>;</span><br><span class="line">        upgradeScoreText.text = <span class="string">"升级积分：100"</span>;</span><br><span class="line">        levelImage.sprite = levelSprite[<span class="number">0</span>];</span><br><span class="line">        <span class="comment">//显示游戏结束的画面</span></span><br><span class="line">        StartCoroutine(OpenGameOver());</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 开始游戏</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">StartGame</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span>(gameState == GameState.Stop)</span><br><span class="line">        &#123;</span><br><span class="line">            level = <span class="number">1</span>;</span><br><span class="line">            score = <span class="number">0</span>;</span><br><span class="line">            scoreText.text = <span class="string">"当前积分：0"</span>;</span><br><span class="line">            upgradeScoreText.text = <span class="string">"升级积分：100"</span>;</span><br><span class="line">            gameState = GameState.Start;</span><br><span class="line">            gameOver.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">            <span class="comment">//游戏开始时候的初始化工作</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//生成不同形状的方块，开始游戏需要播放音频</span></span><br><span class="line">            SpawnShape();<span class="comment">//生成形状</span></span><br><span class="line">            PlayAudio(<span class="number">3</span>);<span class="comment">//播放声音</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 消除方块</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="rowIndex"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ClearShape</span>(<span class="params">List&lt;<span class="keyword">int</span>&gt; rowIndex</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">bool</span> isMove = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; rowIndex.Count; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; map.GetLength(<span class="number">0</span>); j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(map[j, rowIndex[i]] != <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//对每个需要消除的格子进行消除</span></span><br><span class="line">                    Transform block = map[j, rowIndex[i]];</span><br><span class="line">                    map[j, rowIndex[i]] = <span class="literal">null</span>;</span><br><span class="line">                    block.GetComponent&lt;Image&gt;().DOFade(<span class="number">0</span>, <span class="number">0.2f</span>)</span><br><span class="line">                        .SetLoops(<span class="number">4</span>)</span><br><span class="line">                        .SetEase(Ease.Linear)</span><br><span class="line">                        .OnComplete(() =&gt; </span><br><span class="line">                        &#123;</span><br><span class="line">                            Destroy(block.gameObject);</span><br><span class="line">                            <span class="keyword">if</span> (isMove)</span><br><span class="line">                            &#123;</span><br><span class="line">                                isMove = <span class="literal">false</span>;</span><br><span class="line">                                MoveLines(rowIndex);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 消除后移动剩余方块的方法，让他们到达应该在的位置</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="rowIndex"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MoveLines</span>(<span class="params">List&lt;<span class="keyword">int</span>&gt; rowIndex</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = rowIndex[<span class="number">0</span>];i &lt; map.GetLength(<span class="number">1</span>) ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j= <span class="number">0</span>;j &lt; map.GetLength(<span class="number">0</span>); j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(map[j,i] != <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> dropRow = GetDropRow(rowIndex,i);</span><br><span class="line">                    map[j, i - dropRow] = map[j, i];<span class="comment">//将当前这个格子的数据存到要下降的那个格子去</span></span><br><span class="line">                    map[j, i] = <span class="literal">null</span>;</span><br><span class="line">                    map[j, i - dropRow].position -= <span class="keyword">new</span> Vector3(<span class="number">0</span>, dropRow * spacing, <span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        CheckGameState();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 获取要消除多少行</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="rowIndex"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="currentRow"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">GetDropRow</span>(<span class="params">List&lt;<span class="keyword">int</span>&gt; rowIndex,<span class="keyword">int</span> currentRow</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">int</span> dropRow = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; rowIndex.Count; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(currentRow &gt; rowIndex[i])</span><br><span class="line">            &#123;</span><br><span class="line">                dropRow++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dropRow;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 检测游戏是否结束</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CheckGameState</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; map.GetLength(<span class="number">0</span>); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(map[i, map.GetLength(<span class="number">1</span>)<span class="number">-1</span>]!= <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                StopGame();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(gameState == GameState.Start)</span><br><span class="line">        &#123;</span><br><span class="line">            SpawnShape();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 保存地图数据，方块不能掉落后就保存进来</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="shape"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SaveShape</span>(<span class="params">Transform shape</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">//保存地图数据</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; shape.childCount; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!shape.GetChild(i).CompareTag(<span class="string">"ShapePivot"</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                Vector3 childPos = shape.GetChild(i).position;</span><br><span class="line">                <span class="keyword">int</span> xIndex = (<span class="keyword">int</span>)((childPos.x - MinPosx.position.x) / spacing);</span><br><span class="line">                <span class="keyword">int</span> yIndex = (<span class="keyword">int</span>)((childPos.y - MinPosy.position.y) / spacing);</span><br><span class="line">                <span class="comment">//求出再地图内对应的格子</span></span><br><span class="line">                <span class="keyword">if</span>(yIndex &lt; map.GetLength(<span class="number">1</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    map[xIndex, yIndex] = shape.GetChild(i);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    StopGame();</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                    <span class="comment">//游戏结束</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//检查是否需要消除</span></span><br><span class="line">        CheckClear();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 方块消除检测</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">CheckClear</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">//检查是否有需要消除的方块</span></span><br><span class="line">        List&lt;<span class="keyword">int</span>&gt; rowIndex = <span class="keyword">new</span> List&lt;<span class="keyword">int</span>&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; map.GetLength(<span class="number">1</span>); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">bool</span> isClear = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; map.GetLength(<span class="number">0</span>); j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(map[j, i] == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    isClear = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (isClear)</span><br><span class="line">            &#123;</span><br><span class="line">                rowIndex.Add(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (rowIndex.Count &gt;= <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ClearShape(rowIndex);<span class="comment">//调用消除的方法</span></span><br><span class="line">            <span class="comment">//积分增长与升级</span></span><br><span class="line">            score += rowIndex.Count * <span class="number">10</span>;<span class="comment">//每消除一行加10分</span></span><br><span class="line">            <span class="keyword">if</span>(score &gt; level * <span class="number">100</span> &amp;&amp; level &lt; <span class="number">5</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                level += <span class="number">1</span>;</span><br><span class="line">                levelImage.sprite = levelSprite[level - <span class="number">1</span>];</span><br><span class="line">                <span class="keyword">if</span>(level &lt; <span class="number">5</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    upgradeScoreText.text = <span class="string">"升级积分："</span> + level * <span class="number">100</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    upgradeScoreText.text = <span class="string">"已经满级"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            scoreText.text = <span class="string">"当前积分："</span> + score;</span><br><span class="line">            <span class="comment">//播放消除的音效</span></span><br><span class="line">            PlayAudio(<span class="number">1</span>);<span class="comment">//播放声音</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;<span class="comment">//如果不需要消除，那么需要判断游戏是否结束，如果没有结束就要生成新的可控制方块</span></span><br><span class="line">            CheckGameState();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 判断方块的位置是否合法，首先是否超出地图边界，然后判断是否有和其他方块重叠</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="shape"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="title">CheckPos</span>(<span class="params">Transform shape</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; shape.childCount; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (shape.GetChild(i).CompareTag(<span class="string">"ShapePivot"</span>) == <span class="literal">false</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Vector3 childPos = shape.GetChild(i).position;</span><br><span class="line">                <span class="keyword">if</span>(childPos.x &lt; MinPosx.position.x </span><br><span class="line">                    || childPos.x &gt; MaxPosx.position.x</span><br><span class="line">                    || childPos.y &lt; MinPosy.position.y)</span><br><span class="line">                 <span class="comment">//   || childPos.y &gt; MaxPosy.position.y)</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">int</span> xIndex = (<span class="keyword">int</span>)((childPos.x - MinPosx.position.x) / spacing);</span><br><span class="line">                <span class="keyword">int</span> yIndex = (<span class="keyword">int</span>)((childPos.y - MinPosy.position.y) / spacing);</span><br><span class="line">                Debug.Log(<span class="string">"对应的索引是："</span> + xIndex + <span class="string">"Y的索引"</span> + yIndex);</span><br><span class="line">                <span class="keyword">if</span>(yIndex &lt; map.GetLength(<span class="number">1</span>))</span><br><span class="line">                &#123;<span class="comment">//Y轴小于地图边界的时候再来计算它是否有重叠</span></span><br><span class="line">                    <span class="keyword">if</span>(map[xIndex, yIndex] != <span class="literal">null</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 生成方块的方法</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SpawnShape</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span>(gameState == GameState.Stop)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> shapeIndex;<span class="comment">//形状的索引</span></span><br><span class="line">        <span class="keyword">int</span> colorIndex;<span class="comment">//颜色的索引</span></span><br><span class="line">        <span class="keyword">if</span>(nextShape == <span class="literal">null</span>)</span><br><span class="line">        &#123;<span class="comment">//游戏刚开始的时候，下一个形状会为空</span></span><br><span class="line">            <span class="comment">//先随机生成颜色和形状的索引</span></span><br><span class="line">            shapeIndex = UnityEngine.Random.Range(<span class="number">0</span>, shapes.Length);</span><br><span class="line">            colorIndex = UnityEngine.Random.Range(<span class="number">0</span>, sprites.Length);</span><br><span class="line">            <span class="comment">//克隆出随机到的形状和赋予对应的颜色</span></span><br><span class="line">            currentShape = GameObject.Instantiate(shapes[shapeIndex]).transform;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; currentShape.childCount; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (!currentShape.GetChild(i).CompareTag(<span class="string">"ShapePivot"</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    currentShape.GetChild(i).GetComponent&lt;Image&gt;().sprite = sprites[colorIndex];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            currentShape = nextShape;</span><br><span class="line">        &#125;</span><br><span class="line">        currentShape.gameObject.AddComponent&lt;ShapeControl&gt;().Init(initSpeed - level/<span class="number">10f</span>, spacing);</span><br><span class="line">        shapeIndex = UnityEngine.Random.Range(<span class="number">0</span>, shapes.Length);</span><br><span class="line">        colorIndex = UnityEngine.Random.Range(<span class="number">0</span>, sprites.Length);</span><br><span class="line">        nextShape = GameObject.Instantiate(shapes[shapeIndex]).transform;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; currentShape.childCount; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!currentShape.GetChild(i).CompareTag(<span class="string">"ShapePivot"</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                currentShape.GetChild(i).GetComponent&lt;Image&gt;().sprite = sprites[colorIndex];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        nextShape.SetParent(preview);</span><br><span class="line">        nextShape.localPosition = Vector3.zero;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 开启游戏结束的图片，1秒后自动关闭</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> IEnumerator <span class="title">OpenGameOver</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        gameOver.gameObject.SetActive(<span class="literal">true</span>);</span><br><span class="line">        <span class="function"><span class="keyword">yield</span> return new <span class="title">WaitForSeconds</span>(<span class="params"><span class="number">1</span></span>)</span>;</span><br><span class="line">        gameOver.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 播放音效</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="index"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">PlayAudio</span>(<span class="params"><span class="keyword">int</span> index</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        audioSource.clip = audioClips[index];</span><br><span class="line">        audioSource.Play();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ShapeControl.cs内容如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ShapeControl</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">float</span> speed; <span class="comment">//下降速度，值越低下降越快</span></span><br><span class="line">    <span class="keyword">float</span> spacing;<span class="comment">//间距，每次下降移动的值</span></span><br><span class="line">    <span class="keyword">float</span> mTimer;<span class="comment">//计时</span></span><br><span class="line">    GameManager gameManager;</span><br><span class="line">    Transform mPivot;<span class="comment">//方块旋转的中心</span></span><br><span class="line">    <span class="keyword">bool</span> isStopDown = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Init</span>(<span class="params"><span class="keyword">float</span> speed,<span class="keyword">float</span> spacing</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">//初始化设置物体生成的位置和给一些变量赋值</span></span><br><span class="line">        gameManager = GameObject.Find(<span class="string">"BG"</span>).GetComponent&lt;GameManager&gt;();</span><br><span class="line">        transform.SetParent(GameObject.Find(<span class="string">"ShapePool"</span>).transform);</span><br><span class="line">        <span class="keyword">if</span>(gameObject.name.Contains(<span class="string">"Shape (3)"</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            transform.localPosition = <span class="keyword">new</span> Vector2(-spacing / <span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            transform.localPosition = Vector3.zero;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.speed = speed;</span><br><span class="line">        <span class="keyword">this</span>.spacing = spacing;</span><br><span class="line">        mPivot = transform.Find(<span class="string">"Pivot"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isStopDown)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mTimer += Time.deltaTime;</span><br><span class="line">        <span class="keyword">if</span>(mTimer &gt;= speed)</span><br><span class="line">        &#123;</span><br><span class="line">            mTimer = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">//时间到了，方块向下移动一格</span></span><br><span class="line">            SetPositionOrRotate(<span class="keyword">new</span> Vector3(<span class="number">0</span>, -spacing, <span class="number">0</span>), <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.LeftArrow))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//按下左方向键，控制方块向左移动一格</span></span><br><span class="line">            SetPositionOrRotate(<span class="keyword">new</span> Vector3(-spacing, <span class="number">0</span>, <span class="number">0</span>), <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.RightArrow))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//按下右方向键，控制方块向右移动一格</span></span><br><span class="line">            SetPositionOrRotate(<span class="keyword">new</span> Vector3(spacing, <span class="number">0</span>, <span class="number">0</span>), <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.UpArrow))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//按上方向键，旋转方块</span></span><br><span class="line">            SetPositionOrRotate(<span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="number">90</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.DownArrow))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//按下向下方向键，加快移动速度</span></span><br><span class="line">            speed = speed / <span class="number">2</span>;</span><br><span class="line">        &#125;     </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 设置这个形状的位置或者形状</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="pos"&gt;</span>移动位置<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="rotate"&gt;</span>旋转角度<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">SetPositionOrRotate</span>(<span class="params">Vector3 pos,<span class="keyword">float</span> rotate</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span>(isStopDown)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(pos != Vector3.zero)</span><br><span class="line">        &#123;</span><br><span class="line">            transform.position += pos;</span><br><span class="line">            Debug.Log(transform.position);</span><br><span class="line">            <span class="keyword">if</span> (gameManager.CheckPos(transform) == <span class="literal">false</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                transform.position -= pos;</span><br><span class="line">                <span class="keyword">if</span>(pos.y != <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    isStopDown = <span class="literal">true</span>;</span><br><span class="line">                    gameManager.SaveShape(transform);</span><br><span class="line">                    Debug.Log(<span class="string">"删除了脚本"</span>);</span><br><span class="line">                    Destroy(<span class="keyword">this</span>);<span class="comment">//删除自身这个脚本组件，不再接受控制了</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//如果移动合法，根据左右移动或者向下移动播放不同的音效</span></span><br><span class="line">                <span class="keyword">if</span>(pos.y != <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    gameManager.PlayAudio(<span class="number">0</span>);<span class="comment">//播放下落的音效</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    gameManager.PlayAudio(<span class="number">2</span>);<span class="comment">//播放移动和旋转的音效</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;          </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(rotate != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            transform.RotateAround(mPivot.position,Vector3.forward, rotate);</span><br><span class="line">            <span class="keyword">if</span>(gameManager.CheckPos(transform) == <span class="literal">false</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                transform.RotateAround(mPivot.position, Vector3.forward, -rotate);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                gameManager.PlayAudio(<span class="number">2</span>);<span class="comment">//播放移动和旋转的音效</span></span><br><span class="line">                <span class="comment">//播放声音</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#与MySQL交互</title>
      <link href="/2020/04/06/C%20Sharp%E4%B8%8EMySql%E4%BA%A4%E4%BA%92/"/>
      <url>/2020/04/06/C%20Sharp%E4%B8%8EMySql%E4%BA%A4%E4%BA%92/</url>
      
        <content type="html"><![CDATA[<ul><li>MySQL的基础使用</li><li>C#与MySQL的交互</li><li>实战：账号注册和登录的功能开发</li></ul><a id="more"></a><h1 id="为什么要学习MySQL及其应用？"><a href="#为什么要学习MySQL及其应用？" class="headerlink" title="为什么要学习MySQL及其应用？"></a>为什么要学习MySQL及其应用？</h1><p>主要作用：集中管理网络游戏中所有玩家的数据与游戏中固定核心数据</p><ol><li>数据库主要应用再网路游戏开发中</li><li>因为网络上有成百上千的玩家，如果把数据存储到每个玩家的本地，管理起来就有很大的风险，其一是玩家更换设备就意味着数据会丢失</li><li>如果把数据放在玩家本地，玩家就可以篡改数据，以达到作弊的目的</li><li>把数据存放在本地，不方便玩家之间的交互</li><li>与微软的SQLServer对比，MySQL更加轻量级，使用起来更加方便</li></ol><p>官网：<a href="http://www.mysql.com/" target="_blank" rel="noopener">http://www.mysql.com/</a></p><p>使用5.7版本，因为相对比较稳定</p><h1 id="MySQL的基础使用"><a href="#MySQL的基础使用" class="headerlink" title="MySQL的基础使用"></a>MySQL的基础使用</h1><p>安装MySQL 5.7.11.0和MySQL-Front以后将两者打开，我们主要在MySQL-Front（汉化界面）操作数据库。</p><p>打开MySQL-Front后选中127.0.0.1，右键选择新建|数据库</p><p><img src="/2020/04/06/C%20Sharp%E4%B8%8EMySql%E4%BA%A4%E4%BA%92/image-20200413210049278.png" alt="image-20200413210049278"></p><p>名称填game，其他默认，点击确定。</p><p><img src="/2020/04/06/C%20Sharp%E4%B8%8EMySql%E4%BA%A4%E4%BA%92/image-20200413210156333.png" alt="image-20200413210156333"></p><p>要删除数据库，只需右键game，点击删除即可。</p><p>我们选择game，右键选择新建|表格，在弹出的窗口中，名称填写user，点击确定创建一个表格</p><p>要删除表格，只需右键user，点击删除即可。</p><p>表格的Id字段在我们创建表格时自动创建了，我们再添加其他字段。选中表格user右键，选择新建|字段，名称填写account，类型设置“VarChar”，其他默认，点击确定。</p><p><img src="/2020/04/06/C%20Sharp%E4%B8%8EMySql%E4%BA%A4%E4%BA%92/image-20200413211141716.png" alt="image-20200413211141716"></p><p>添加字段“password”如下</p><p><img src="/2020/04/06/C%20Sharp%E4%B8%8EMySql%E4%BA%A4%E4%BA%92/image-20200413211333185.png" alt="image-20200413211333185"></p><p>点击数据浏览器，接下来进行添加数据</p><p><img src="/2020/04/06/C%20Sharp%E4%B8%8EMySql%E4%BA%A4%E4%BA%92/image-20200413211536502.png" alt="image-20200413211536502"></p><p>直接点击字段下的空白，然后输入数据，点击发布按钮即可</p><p><img src="/2020/04/06/C%20Sharp%E4%B8%8EMySql%E4%BA%A4%E4%BA%92/image-20200413211742171.png" alt="image-20200413211742171"></p><p>点击插入数据按钮，申请一行供插入数据，点击其右边的删除数据按钮删除一行数据。</p><p><img src="/2020/04/06/C%20Sharp%E4%B8%8EMySql%E4%BA%A4%E4%BA%92/image-20200413211947211.png" alt="image-20200413211947211"></p><p>点击SQL编辑器，然后通过SQL指令查询数据</p><p><img src="/2020/04/06/C%20Sharp%E4%B8%8EMySql%E4%BA%A4%E4%BA%92/image-20200413212322437.png" alt="image-20200413212322437"></p><p><img src="/2020/04/06/C%20Sharp%E4%B8%8EMySql%E4%BA%A4%E4%BA%92/image-20200413212509122.png" alt="image-20200413212509122"></p><p><img src="/2020/04/06/C%20Sharp%E4%B8%8EMySql%E4%BA%A4%E4%BA%92/image-20200413212610862.png" alt="image-20200413212610862"></p><h1 id="C-与MySQL的交互"><a href="#C-与MySQL的交互" class="headerlink" title="C#与MySQL的交互"></a>C#与MySQL的交互</h1><h2 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h2><p>连接数据库</p><p>定义SQL操作语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">to</span> 表名（字段<span class="number">1</span>，字段<span class="number">2</span>，字段<span class="number">3</span>，...）<span class="keyword">values</span>（值<span class="number">1</span>，值<span class="number">2</span>，值<span class="number">3</span>，...）</span><br></pre></td></tr></table></figure><p>构建MySqlCommand，传递操作的sql语句和连接的实例</p><p>连接的实例需要先调用Open打开数据库</p><p>调用ExecuteNonQuery</p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>用VS2017创建一个项目Project_MySQL，添加引用<strong>MySql.Data.dll</strong></p><p>编辑Program.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> MySql.Data.MySqlClient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_MySQL</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Insert();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> MySqlConnection <span class="title">Connection</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> sqlInfo = <span class="string">"server=127.0.0.1;"</span> +</span><br><span class="line">                            <span class="string">"port=3306;"</span> +</span><br><span class="line">                            <span class="string">"database=game;"</span> +</span><br><span class="line">                            <span class="string">"user=root;"</span> +</span><br><span class="line">                            <span class="string">"password=12345"</span>;</span><br><span class="line">            MySqlConnection mySqlConnection = <span class="keyword">new</span> MySqlConnection(sqlInfo);</span><br><span class="line">            <span class="keyword">return</span> mySqlConnection;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Insert</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MySqlConnection client = Connection();<span class="comment">//连接数据库</span></span><br><span class="line">            <span class="comment">//插入操作的sql语句</span></span><br><span class="line">            <span class="keyword">string</span> addCmd = <span class="string">"insert into user(Id,account,password) "</span> +</span><br><span class="line">                <span class="string">"value(1005,\"a777\",555555)"</span>;</span><br><span class="line">            <span class="comment">//用于执行sql命令的对象</span></span><br><span class="line">            MySqlCommand mySqlCommand = <span class="keyword">new</span> MySqlCommand(addCmd, client);</span><br><span class="line">            client.Open();</span><br><span class="line">            <span class="keyword">int</span> result = mySqlCommand.ExecuteNonQuery();</span><br><span class="line">            <span class="keyword">if</span>(result &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"插入成功！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"插入失败！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            client.Close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序运行后控制台打印“插入成功！”</p><p>在数据库里看到成功添加一行数据</p><p><img src="/2020/04/06/C%20Sharp%E4%B8%8EMySql%E4%BA%A4%E4%BA%92/image-20200413205024575.png" alt="image-20200413205024575"></p><h2 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> 字段名称<span class="number">1</span>=新的值<span class="number">2</span>, 字段名称<span class="number">2</span>=新的值<span class="number">2</span>, ... <span class="keyword">where</span> 字段名称=值 <span class="keyword">and</span> 字段名称=值 ...</span><br></pre></td></tr></table></figure><p>要注意SQL操作语句中的条件是否能在数据库中找到相应的数据</p><h3 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h3><p>修改Program.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> MySql.Data.MySqlClient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_MySQL</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Update();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> MySqlConnection <span class="title">Connection</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> sqlInfo = <span class="string">"server=127.0.0.1;"</span> +</span><br><span class="line">                            <span class="string">"port=3306;"</span> +</span><br><span class="line">                            <span class="string">"database=game;"</span> +</span><br><span class="line">                            <span class="string">"user=root;"</span> +</span><br><span class="line">                            <span class="string">"password=12345"</span>;</span><br><span class="line">            MySqlConnection mySqlConnection = <span class="keyword">new</span> MySqlConnection(sqlInfo);</span><br><span class="line">            <span class="keyword">return</span> mySqlConnection;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MySqlConnection client = Connection();<span class="comment">//连接数据库</span></span><br><span class="line">            <span class="comment">//修改操作的sql语句</span></span><br><span class="line">            <span class="keyword">string</span> addCmd = <span class="string">"update user set password=333 where account=\"hongqigong\" "</span>;</span><br><span class="line">            <span class="comment">//用于执行sql命令的对象</span></span><br><span class="line">            MySqlCommand mySqlCommand = <span class="keyword">new</span> MySqlCommand(addCmd, client);</span><br><span class="line">            client.Open();</span><br><span class="line">            <span class="keyword">int</span> result = mySqlCommand.ExecuteNonQuery();</span><br><span class="line">            <span class="keyword">if</span> (result &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"修改成功！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"修改失败！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            client.Close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行程序后控制台打印消息“修改成功！”。</p><p>刷新数据库，表格里的数据也得到正确修改</p><p><img src="/2020/04/06/C%20Sharp%E4%B8%8EMySql%E4%BA%A4%E4%BA%92/image-20200413213640327.png" alt="image-20200413213640327"></p><h2 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表的名称 条件语句 <span class="keyword">where</span> 字段名称=值 <span class="keyword">and</span> 字段名称=值</span><br></pre></td></tr></table></figure><h3 id="例子-2"><a href="#例子-2" class="headerlink" title="例子"></a>例子</h3><p>修改Program.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> MySql.Data.MySqlClient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_MySQL</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Delete();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> MySqlConnection <span class="title">Connection</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> sqlInfo = <span class="string">"server=127.0.0.1;"</span> +</span><br><span class="line">                            <span class="string">"port=3306;"</span> +</span><br><span class="line">                            <span class="string">"database=game;"</span> +</span><br><span class="line">                            <span class="string">"user=root;"</span> +</span><br><span class="line">                            <span class="string">"password=12345"</span>;</span><br><span class="line">            MySqlConnection mySqlConnection = <span class="keyword">new</span> MySqlConnection(sqlInfo);</span><br><span class="line">            <span class="keyword">return</span> mySqlConnection;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 删除数据</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Delete</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MySqlConnection client = Connection();<span class="comment">//连接数据库</span></span><br><span class="line">            <span class="comment">//删除操作的sql语句</span></span><br><span class="line">            <span class="keyword">string</span> addCmd = <span class="string">"delete from user where account=\"hongqigong\" "</span>;</span><br><span class="line">            <span class="comment">//用于执行sql命令的对象</span></span><br><span class="line">            MySqlCommand mySqlCommand = <span class="keyword">new</span> MySqlCommand(addCmd, client);</span><br><span class="line">            client.Open();</span><br><span class="line">            <span class="keyword">int</span> result = mySqlCommand.ExecuteNonQuery();</span><br><span class="line">            <span class="keyword">if</span> (result &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"删除成功！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"删除失败！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            client.Close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序运行后，成功删除game数据库user表格中account为hongqigong的那一条数据。</p><h2 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> *<span class="keyword">from</span> 表名 条件</span><br></pre></td></tr></table></figure><p>MySQLCommand构建的时候传递操作的sql语句，与连接的实例。</p><h3 id="例子-3"><a href="#例子-3" class="headerlink" title="例子"></a>例子</h3><p>修改Program.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> MySql.Data.MySqlClient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_MySQL</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Select();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> MySqlConnection <span class="title">Connection</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> sqlInfo = <span class="string">"server=127.0.0.1;"</span> +</span><br><span class="line">                            <span class="string">"port=3306;"</span> +</span><br><span class="line">                            <span class="string">"database=game;"</span> +</span><br><span class="line">                            <span class="string">"user=root;"</span> +</span><br><span class="line">                            <span class="string">"password=12345"</span>;</span><br><span class="line">            MySqlConnection mySqlConnection = <span class="keyword">new</span> MySqlConnection(sqlInfo);</span><br><span class="line">            <span class="keyword">return</span> mySqlConnection;</span><br><span class="line">        &#125;&#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 查询数据</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Select</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> cmd = <span class="string">"select *from user"</span>;</span><br><span class="line">            MySqlConnection client = Connection();<span class="comment">//连接数据库</span></span><br><span class="line">            <span class="comment">//用于执行sql命令的对象</span></span><br><span class="line">            MySqlCommand mySqlCommand = <span class="keyword">new</span> MySqlCommand(cmd, client);</span><br><span class="line">            client.Open();</span><br><span class="line">            <span class="comment">//执行读取 查询业务 返回的时查询到的数据</span></span><br><span class="line">            MySqlDataReader mySqlData = mySqlCommand.ExecuteReader();</span><br><span class="line">            <span class="comment">//循环读取 mySqlData.Read内部 控制指针每次读取后往下一条数据进行移动</span></span><br><span class="line">            <span class="keyword">while</span> (mySqlData.Read())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">string</span> account = mySqlData.GetString(<span class="string">"account"</span>);</span><br><span class="line">                <span class="keyword">int</span> id = mySqlData.GetInt32(<span class="string">"Id"</span>);</span><br><span class="line">                <span class="keyword">int</span> password = mySqlData.GetInt32(<span class="string">"password"</span>);</span><br><span class="line">                Console.WriteLine(id + <span class="string">" "</span> + account + <span class="string">" "</span> + password);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="string">"读取结束"</span>);</span><br><span class="line">            mySqlData.Close();</span><br><span class="line">            client.Close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行程序后，控制台打印当前从数据库表格里查询到所有数据。</p><p><img src="/2020/04/06/C%20Sharp%E4%B8%8EMySql%E4%BA%A4%E4%BA%92/image-20200413220950808.png" alt="image-20200413220950808"></p><h1 id="实战：账号注册和登录的功能开发"><a href="#实战：账号注册和登录的功能开发" class="headerlink" title="实战：账号注册和登录的功能开发"></a>实战：账号注册和登录的功能开发</h1><p>注册功能：</p><ol><li>接收用户输入的账号和密码</li><li>判断数据库中是否已经存在相同的账号</li><li>如果没有就可以往内部添加</li><li>如果有，就提示用户账号已存在</li></ol><p>登录功能：</p><ol><li>接收用户输入的账号和密码</li><li>判断数据库中是否有匹配的记录</li><li>如果有，告知用户登录成功</li><li>如果没有，告知用户登录失败</li></ol><p>修改Program.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> MySql.Data.MySqlClient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_MySQL</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">string</span> account = <span class="string">""</span>;</span><br><span class="line">                <span class="keyword">int</span> pwd;</span><br><span class="line">                Console.WriteLine(<span class="string">"请输入，1：登录，2：注册"</span>);</span><br><span class="line">                <span class="keyword">int</span> cmd = <span class="keyword">int</span>.Parse(Console.ReadLine());</span><br><span class="line">                <span class="keyword">if</span> (cmd == <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//登录</span></span><br><span class="line">                    Console.WriteLine(<span class="string">"请输入账号："</span>);</span><br><span class="line">                    account = Console.ReadLine();</span><br><span class="line">                    Console.WriteLine(<span class="string">"请输入密码："</span>);</span><br><span class="line">                    pwd = <span class="keyword">int</span>.Parse(Console.ReadLine());</span><br><span class="line">                    <span class="comment">//数据库进行查询，如果存在匹配的记录，告诉用户登录成功</span></span><br><span class="line">                    <span class="keyword">bool</span> result = Select(<span class="string">"where account = \""</span> + account +</span><br><span class="line">                        <span class="string">"\" and "</span> + <span class="string">"password = "</span> + pwd);</span><br><span class="line">                    <span class="keyword">if</span> (result == <span class="literal">true</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Console.WriteLine(<span class="string">"登录成功"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        Console.WriteLine(<span class="string">"登录失败，请检查账号或者密码"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (cmd == <span class="number">2</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//注册</span></span><br><span class="line">                    Console.WriteLine(<span class="string">"请输入账号："</span>);</span><br><span class="line">                    account = Console.ReadLine();</span><br><span class="line">                    Console.WriteLine(<span class="string">"请输入密码："</span>);</span><br><span class="line">                    pwd = <span class="keyword">int</span>.Parse(Console.ReadLine());</span><br><span class="line">                    <span class="comment">//数据库进行查询，如果存在匹配的记录，告诉用户账户已存在</span></span><br><span class="line">                    <span class="keyword">bool</span> result = Select(String.Format(<span class="string">"where account=\"&#123;0&#125;\""</span>, account));</span><br><span class="line">                    <span class="keyword">if</span> (result == <span class="literal">true</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        Console.WriteLine(<span class="string">"账户已存在，注册失败！"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="comment">//如果没有，插入数据。插入成功，通知用户，注册成功。</span></span><br><span class="line">                        <span class="keyword">bool</span> insertResult = Insert(account, pwd);</span><br><span class="line">                        <span class="keyword">if</span> (insertResult)</span><br><span class="line">                        &#123;</span><br><span class="line">                            Console.WriteLine(<span class="string">"注册成功！"</span>);</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            Console.WriteLine(<span class="string">"注册失败，可能已被抢注"</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> MySqlConnection <span class="title">Connection</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> sqlInfo = <span class="string">"server=127.0.0.1;"</span> +</span><br><span class="line">                            <span class="string">"port=3306;"</span> +</span><br><span class="line">                            <span class="string">"database=game;"</span> +</span><br><span class="line">                            <span class="string">"user=root;"</span> +</span><br><span class="line">                            <span class="string">"password=12345"</span>;</span><br><span class="line">            MySqlConnection mySqlConnection = <span class="keyword">new</span> MySqlConnection(sqlInfo);</span><br><span class="line">            <span class="keyword">return</span> mySqlConnection;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 修改数据</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MySqlConnection client = Connection();<span class="comment">//连接数据库</span></span><br><span class="line">            <span class="comment">//修改操作的sql语句</span></span><br><span class="line">            <span class="keyword">string</span> addCmd = <span class="string">"update user set password=333 where account=\"hongqigong\" "</span>;</span><br><span class="line">            <span class="comment">//用于执行sql命令的对象</span></span><br><span class="line">            MySqlCommand mySqlCommand = <span class="keyword">new</span> MySqlCommand(addCmd, client);</span><br><span class="line">            client.Open();</span><br><span class="line">            <span class="keyword">int</span> result = mySqlCommand.ExecuteNonQuery();</span><br><span class="line">            <span class="keyword">if</span> (result &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"修改成功！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"修改失败！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            client.Close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 删除数据</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Delete</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MySqlConnection client = Connection();<span class="comment">//连接数据库</span></span><br><span class="line">            <span class="comment">//删除操作的sql语句</span></span><br><span class="line">            <span class="keyword">string</span> addCmd = <span class="string">"delete from user where account=\"hongqigong\" "</span>;</span><br><span class="line">            <span class="comment">//用于执行sql命令的对象</span></span><br><span class="line">            MySqlCommand mySqlCommand = <span class="keyword">new</span> MySqlCommand(addCmd, client);</span><br><span class="line">            client.Open();</span><br><span class="line">            <span class="keyword">int</span> result = mySqlCommand.ExecuteNonQuery();</span><br><span class="line">            <span class="keyword">if</span> (result &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"删除成功！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"删除失败！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            client.Close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 查询数据</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Select</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> cmd = <span class="string">"select *from user"</span>;</span><br><span class="line">            MySqlConnection client = Connection();<span class="comment">//连接数据库</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//用于执行sql命令的对象</span></span><br><span class="line">            MySqlCommand mySqlCommand = <span class="keyword">new</span> MySqlCommand(cmd, client);</span><br><span class="line">            client.Open();</span><br><span class="line">            <span class="comment">//执行读取 查询业务 返回的时查询到的数据</span></span><br><span class="line">            MySqlDataReader mySqlData = mySqlCommand.ExecuteReader();</span><br><span class="line">            <span class="comment">//循环读取 mySqlData.Read内部 控制指针每次读取后往下一条数据进行移动</span></span><br><span class="line">            <span class="keyword">while</span> (mySqlData.Read())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">string</span> account = mySqlData.GetString(<span class="string">"account"</span>);</span><br><span class="line">                <span class="keyword">int</span> id = mySqlData.GetInt32(<span class="string">"Id"</span>);</span><br><span class="line">                <span class="keyword">int</span> password = mySqlData.GetInt32(<span class="string">"password"</span>);</span><br><span class="line">                Console.WriteLine(id + <span class="string">" "</span> + account + <span class="string">" "</span> + password);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="string">"读取结束"</span>);</span><br><span class="line">            mySqlData.Close();</span><br><span class="line">            client.Close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 查询账号和密码是否有匹配的记录</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="whereSQL"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">Select</span>(<span class="params"><span class="keyword">string</span> whereSQL</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> cmd = <span class="string">"select *from user "</span> + whereSQL;</span><br><span class="line">            MySqlConnection client = Connection();<span class="comment">//连接数据库</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//用于执行sql命令的对象</span></span><br><span class="line">            MySqlCommand mySqlCommand = <span class="keyword">new</span> MySqlCommand(cmd, client);</span><br><span class="line">            client.Open();</span><br><span class="line">            <span class="comment">//执行读取 查询业务 返回的时查询到的数据</span></span><br><span class="line">            MySqlDataReader mySqlData = mySqlCommand.ExecuteReader();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (mySqlData.Read())</span><br><span class="line">            &#123;</span><br><span class="line">                mySqlData.Close();</span><br><span class="line">                client.Close();</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                mySqlData.Close();</span><br><span class="line">                client.Close();</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> id = <span class="number">1000</span>;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 添加数据</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="account"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="pwd"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">Insert</span>(<span class="params"><span class="keyword">string</span> account,<span class="keyword">int</span> pwd</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MySqlConnection client = Connection();<span class="comment">//连接数据库</span></span><br><span class="line">            <span class="comment">//插入操作的sql语句</span></span><br><span class="line">            <span class="keyword">string</span> addCmd = <span class="keyword">string</span>.Format(<span class="string">"insert into user(account,password) "</span> +</span><br><span class="line">                <span class="string">"value(\"&#123;0&#125;\",&#123;1&#125;)"</span>, account, pwd);</span><br><span class="line">            <span class="comment">//用于执行sql命令的对象</span></span><br><span class="line">            MySqlCommand mySqlCommand = <span class="keyword">new</span> MySqlCommand(addCmd, client);</span><br><span class="line"></span><br><span class="line">            client.Open();</span><br><span class="line">            <span class="keyword">int</span> result = mySqlCommand.ExecuteNonQuery();</span><br><span class="line">            client.Close();</span><br><span class="line">            <span class="keyword">if</span> (result &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"插入成功！"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"插入失败！"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C&amp;#35 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UGUI图形交互系统</title>
      <link href="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/"/>
      <url>/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<p>Unity版本：Unity 2019.3.4f1</p><a id="more"></a><h1 id="画布与事件系统"><a href="#画布与事件系统" class="headerlink" title="画布与事件系统"></a>画布与事件系统</h1><h2 id="画布用于承载所有UI元素"><a href="#画布用于承载所有UI元素" class="headerlink" title="画布用于承载所有UI元素"></a>画布用于承载所有UI元素</h2><p>在Hierarchy(层级窗口)空白处右键|UI|Canvas(画布)，创建一个画布，此时事件系统（EventSystem）也会自动被创建。</p><p>我们可以选中画布，创建子项——UI元素比如图片（UI | Image）、按钮(UI | Button)。</p><h2 id="画布有三种模式"><a href="#画布有三种模式" class="headerlink" title="画布有三种模式"></a>画布有三种模式</h2><p>选中画布，在检查器（Inspector窗口）|画布（Canvas）组件|渲染模式（Render Mode）进行设置。</p><ol><li>屏幕空间 - 覆盖（Scream Space - Overlay）</li><li>屏幕空间 - 摄像机（Scream Space - Camera）</li><li>世界空间（World Space）</li></ol><p>在<strong>Scream Space - Overlay</strong>模式下，<strong>所有UI元素都显示在画面最前端</strong>。</p><p>如果我们在画布上放一个Image，颜色设置为黄颜色，主摄像机前放一个白色的Cube。我们无论在场景窗口里怎么放置Cube，都无法挡住画布上的黄颜色Image。</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200404205327401.png" alt="image-20200404205327401"></p><p>当我们将渲染模式设置为<strong>Scream Space - Camera</strong>时，把Main Camera拖拽到Render Mode下方的Render Camera，设置Plane Distance为2。这时我们将Cube移动靠近摄像机，画布上的Image可以被Cube挡住。</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200404211200418.png" alt="image-20200404211200418"></p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200404210645047.png" alt="image-20200404210645047"></p><p>屏幕空间 - 摄像机模式使用较少，适用于比如说在UI前边播放3D粒子效果。</p><p>当我们把渲染模式设置为World Space，画布可以随意移动和改变大小（前两个模式不可以），但只有出现在摄像机视野内才会被渲染到。适用于制作游戏中的敌人血条、立体互动广告牌等。</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200404212143185.png" alt="image-20200404212143185"></p><h2 id="画布的缩放"><a href="#画布的缩放" class="headerlink" title="画布的缩放"></a>画布的缩放</h2><p>画布可以在Canvas Scaler（画布缩放器）组件下设定缩放模式以适配市面上的不同大小的手机屏幕。</p><p>设置UI Sale Mode（画布缩放模式）为Scale with Screen Size（屏幕大小调整）可以设置Reference Resolution（参考分辨率）。</p><h2 id="事件系统"><a href="#事件系统" class="headerlink" title="事件系统"></a>事件系统</h2><p>事件系统（EventSystem）是用于处理各个UI控件交互，如果删除事件系统，或者把画布的Graphic Raycaster组件取消勾选，播放游戏，点击画面中的按钮将毫无反应。</p><h1 id="图像、文本框、按钮、输入框的基本使用"><a href="#图像、文本框、按钮、输入框的基本使用" class="headerlink" title="图像、文本框、按钮、输入框的基本使用"></a>图像、文本框、按钮、输入框的基本使用</h1><p><strong>图像</strong>与<strong>文本框</strong>的主要作用是<strong>展示</strong>，<strong>按钮</strong>与<strong>输入框</strong>的主要作用是<strong>交互</strong>。</p><h2 id="例子（山寨英雄联盟登录界面）"><a href="#例子（山寨英雄联盟登录界面）" class="headerlink" title="例子（山寨英雄联盟登录界面）"></a>例子（山寨英雄联盟登录界面）</h2><p>接下来我们来制作一个英雄联盟登录界面。</p><p>将素材文件夹里UI文件夹拖拽导入到Unity编辑器的Assets文件夹下。</p><p>设置Scene视窗为2D模式，删除Canvas下的所有物体。</p><p>在Canvas下新建一个UI|Image，在其Rect Transform组件下设置Anchor Presets为strech-strech（按住Shift+Alt）。</p><p>选中UI/公用下的所有素材，在Inspector里设置Texture Type为Sprite(2D and UI)，点击Apply。</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200409220746711.png" alt="image-20200409220746711"></p><p>将BG01的Sprite拖拽到Image的Image组件|Source Image。</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200409221207909.png" alt="image-20200409221207909"></p><p>然后用给画布新添一个Image，重命名为BG，Source Image拖入“公用”文件夹下的Logo，点击Set Native Size(设置原生大小)</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200409221505464.png" alt="image-20200409221505464"></p><p>重命名为Logo，然后移动到背景左上角</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200409222853090.png" alt="image-20200409222853090"></p><p>在画布下新建一个UI|Panel（面板），默认和画布大小一致，重命名为UserPanel，将BG和Logo拖拽到UserPanel子项。</p><p>将“UI/用户模块”路径下所有素材设置Texture Type为Sprite(2D and UI)。</p><p>在UserPanel下新建一个Image，重命名为LoginBG，Source Image拖入“UI/用户模块“文件夹下的UserBack，并设置为原生大小。</p><p>在UserPanel下新建一个Image，重命名为Account，Source Image拖入“UI/用户模块“文件夹下的Account，并设置为原生大小。</p><p>通过快捷键Ctrl+D复制一个Account，重命名为PWD，Source Image拖入“UI/用户模块“文件夹下的PWD，并设置为原生大小。</p><p>在UserPanel下新建一个Image，重命名为Line，Source Image拖入“UI/用户模块“文件夹下的Line，并设置为原生大小。</p><p>通过快捷键Ctrl+D复制一个Line，然后将两个Line分别拖入Account、PWD的子项。</p><p>通过上述类似方法，给UserPanel添加按钮：WebsiteBtn、ContactsBtn、RetrievePWDBtn、LoginBtn、RegisterBtn</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200409230946776.png" alt="image-20200409230946776"></p><p>给UserPanel添加UI|Text，设置文本组件如下：</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200410111607619.png" alt="image-20200410111607619"></p><p>给UserPanel添加UI|InputField（文本输入框），摆放到合适位置，调整大小合适，选中其子项Placeholder和Text，在Inspector里修改字体大小（Font Size）为20。</p><p>复制一个InputField，将两个InputField的Image组件|Color设为透明。修改两个文本输入框的Placeholder、Text的Text组件设置。选中密码输入的InputField，可以修改其Input Field组件的Content Type（内容类型）为Password。完成设置后，将账号输入框重命名为UserInputField，将密码输入框重命名为PWDInputField。</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200410115134419.png" alt="image-20200410115134419"></p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200410115238890.png" alt="image-20200410115238890"></p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200410115329852.png" alt="image-20200410115329852"></p><p>为了让UI元素的摆放和美术人员给的效果图一致，我们可以采用如下方法改进：</p><p>给UserPanel的Image组件|Source Image拖入“用户模块”图片，点击Color，设置alpha值为最大（设置不透明度为最大），然后将BG取消勾选。此时我们发现原来的UI元素摆放位置和效果图有明显差距，将UI元素对应摆放到对应的位置将其覆盖即可。</p><p>完成后将UserPanel的图片设置为透明，勾选BG。</p><h1 id="图像、文本框、按钮、输入框的脚本交互"><a href="#图像、文本框、按钮、输入框的脚本交互" class="headerlink" title="图像、文本框、按钮、输入框的脚本交互"></a>图像、文本框、按钮、输入框的脚本交互</h1><p>在Assets文件夹下创建文件夹Scripts用于存放脚本文件。</p><p>创建C#脚本UserPanel.cs，将UserPanel.cs作为组件添加到UserPanel。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">UserPanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Sprite bg;</span><br><span class="line">    InputField userInput;</span><br><span class="line">    InputField pwdInput;</span><br><span class="line">    Button logonBtn;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">//修改图片的精灵</span></span><br><span class="line">        transform.Find(<span class="string">"BG"</span>).GetComponent&lt;Image&gt;().sprite = bg;</span><br><span class="line">        <span class="comment">//初始化</span></span><br><span class="line">        userInput = transform.Find(<span class="string">"UserInputField"</span>).GetComponent&lt;InputField&gt;();</span><br><span class="line">        pwdInput = transform.Find(<span class="string">"PWDInputField"</span>).GetComponent&lt;InputField&gt;();</span><br><span class="line">        logonBtn = transform.Find(<span class="string">"LogonBtn"</span>).GetComponent&lt;Button&gt;();</span><br><span class="line">        <span class="comment">//没有参数的方法</span></span><br><span class="line">        <span class="comment">//绑定事件</span></span><br><span class="line">        logonBtn.onClick.AddListener(loginBtnOnClick);</span><br><span class="line">        transform.Find(<span class="string">"WebsiteBtn"</span>).GetComponent&lt;Button&gt;()</span><br><span class="line">            .onClick.AddListener(WebsiteBtnOnClick);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">WebsiteBtnOnClick</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Application.OpenURL(<span class="string">"https://lol.qq.com/main.shtml"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">loginBtnOnClick</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">string</span> account = userInput.text;</span><br><span class="line">        <span class="keyword">string</span> pwd = pwdInput.text;</span><br><span class="line">        Debug.Log(<span class="string">"账号是："</span> + account);</span><br><span class="line">        Debug.Log(<span class="string">"密码是："</span> + pwd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将“UI/公共”路径下的BG02放入UserPanel的UserPanel脚本组件|bg中，播放游戏，可以看到游戏一启动我们的背景图换成了BG02，在账号输入框和密码输入框输入文本，点击登录按钮，Unity控制台窗口打印账号和密码内容，点击官网按钮，打开英雄联盟官网。</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200410144456902.png" alt="image-20200410144454523"></p><h1 id="勾选框"><a href="#勾选框" class="headerlink" title="勾选框"></a>勾选框</h1><h2 id="单选"><a href="#单选" class="headerlink" title="单选"></a>单选</h2><p>给UserPanel添加UI|Toggle，编辑Toggle下的Label的Text组件|Text。</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200410171601814.png" alt="image-20200410171601814"></p><p>选中Toggle下的Background，调整勾选框致合适大小，选中Background下的Checkmark，将其锚点设置为stretch-stretch。</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200410171834994.png" alt="image-20200410171834994"></p><p>播放游戏，当Toggle被勾选上时，Toggle的Toggle组件下的Is On会被勾选</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200410172021614.png" alt="image-20200410172021614"></p><p>修改我们的UserPanel.cs，添加一个Toggle类型变量toggle，Start方法添加获取Toggle语句。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Toggle toggle;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Start is called before the first frame update</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    toggle = transform.Find(<span class="string">"Toggle"</span>).GetComponent&lt;Toggle&gt;();</span><br></pre></td></tr></table></figure><p>修改loginBtnOnClick方法如下。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">loginBtnOnClick</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(toggle.isOn == <span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span> account = userInput.text;</span><br><span class="line">        <span class="keyword">string</span> pwd = pwdInput.text;</span><br><span class="line">        Debug.Log(<span class="string">"账号是："</span> + account);</span><br><span class="line">        Debug.Log(<span class="string">"密码是："</span> + pwd);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">"请先同意用户隐私协议"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>播放游戏，当勾选框没有被勾选时，点击登录按钮，控制台不会打印我们输入的账号和密码。</p><h2 id="多选一"><a href="#多选一" class="headerlink" title="多选一"></a>多选一</h2><p>我们复制三个Toggle，再新建一个空的GameObject，给空GameObject添加Toggle Group组件，同时选中前边的三个Toggle，将GameObject拽到Inspector的Toggle组件|Group下。</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200410173308051.png" alt="image-20200410173308051"></p><p>播放游戏，这三个勾选框只允许勾选其中一个。</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200410173544673.png" alt="image-20200410173544673"></p><h1 id="滑动条"><a href="#滑动条" class="headerlink" title="滑动条"></a>滑动条</h1><p>我们在Canvas下新建一个Panel，重命名为SettingPanel，设置其Image组件|Color为黑色，不透明度适当提高，使SettingPanel显示很暗。</p><p>在SettingPanel下新建一个UI|Slider，我们可以对它的三个子项进行个性化设置，我在此只修改了大小和颜色。</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200410180311571.png" alt="image-20200410180311571"></p><p>当我们播放游戏时，滑动Slider可以改变其Slider组件|Value的值</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200410180625592.png" alt="image-20200410180625592"></p><p>要在脚本中获取滑动条的值，我们先创建一个SettingPanel.cs，编写代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SettingPanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    Slider slider;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        slider = transform.Find(<span class="string">"Slider"</span>).GetComponent&lt;Slider&gt;();</span><br><span class="line">        slider.onValueChanged.AddListener(OnValueChanged);     </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnValueChanged</span>(<span class="params"><span class="keyword">float</span> <span class="keyword">value</span></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Debug.Log(<span class="string">"当前滑动条的进度："</span> + slider.<span class="keyword">value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后将SettingPanel.cs作为组件添加到SettingPanel。播放游戏，当我们滑动Slider，控制台将实时打印Value的值。</p><h1 id="滚动视图、遮罩、布局组件、内容尺寸适配器"><a href="#滚动视图、遮罩、布局组件、内容尺寸适配器" class="headerlink" title="滚动视图、遮罩、布局组件、内容尺寸适配器"></a>滚动视图、遮罩、布局组件、内容尺寸适配器</h1><h2 id="滚动视图"><a href="#滚动视图" class="headerlink" title="滚动视图"></a>滚动视图</h2><p>给Canvas新建一个UI|Scrow View（滚动视图）,我们可以在Scrow View|Viewport|Content下放入要装的UI元素比如图片。</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200410213421959.png" alt="image-20200410213421959"></p><p>Content是我们要填装UI元素的容器，单独选中Content改变其大小可以展示总面积。如上图，在其中放入Image后还需要适当调整Image的位置。</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200410214338872.png" alt="image-20200410214338872"></p><p>Handle是滑条，要改变滑条背景需要在Scrollbar Horizontal/Vertical里设置。</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200410213852276.png" alt="image-20200410213852276"></p><h2 id="遮罩"><a href="#遮罩" class="headerlink" title="遮罩"></a>遮罩</h2><p>在滚动视图的Viewport里有一个Mask组件，当我们取消勾选后，将显示被遮住的内容。</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200410214533455.png" alt="image-20200410214533455"></p><p>我们给Panel新建一个Image，展示颜色为红色，选中Image再新建一个Image，设置颜色为黄色。调整黄色Image的大小使之盖过红色Image，当我们给父物体红色Image添加Mask组件后，子物体黄色Image超出部分会被父物体的遮罩覆盖。</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200410215829723.png" alt="image-20200410215829723"></p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200410215921935.png" alt="image-20200410215921935"></p><h2 id="水平-垂直-网格布局组件"><a href="#水平-垂直-网格布局组件" class="headerlink" title="水平/垂直/网格布局组件"></a>水平/垂直/网格布局组件</h2><p>给Content添加组件Horizontal/Vertical/Grid Layout Group，将使content内的UI元素全部呈水平/垂直排列，并做针对设置。下图给了一个垂直布局组件效果，同时我也在Padding处设置了边距</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200410221507116.png" alt="image-20200410221507116"></p><h2 id="布局元素"><a href="#布局元素" class="headerlink" title="布局元素"></a>布局元素</h2><p>给Content下的UI元素比如Image添加Layout Element组件后，勾选Ignore Layout，该Image将不受其他三种布局组件影响，可以随意放置。</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200410222931803.png" alt="image-20200410222931803"></p><h2 id="内容尺寸适配器"><a href="#内容尺寸适配器" class="headerlink" title="内容尺寸适配器"></a>内容尺寸适配器</h2><p>给Content添加组件Content Size Fitter，在Content Size Fitter|Vertical Fit选择Preferrd Size，Content的尺寸大小将根据内容布局自动调整。</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200411104056877.png" alt="image-20200411104056877"></p><p>将Panel重命名为HeroPanel，将Content下第一个Image重命名做成预制体Hero，创建脚本HeroPanel.cs，编写代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">HeroPanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> GameObject hero;</span><br><span class="line">    <span class="keyword">public</span> Transform content;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.A))</span><br><span class="line">        &#123;</span><br><span class="line">            GameObject _hero = GameObject.Instantiate(hero);</span><br><span class="line">            _hero.transform.parent = content;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将HeroPanel.cs添加到HeroPanel，将Hero预制体拖入HeroPanel组件|hero，将Content拖入HeroPanel组件|content。播放游戏，当我们删掉Content下大部分Image，然后鼠标在Game窗口里点击一下，按A键克隆Hero，选中Content我们可看到Content随着Hero的增加动态调节尺寸适应内容。</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200411105741808.png" alt="image-20200411105741808"></p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200411105811893.png" alt="image-20200411105811893"></p><p>内容尺寸适配器的另一种常见用法：</p><p>给HeroPanel添加一个Text，给Text添加组件Content Size Fitter，Content Size Fitter下边两个属性全部设置为Preferrd Size。</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200411110920125.png" alt="image-20200411110920125"></p><p>我们输入成段的文本，Content对根据包括换行回车在内的文本内容进行自适应。</p><p><img src="/2020/04/04/UGUI%E5%9B%BE%E5%BD%A2%E7%B3%BB%E7%BB%9F/image-20200411111028122.png" alt="image-20200411111028122"></p><h1 id="矩形变换、UI特效、图片填充"><a href="#矩形变换、UI特效、图片填充" class="headerlink" title="矩形变换、UI特效、图片填充"></a>矩形变换、UI特效、图片填充</h1>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#委托与事件</title>
      <link href="/2020/04/04/C%20Sharp%E5%A7%94%E6%89%98%E4%B8%8E%E4%BA%8B%E4%BB%B6/"/>
      <url>/2020/04/04/C%20Sharp%E5%A7%94%E6%89%98%E4%B8%8E%E4%BA%8B%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>核心作用：把方法当成参数进行传递调用。</p><p>为编程的设计者提供特性。</p><a id="more"></a><p>另一种使用方式：</p><ol><li>定义好委托</li><li>绑定好关联的方法：<ol><li>所有关联的方法都会存储到一个列表，每个方法的内部行为可以不一样。</li><li>可以随时从列表移除</li></ol></li><li>当委托调度：所有关联的方法都可以被执行</li></ol><p><strong>委托最核心的作用：</strong></p><ol><li>解耦各个模块</li><li>避免直接去调度其他模块的方法</li><li>通过注册、移除注册的方式来控制其他模块方法的调度</li></ol><p>举例：</p><p>所用英雄加载进入到战斗场景</p><p>事件中心：开始战斗的事件。</p><p>英雄模块、NPC模块、管理音乐的模块都要监听，这时可以通过委托的方式进行绑定开始战斗的消息，要处理的事件。</p><h1 id="Action"><a href="#Action" class="headerlink" title="Action"></a>Action</h1><p>将方法当成参数调用</p><ul><li><p>定义</p></li><li><p>注册</p></li><li><p>移除</p></li><li><p>调用</p></li></ul><h2 id="例1（方法当作参数传递）"><a href="#例1（方法当作参数传递）" class="headerlink" title="例1（方法当作参数传递）"></a>例1（方法当作参数传递）</h2><p>通过VS 2017创建C#控制台应用项目Project_Action，编辑Program.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Action</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Test(Test2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//执行完之后，我还有一些事情要继续执行，但我暂时不知道要调用哪个方法</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Test</span>(<span class="params">Action action</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"执行完Test方法了。"</span>);</span><br><span class="line">            <span class="keyword">if</span>(action != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                action();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Test2</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"Test2调用了。"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行程序后控制台输出情况如下：</p><p><img src="/2020/04/04/C%20Sharp%E5%A7%94%E6%89%98%E4%B8%8E%E4%BA%8B%E4%BB%B6/image-20200404100945395.png" alt="image-20200404100945395"></p><h2 id="例2（绑定多个方法、传递参数）"><a href="#例2（绑定多个方法、传递参数）" class="headerlink" title="例2（绑定多个方法、传递参数）"></a>例2（绑定多个方法、传递参数）</h2><p>Program.cs：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Action</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> Action mAction;</span><br><span class="line">        <span class="keyword">static</span> Action&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mAction2;</span><br><span class="line">        <span class="comment">//Action不支持返回值</span></span><br><span class="line">        <span class="comment">//Func可以绑定带返回值的方法，并接受返回结果</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//与委托绑定了的方法，在委托调度的时候，就会被执行</span></span><br><span class="line">            mAction += Test2;</span><br><span class="line">            mAction += Test3;</span><br><span class="line">            <span class="comment">//调度Action</span></span><br><span class="line">            mAction();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//不需要调用的时候，从绑定的列表中移除掉</span></span><br><span class="line">            mAction -= Test3;</span><br><span class="line">            mAction();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//传递参数 +=与=的区别 +=适用于多个方法的绑定的 =是直接绑定一个唯一的方法</span></span><br><span class="line">            mAction2 = Test4;</span><br><span class="line">            mAction2(<span class="number">100</span>, <span class="number">300</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Test2</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"Test2调用了。"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Test3</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"Test3调用了"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Test4</span>(<span class="params"><span class="keyword">int</span> a, <span class="keyword">int</span> b</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"result = "</span>+ (a + b));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序执行后：</p><p><img src="/2020/04/04/C%20Sharp%E5%A7%94%E6%89%98%E4%B8%8E%E4%BA%8B%E4%BB%B6/image-20200404104210027.png" alt="image-20200404104210027"></p><h1 id="Func"><a href="#Func" class="headerlink" title="Func"></a>Func</h1><p>支持带有返回值的方法</p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p>通过VS 2017创建C#控制台应用项目Project_Func，编辑Program.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Func</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//Action支持绑定1~16个带参数的方法</span></span><br><span class="line">        <span class="comment">//Func支持绑定1~16个带参数的方法，但这些带参数的方法都必须有返回值</span></span><br><span class="line">        <span class="keyword">static</span> Func&lt;<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">int</span>&gt; func1;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//将方法与委托进行绑定</span></span><br><span class="line">            <span class="comment">//func1 = Test;</span></span><br><span class="line">            func1 += Test;</span><br><span class="line">            func1 += Test2;</span><br><span class="line">            <span class="comment">//将委托调用的时候，实际就是调用绑定的方法</span></span><br><span class="line">            <span class="keyword">int</span> result = func1(<span class="number">100</span>, <span class="number">500</span>);<span class="comment">//实际只返回Test2的结果</span></span><br><span class="line">            Console.WriteLine(<span class="string">"结果1是："</span> + result);</span><br><span class="line">            <span class="comment">//取消委托的注册，实际上就是移除掉绑定的方法</span></span><br><span class="line">            func1 -= Test2;</span><br><span class="line">            <span class="keyword">int</span> result2 = func1(<span class="number">100</span>, <span class="number">500</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">"结果2是："</span> + result2);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//把它当作方法的参数进行传递</span></span><br><span class="line">            <span class="keyword">int</span> result3 = Test3(Test2, <span class="number">100</span>, <span class="number">500</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">"结果3是："</span> + result3);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">Test</span>(<span class="params"><span class="keyword">int</span> a, <span class="keyword">int</span> b</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> a + b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">Test2</span>(<span class="params"><span class="keyword">int</span> a, <span class="keyword">int</span> b</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> a * b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//回调，有时候也不是很方便，这时可以换用Action</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">Test3</span>(<span class="params">Func&lt;<span class="keyword">int</span>,<span class="keyword">int</span>,<span class="keyword">int</span>&gt; callback, <span class="keyword">int</span> a, <span class="keyword">int</span> b</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"Test3..."</span>);</span><br><span class="line">            <span class="keyword">if</span>(callback != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> callback(a, b);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序运行结果：</p><p><img src="/2020/04/04/C%20Sharp%E5%A7%94%E6%89%98%E4%B8%8E%E4%BA%8B%E4%BB%B6/image-20200404112753056.png" alt="image-20200404112753056"></p><h1 id="Delegate"><a href="#Delegate" class="headerlink" title="Delegate"></a>Delegate</h1><p>可带返回值或者不带返回值</p><p>语法相对复杂</p><h2 id="例1（定义、创建、绑定）"><a href="#例1（定义、创建、绑定）" class="headerlink" title="例1（定义、创建、绑定）"></a>例1（定义、创建、绑定）</h2><p>通过VS 2017创建C#控制台应用项目Project_Delegate，编辑Program.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Delegate</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//定义一个委托原型</span></span><br><span class="line">        <span class="function"><span class="keyword">delegate</span> <span class="keyword">void</span> <span class="title">MyDelegate</span>(<span class="params"></span>)</span>;</span><br><span class="line">        <span class="comment">//创建一个事件</span></span><br><span class="line">        <span class="keyword">static</span> MyDelegate delegate1;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//delegate1 = Test1;</span></span><br><span class="line">            delegate1 += Test1;</span><br><span class="line">            delegate1 += Test2;</span><br><span class="line">            delegate1();</span><br><span class="line"></span><br><span class="line">            Console.WriteLine(<span class="string">"第二次调用"</span>);</span><br><span class="line">            delegate1 -= Test1;</span><br><span class="line">            delegate1();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Test1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"Test1!!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Test2</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"Test2!!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序运行结果：</p><p><img src="/2020/04/04/C%20Sharp%E5%A7%94%E6%89%98%E4%B8%8E%E4%BA%8B%E4%BB%B6/image-20200404121732934.png" alt="image-20200404121732934"></p><h2 id="例2（传递参数）"><a href="#例2（传递参数）" class="headerlink" title="例2（传递参数）"></a>例2（传递参数）</h2><p>修改Program.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Delegate</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//定义一个委托原型</span></span><br><span class="line">        <span class="function"><span class="keyword">delegate</span> <span class="keyword">void</span> <span class="title">MyDelegate</span>(<span class="params"></span>)</span>;</span><br><span class="line">        <span class="function"><span class="keyword">delegate</span> <span class="keyword">void</span> <span class="title">MyDelegate2</span>(<span class="params"><span class="keyword">int</span> a, <span class="keyword">int</span> b</span>)</span>;</span><br><span class="line">        <span class="keyword">static</span> MyDelegate2 d2;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Test(Test1);</span><br><span class="line"></span><br><span class="line">            d2 += Test3;</span><br><span class="line">            d2(<span class="number">500</span>, <span class="number">600</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Test</span>(<span class="params">MyDelegate d</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"Test!!"</span>);</span><br><span class="line">            <span class="keyword">if</span>(d != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                d();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Test1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"Test1!!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Test3</span>(<span class="params"><span class="keyword">int</span> a, <span class="keyword">int</span> b</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"Test3: "</span> + (a + b));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序运行结果：</p><p><img src="/2020/04/04/C%20Sharp%E5%A7%94%E6%89%98%E4%B8%8E%E4%BA%8B%E4%BB%B6/image-20200404123123283.png" alt="image-20200404123123283"></p><h1 id="Event"><a href="#Event" class="headerlink" title="Event"></a>Event</h1><p>对Delegate做了调度的限制</p><h2 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h2><p>在项目Project_Delegate添加一个类Player</p><p>Player.cs：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Delegate</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Player</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">delegate</span> <span class="keyword">void</span> <span class="title">myDelegate</span>(<span class="params"></span>)</span>;</span><br><span class="line">        <span class="comment">//事件 实际就是对委托的限制，将委托的调用限制在这个类的内部。</span></span><br><span class="line">        <span class="comment">//在外部只能进行注册、移除操作</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">event</span> myDelegate d1;</span><br><span class="line">        <span class="comment">//委托所有绑定的方法都会存到绑定的列表</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Call</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (d1 != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                d1();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改Program.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Delegate</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Player player = <span class="keyword">new</span> Player();</span><br><span class="line">            player.d1 += Test4;</span><br><span class="line">            <span class="comment">//不能这样写：player.d1();</span></span><br><span class="line">            <span class="comment">//player.Call();</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Test4</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"Test4"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序执行结果：</p><p><img src="/2020/04/04/C%20Sharp%E5%A7%94%E6%89%98%E4%B8%8E%E4%BA%8B%E4%BB%B6/image-20200404131428289.png" alt="image-20200404131428289"></p>]]></content>
      
      
      
        <tags>
            
            <tag> C&amp;#35 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#文件管理</title>
      <link href="/2020/04/03/C%20Sharp%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
      <url>/2020/04/03/C%20Sharp%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<ul><li>目的和作用</li><li>通过File类对文件进行操作</li><li>通过FileStream类操作文件</li><li>通过StreamReader和StreamWriter读写文件</li><li>通过FileInfo类访问文件信息</li><li>通过DirectoryInfo类文件夹进行操作</li></ul><a id="more"></a><h1 id="目的和作用"><a href="#目的和作用" class="headerlink" title="目的和作用"></a>目的和作用</h1><p>为了像word、excel等帮软件一样，可以将一些数据保存到计算机中，方便下次使用。在游戏开发中，比如：</p><ol><li>商城的配置</li><li>关卡的配置</li><li>装备的配置</li><li>技能的配置</li></ol><p>…</p><p>无外乎两个操作：<strong>读取</strong>、<strong>保存</strong></p><h1 id="通过File类对文件进行操作"><a href="#通过File类对文件进行操作" class="headerlink" title="通过File类对文件进行操作"></a>通过File类对文件进行操作</h1><p>首先需要知道读取哪一个文件，即要知道文件所在路径。读取到的内容赋值到string类型变量。</p><p><strong>File.Exists</strong>判断文件是否存在。</p><p><strong>File.ReadAllText</strong>读取文件中所有的内容。</p><p>文本文件如果有<strong>中文</strong>，需要将<strong>编码设置为UTF-8</strong>。读取的时候，我们要传递第二个参数<strong>Encoding.UTF-8</strong>。</p><p><strong>File.AppendAllText</strong>可以把文本追加到我们的目标对象上。</p><p><strong>Environment.NewLine</strong>表示回车换行符。</p><p>“\r\n”表示回车换行符。</p><p><strong>File.WriteAllText</strong>这个操作是将目标对象中的内容替换掉。</p><p>通过<strong>File.Create</strong>创建文件。创建的时候，如果文件已存在，则覆盖已存在文件。</p><p>通过<strong>File.Delete</strong>删除文件。</p><h2 id="例1（文件读取、文件修改）"><a href="#例1（文件读取、文件修改）" class="headerlink" title="例1（文件读取、文件修改）"></a>例1（文件读取、文件修改）</h2><p>准备文本文件如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">英雄ID 名称 类型 价格 拥有法力 法力值 生命值 攻击力</span><br><span class="line">int string int int bool float float float</span><br><span class="line">ID Name Type Price HaveMP HP MP Attack</span><br><span class="line">1001 双持 2 4500 FALSE 2250 0 275</span><br><span class="line">1002 钳工 1 5000 FALSE 2250 0 212</span><br><span class="line">1003 毁法 2 6000 TRUE 2750 0 215</span><br></pre></td></tr></table></figure><p>用VS 2017创建一个C#控制台应用（.NET Framework）项目，取名Project_File。</p><p>编辑Program.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_File</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//转义符 \r \n @\</span></span><br><span class="line">            <span class="keyword">string</span> path = <span class="string">@"E:\Study with me\TextFile\Save.txt"</span>;</span><br><span class="line">            <span class="comment">//判断文件是否存在</span></span><br><span class="line">            <span class="keyword">if</span> (File.Exists(path))</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"找到文件"</span>);</span><br><span class="line">                <span class="comment">//读取文件</span></span><br><span class="line">                <span class="keyword">string</span> text = File.ReadAllText(path, Encoding.UTF8);</span><br><span class="line">                Console.WriteLine(text);</span><br><span class="line">               </span><br><span class="line">                <span class="comment">//写入数据到文件</span></span><br><span class="line">                <span class="keyword">string</span> writeText = <span class="string">"\n"</span>+<span class="string">"1004 影刺 2 9500 FALSE 4000 0 200"</span>;</span><br><span class="line">                <span class="comment">//File.WriteAllText(path, writeText);//新文本取代整个旧文本</span></span><br><span class="line">                File.AppendAllText(path, writeText);<span class="comment">//在原来的文本末尾添加新文本</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"文件不存在"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行程序后，在控制台界面打印原来的文本，打开查看Save.txt发现成功添加了一行新文本</p><p><img src="/2020/04/03/C%20Sharp%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/image-20200403183858701.png" alt="image-20200403183858701"></p><p><img src="/2020/04/03/C%20Sharp%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/image-20200403184037485.png" alt="image-20200403184037485"></p><h2 id="例2（文件创建、文件删除）"><a href="#例2（文件创建、文件删除）" class="headerlink" title="例2（文件创建、文件删除）"></a>例2（文件创建、文件删除）</h2><p>编辑Program.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_File</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> path = <span class="string">@"E:\Study with me\TextFile\Save2.txt"</span>;</span><br><span class="line">            <span class="keyword">if</span> (File.Exists(path))</span><br><span class="line">            &#123;</span><br><span class="line">                File.Delete(path);</span><br><span class="line">                Console.WriteLine(<span class="string">"文件Save2.txt已删除"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                File.Create(path);</span><br><span class="line">                Console.WriteLine(<span class="string">"文件Save2.txt已创建"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行程序后，创建文本文件Save2.txt，再次运行，Save2.txt被删除。</p><h1 id="通过FileStream类操作文件"><a href="#通过FileStream类操作文件" class="headerlink" title="通过FileStream类操作文件"></a>通过FileStream类操作文件</h1><p>构建FileStream对象</p><p>Encoding.UTF-8.GetBytes可以将一个字符串转换为byte[ ]</p><p>Encoding.UTF-8.GetString可以将byte[ ]字节数组转换为string</p><p>写入stream.Write</p><p>读取stream.Read</p><p>关闭操作流 stream.Close</p><p>无论读取还是写入，最终都是需要byte[ ]操作</p><p>Win7系统注意：读取到的文本前边多出一个问号。解决办法：</p><p>使用Notepad++打开记事本，然后转化为UTF-8无BOM格式即可。</p><p>BOM（Byte Order Mark）是为UTF-16和UTF-32准备的，用于标记字节序（byte order）。微软在UTF-8中使用BOM是因为这样可以把UTF-8和ASCII等编码明确区分开，但这样的文件在Windows系统之外的操作系统里会带来问题。[UTF-8]和[带BOM的UTF-8]的区别是有无BOM，即文件开头有没有U+FEFF。</p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p>通过VS 2017创建C#控制台应用项目Project_FileStream，编辑Program.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_FileStream</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> path = <span class="string">@"E:\Study with me\TextFile\Save.txt"</span>;</span><br><span class="line">            FileStream fileStream = <span class="keyword">new</span> FileStream(path, FileMode.OpenOrCreate);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">byte</span>[] data = <span class="keyword">new</span> <span class="keyword">byte</span>[fileStream.Length];</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> length = fileStream.Read(data, <span class="number">0</span>, data.Length);</span><br><span class="line">                <span class="keyword">if</span>(length == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">"读取完毕"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(Encoding.UTF8.GetString(data));</span><br><span class="line">            fileStream.Close();</span><br><span class="line"></span><br><span class="line">            FileStream writeStream = <span class="keyword">new</span> FileStream(path, FileMode.Open);</span><br><span class="line">            <span class="keyword">string</span> text = <span class="string">"\n1005 幻刺 2 6000 TRUE 2350 5000 220"</span>;</span><br><span class="line">            <span class="keyword">byte</span>[] writeData = Encoding.UTF8.GetBytes(text);</span><br><span class="line">            <span class="comment">//写入到文本里</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//要写入的位置进行赋值</span></span><br><span class="line">            <span class="comment">//写入的位置决定了我们写入的数据是从哪里开始</span></span><br><span class="line">            writeStream.Position = writeStream.Length;</span><br><span class="line">            writeStream.Write(writeData, <span class="number">0</span>, writeData.Length);</span><br><span class="line">            writeStream.Close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序运行后，在控制台打印Save.txt里的旧信息，关闭控制台后打开Save.txt发现成功添加了新的一行信息。</p><p><img src="/2020/04/03/C%20Sharp%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/image-20200403200834154.png" alt="image-20200403200834154"></p><p><img src="/2020/04/03/C%20Sharp%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/image-20200403200902781.png" alt="image-20200403200902781"></p><h1 id="通过StreamReader和StreamWriter读写文件"><a href="#通过StreamReader和StreamWriter读写文件" class="headerlink" title="通过StreamReader和StreamWriter读写文件"></a>通过StreamReader和StreamWriter读写文件</h1><p><strong>ReadToEnd</strong>读取之后直接返回字符串。</p><p><strong>Write/WriteLine</strong>也可以直接传递字符串来进行写入。</p><p>在构建StreamWriter实例时，如需追加数据需要传递第二个参数，否则覆盖。填true导致追加，默认false导致覆盖。</p><p><strong>Close</strong>关闭流，释放占用的内存空间。</p><p>如果流没有关闭，然后已经写入了数据，那么再次写入，就是从上次的末尾来进行写入，读取从上次读取到的位置继续读取。</p><h2 id="例1（StreamReader读文件）"><a href="#例1（StreamReader读文件）" class="headerlink" title="例1（StreamReader读文件）"></a>例1（StreamReader读文件）</h2><p>通过VS 2017创建控制台应用项目Project_StreamReaderWrite，编辑Program.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_StreamReaderWrite</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> path = <span class="string">@"E:\Study with me\TextFile\Save.txt"</span>;</span><br><span class="line">            StreamReader streamReader = <span class="keyword">new</span> StreamReader(path);</span><br><span class="line">            Console.WriteLine(streamReader.ReadToEnd());</span><br><span class="line">            streamReader.Close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行程序结果如下：</p><p><img src="/2020/04/03/C%20Sharp%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/image-20200403220142996.png" alt="image-20200403220142996"></p><h2 id="例2（StreamWriter写文件）"><a href="#例2（StreamWriter写文件）" class="headerlink" title="例2（StreamWriter写文件）"></a>例2（StreamWriter写文件）</h2><p>修改Program.cs：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_StreamReaderWrite</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> path = <span class="string">@"E:\Study with me\TextFile\Save.txt"</span>;</span><br><span class="line">            <span class="keyword">string</span> text = <span class="string">"\n1006 双手 1 7000 FALSE 3350 0 230"</span>;</span><br><span class="line">            <span class="comment">//追加数据需要传递第二个参数，否则覆盖。true表示追加，默认false表示覆盖。</span></span><br><span class="line">            StreamWriter streamWriter = <span class="keyword">new</span> StreamWriter(path, <span class="literal">true</span>);</span><br><span class="line">            streamWriter.WriteLine(text);</span><br><span class="line">            streamWriter.Close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行程序后Save.txt成功添加了一行：</p><p><img src="/2020/04/03/C%20Sharp%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/image-20200403220724294.png" alt="image-20200403220724294"></p><h1 id="通过FileInfo类访问文件信息"><a href="#通过FileInfo类访问文件信息" class="headerlink" title="通过FileInfo类访问文件信息"></a>通过FileInfo类访问文件信息</h1><p>封装文件的一些属性：</p><ul><li>完整路径</li><li>名称</li><li>创建日期</li><li>最近访问日期</li><li>大小（byte）</li><li>是否只读</li><li>是否存在</li><li>创建文件</li><li>删除文件</li></ul><p>游戏开发中的应用：</p><ol><li>验证文件是否合法</li><li>比较文件是否与服务器的版本一致（热更新）</li></ol><h2 id="例1（通过FileInfo创建和删除文件）"><a href="#例1（通过FileInfo创建和删除文件）" class="headerlink" title="例1（通过FileInfo创建和删除文件）"></a>例1（通过FileInfo创建和删除文件）</h2><p>用VS 2017新建一个控制台应用项目，取名Project_FileInfo，编辑Program.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_FileInfo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> path = <span class="string">@"E:\Study with me\TextFile\Save3.txt"</span>;</span><br><span class="line">            FileInfo fileInfo = <span class="keyword">new</span> FileInfo(path);</span><br><span class="line">            <span class="keyword">if</span> (fileInfo.Exists)</span><br><span class="line">            &#123;</span><br><span class="line">                fileInfo.Delete();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                fileInfo.Create();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行后，成功在指定目录创建了Save3.txt，再次运行则Save3.txt被删除。</p><h2 id="例2（通过FileInfo读取文件的属性）"><a href="#例2（通过FileInfo读取文件的属性）" class="headerlink" title="例2（通过FileInfo读取文件的属性）"></a>例2（通过FileInfo读取文件的属性）</h2><p>修改Program.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_FileInfo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> path = <span class="string">@"E:\Study with me\TextFile\Save.txt"</span>;</span><br><span class="line">            FileInfo fileInfo = <span class="keyword">new</span> FileInfo(path);</span><br><span class="line">            <span class="keyword">if</span> (fileInfo.Exists)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(fileInfo.FullName);</span><br><span class="line">                Console.WriteLine(fileInfo.CreationTime);</span><br><span class="line">                Console.WriteLine(fileInfo.LastAccessTime);</span><br><span class="line">                Console.WriteLine(fileInfo.IsReadOnly);</span><br><span class="line">                Console.WriteLine(fileInfo.Length);</span><br><span class="line">                Console.WriteLine(fileInfo.Name);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                fileInfo.Create();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行后控制台打印了Save.txt的文件属性，如下图：</p><p><img src="/2020/04/03/C%20Sharp%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/image-20200403222757115.png" alt="image-20200403222757115"></p><h1 id="通过DirectoryInfo类文件夹进行操作"><a href="#通过DirectoryInfo类文件夹进行操作" class="headerlink" title="通过DirectoryInfo类文件夹进行操作"></a>通过DirectoryInfo类文件夹进行操作</h1><ul><li>创建文件夹、子文件夹</li><li>删除空文件夹</li><li>获取文件夹的一些属性</li><li>文件夹是否存在</li></ul><h2 id="例1（通过DirectoryInfo创建与删除文件夹）"><a href="#例1（通过DirectoryInfo创建与删除文件夹）" class="headerlink" title="例1（通过DirectoryInfo创建与删除文件夹）"></a>例1（通过DirectoryInfo创建与删除文件夹）</h2><p>通过VS 2017创建一个控制台应用项目Project_DirectoryInfo，编辑Program.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_DirectoryInfo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> path = <span class="string">@"E:\Study with me\TextFile\Skyrim"</span>;</span><br><span class="line">            DirectoryInfo directoryInfo = <span class="keyword">new</span> DirectoryInfo(path);</span><br><span class="line">            <span class="keyword">if</span> (!directoryInfo.Exists)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"Skyrim件夹不存在"</span>);</span><br><span class="line">                Console.WriteLine(<span class="string">"Skyrim文件夹创建中..."</span>);</span><br><span class="line">                directoryInfo.Create();</span><br><span class="line">                Console.WriteLine(<span class="string">"Skyrim文件夹已创建"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"Skyrim文件夹已存在"</span>);</span><br><span class="line">                Console.WriteLine(<span class="string">"Skyrim文件夹删除中..."</span>);</span><br><span class="line">                directoryInfo.Delete();<span class="comment">//文件夹为空文件夹时删除，否则出现异常</span></span><br><span class="line">                Console.WriteLine(<span class="string">"Skyrim文件夹已删除"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行程序后，在指定路径成功创建了Skyrim文件夹，再次运行删除Skyrim文件夹。</p><h2 id="例2（通过DirectoryInfo访问文件夹属性）"><a href="#例2（通过DirectoryInfo访问文件夹属性）" class="headerlink" title="例2（通过DirectoryInfo访问文件夹属性）"></a>例2（通过DirectoryInfo访问文件夹属性）</h2><p>编辑Program.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_DirectoryInfo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> path = <span class="string">@"E:\Study with me\TextFile\Skyrim"</span>;</span><br><span class="line">            DirectoryInfo directoryInfo = <span class="keyword">new</span> DirectoryInfo(path);</span><br><span class="line">            <span class="keyword">if</span> (!directoryInfo.Exists)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"文件夹不存在"</span>);</span><br><span class="line">                Console.WriteLine(<span class="string">"文件夹创建中..."</span>);</span><br><span class="line">                directoryInfo.Create();</span><br><span class="line">                Console.WriteLine(<span class="string">"文件夹已创建"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(directoryInfo.FullName);</span><br><span class="line">                Console.WriteLine(directoryInfo.Name);</span><br><span class="line">                Console.WriteLine(directoryInfo.CreationTime);</span><br><span class="line">                Console.WriteLine(directoryInfo.LastAccessTime);</span><br><span class="line">                <span class="comment">//访问所在盘符</span></span><br><span class="line">                Console.WriteLine(directoryInfo.Root);</span><br><span class="line">                <span class="comment">//创建子文件夹Data</span></span><br><span class="line">                directoryInfo.CreateSubdirectory(<span class="string">"Data"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行程序后，成功在控制台打印Skyrim文件夹的属性信息，并成功创建了子文件Data。</p><p><img src="/2020/04/03/C%20Sharp%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/image-20200403224939892.png" alt="image-20200403224939892"></p>]]></content>
      
      
      
        <tags>
            
            <tag> C&amp;#35 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#序列化与反序列化</title>
      <link href="/2020/04/01/C%20Sharp%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
      <url>/2020/04/01/C%20Sharp%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p>游戏中的各种配置文件存有很多参数，比如商城的配置文件存各种道具的信息，每个道具又有各种属性如名称、说明、原价、活动、优惠价等。</p><p>但是我们直接从本地文件读取到的数据十一个很长的字符串，要将这些配置信息给我们的代码使用，还需要创建很多变量，然后逐一赋值，十分麻烦。</p><p>另一方面，如果我们要做游戏存档，需要思考要存储的各种变量，在配置文件中应该起什么名称，参数的值如何进行存储。</p><a id="more"></a><p><strong>序列化和反序列化就是用来解决上述麻烦的。</strong></p><ol><li>读取数据之后，不用手动去创建变量，然后逐一赋值。</li><li>存储数据的时候不用关心倒地要怎么组织存储格式，变量名称要如何定义等</li><li>前提：按照“通用的”格式进行序列化和反序列化<ul><li>XML</li><li>JSON</li></ul></li></ol><h2 id="实际应用"><a href="#实际应用" class="headerlink" title="实际应用"></a>实际应用</h2><p>游戏中所有<strong>英雄的数据</strong></p><p>游戏中所有<strong>道具的数据</strong></p><p>游戏中所有<strong>技能的数据</strong></p><p>游戏中所有<strong>XXX的数据</strong></p><p>以上数据在后期调整修改的变化频率较大，所以会通过<strong>配置文件</strong>来进行存储。</p><p>使用<strong>反序列化接口</strong>可以使这些<strong>数据字典</strong>转化为游戏中的一个个<strong>变量</strong></p><p><strong>游戏存档</strong></p><p>适用于单机游戏</p><ol><li><p>使用序列化接口，可以使代码中要存储的数据转化为通用格式的字符串</p></li><li><p>方便玩家下次登录时程序再取到这些数据，然后进行反序列化操作，拿到上一次存储的重要数据</p><ul><li>比如上一个存档中<strong>人物的各种属性</strong></li><li>比如上一个存档中<strong>背包里所有道具的信息</strong></li><li>比如上一个存档中<strong>任务的进度</strong></li></ul></li></ol><h1 id="按XML格式读取和存储"><a href="#按XML格式读取和存储" class="headerlink" title="按XML格式读取和存储"></a>按XML格式读取和存储</h1><ul><li><p>XML指可拓展标记语言</p></li><li><p>XML被设计用于结构化存储以及传输信息</p></li></ul><h2 id="XML语法"><a href="#XML语法" class="headerlink" title="XML语法"></a>XML语法</h2><p>如何描述一个XML文件？</p><p>XML是由若干个标签对构成</p><ul><li>标签可以有对应内容</li><li>标签可以加上属性说明</li></ul><p>XML文档必须有根元素</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">child</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">subchild</span>&gt;</span>...<span class="tag">&lt;/<span class="name">subchild</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><p>所有XML元素都必须有关闭标签</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is a paragraph<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>XML标签对大小写敏感</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Message</span>&gt;</span>这是错误的<span class="tag">&lt;/<span class="name">message</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">message</span>&gt;</span>这是正确的<span class="tag">&lt;/<span class="name">message</span>&gt;</span></span><br></pre></td></tr></table></figure><p>XML必须正确嵌套</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">错误例子：</span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">i</span>&gt;</span>This text is bold and italic<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">正确例子：</span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">i</span>&gt;</span>This text is bold and italic<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br></pre></td></tr></table></figure><p>XML的属性值须加引号</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">错误例子：</span><br><span class="line"><span class="tag">&lt;<span class="name">note</span> <span class="attr">date</span>=<span class="string">08/08/2008</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">to</span>&gt;</span>George<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">from</span>&gt;</span>John<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br><span class="line">正确例子：</span><br><span class="line"><span class="tag">&lt;<span class="name">note</span> <span class="attr">date</span>=<span class="string">"08/08/2008"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">to</span>&gt;</span>George<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">from</span>&gt;</span>John<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="序列化与反序列化"><a href="#序列化与反序列化" class="headerlink" title="序列化与反序列化"></a>序列化与反序列化</h2><p>XML序列化：将实体类转化为XML文档</p><p>XML反序列化：将XML文档转化为实体类</p><h3 id="例子（XML反序列化）"><a href="#例子（XML反序列化）" class="headerlink" title="例子（XML反序列化）"></a>例子（XML反序列化）</h3><p>通过VS2017创建一个C#控制台应用（.NET Framework）项目，取名Project_XML。</p><p>给项目添加两个类，分别取名为SkillConfig、Skill</p><p>Program.cs内容如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Xml.Serialization;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_XML</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            XMLDeserialize();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">XMLDeserialize</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> path = <span class="string">@"E:\Study with me\XMLfile\SkillConfig.xml"</span>;</span><br><span class="line">            XmlSerializer xmlSerializer = <span class="keyword">new</span> XmlSerializer(<span class="keyword">typeof</span>(SkillConfig));</span><br><span class="line"></span><br><span class="line">            <span class="comment">//先读取到文件</span></span><br><span class="line">            FileStream fileStream = <span class="keyword">new</span> FileStream(path, FileMode.Open);</span><br><span class="line">            SkillConfig skillConfig = (SkillConfig)xmlSerializer.Deserialize(fileStream);</span><br><span class="line">            fileStream.Close();</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i &lt; skillConfig.SkillList.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(skillConfig.SkillList[i].id + <span class="string">" "</span></span><br><span class="line">                    + skillConfig.SkillList[i].name + <span class="string">" "</span></span><br><span class="line">                    + skillConfig.SkillList[i].damage);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SkillConfig.cs内容如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Xml.Serialization;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_XML</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">XmlRootAttribute(<span class="meta-string">"SkillConfig"</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SkillConfig</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> List&lt;Skill&gt; SkillList = <span class="keyword">new</span> List&lt;Skill&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Skill.cs内容如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_XML</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Skill</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> id;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> name;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> damage;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SkillConfig.xml内容如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">SkillConfig</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">SkillList</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Skill</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>001<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>连牙杀<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">damage</span>&gt;</span>50000<span class="tag">&lt;/<span class="name">damage</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Skill</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Skill</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>002<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>虚空斩<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">damage</span>&gt;</span>60000<span class="tag">&lt;/<span class="name">damage</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Skill</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Skill</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>003<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>步月流星<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">damage</span>&gt;</span>70000<span class="tag">&lt;/<span class="name">damage</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Skill</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">SkillList</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">SkillConfig</span>&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果如下：</p><p><img src="/2020/04/01/C%20Sharp%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20200401225826422.png" alt="image-20200401225826422"></p><h3 id="例子（XML序列化）"><a href="#例子（XML序列化）" class="headerlink" title="例子（XML序列化）"></a>例子（XML序列化）</h3><p>Program.cs修改后如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Xml.Serialization;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_XML</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            XMLSerialize();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">XMLSerialize</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            SkillConfig skillConfig = <span class="keyword">new</span> SkillConfig();</span><br><span class="line"></span><br><span class="line">            Skill skillOne = <span class="keyword">new</span> Skill();</span><br><span class="line">            skillOne.id = <span class="number">101</span>;</span><br><span class="line">            skillOne.name = <span class="string">"破天"</span>;</span><br><span class="line">            skillOne.damage = <span class="number">10000</span>;</span><br><span class="line"></span><br><span class="line">            Skill skillTwo = <span class="keyword">new</span> Skill();</span><br><span class="line">            skillTwo.id = <span class="number">102</span>;</span><br><span class="line">            skillTwo.name = <span class="string">"流星"</span>;</span><br><span class="line">            skillTwo.damage = <span class="number">20000</span>;</span><br><span class="line"></span><br><span class="line">            Skill skillThree = <span class="keyword">new</span> Skill();</span><br><span class="line">            skillThree.id = <span class="number">103</span>;</span><br><span class="line">            skillThree.name = <span class="string">"残月"</span>;</span><br><span class="line">            skillThree.damage = <span class="number">30000</span>;</span><br><span class="line"></span><br><span class="line">            skillConfig.SkillList.Add(skillOne);</span><br><span class="line">            skillConfig.SkillList.Add(skillTwo);</span><br><span class="line">            skillConfig.SkillList.Add(skillThree);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//将以上实体类进行序列化</span></span><br><span class="line">            <span class="comment">//第一步：确定XML文档路径</span></span><br><span class="line">            <span class="keyword">string</span> path = <span class="string">@"E:\Study with me\XMLfile\SkillConfig3.xml"</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//第二步：构建用于序列化的对象</span></span><br><span class="line">            XmlSerializer xmlSerializer = <span class="keyword">new</span> XmlSerializer(<span class="keyword">typeof</span>(SkillConfig));</span><br><span class="line"></span><br><span class="line">            <span class="comment">//第三步：构建文件流，写入数据</span></span><br><span class="line">            StreamWriter streamWriter = <span class="keyword">new</span> StreamWriter(path, <span class="literal">false</span>, Encoding.UTF8);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//可选步骤：自定义命名空间</span></span><br><span class="line">            <span class="comment">//不建议自定义命名空间，因为没太大必要</span></span><br><span class="line">            XmlSerializerNamespaces namespaces = <span class="keyword">new</span> XmlSerializerNamespaces();</span><br><span class="line">            namespaces.Add(<span class="string">""</span>, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//第四步：调用序列化对象的序列化的接口</span></span><br><span class="line">            <span class="comment">//xmlSerializer.Serialize(streamWriter, skillConfig);</span></span><br><span class="line">            xmlSerializer.Serialize(streamWriter, skillConfig, namespaces);</span><br><span class="line">            streamWriter.Close();</span><br><span class="line">            Console.WriteLine(<span class="string">"已经序列化完毕"</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序运行后生成SkillConfig3.xml文档如下：</p><p><img src="/2020/04/01/C%20Sharp%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20200402115338206.png" alt="image-20200402115338206"></p><h3 id="XML序列化和反序列化例子（带标签属性）"><a href="#XML序列化和反序列化例子（带标签属性）" class="headerlink" title="XML序列化和反序列化例子（带标签属性）"></a>XML序列化和反序列化例子（带标签属性）</h3><p>Program.cs经修改后：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Xml.Serialization;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_XML</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            XMLDeserialize();</span><br><span class="line">            <span class="comment">//XMLSerialize();</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">XMLDeserialize</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//string path = @"E:\Study with me\XMLfile\SkillConfig.xml";</span></span><br><span class="line">            <span class="keyword">string</span> path = <span class="string">@"E:\Study with me\XMLfile\SkillConfig4.xml"</span>;</span><br><span class="line">            XmlSerializer xmlSerializer = <span class="keyword">new</span> XmlSerializer(<span class="keyword">typeof</span>(SkillConfig));</span><br><span class="line"></span><br><span class="line">            <span class="comment">//先读取到文件</span></span><br><span class="line">            FileStream fileStream = <span class="keyword">new</span> FileStream(path, FileMode.Open);</span><br><span class="line">            SkillConfig skillConfig = (SkillConfig)xmlSerializer.Deserialize(fileStream);</span><br><span class="line">            fileStream.Close();</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i &lt; skillConfig.SkillList.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(skillConfig.SkillList[i].id + <span class="string">" "</span></span><br><span class="line">                    + skillConfig.SkillList[i].name.attackType + <span class="string">" "</span></span><br><span class="line">                    + skillConfig.SkillList[i].name.content + <span class="string">" "</span></span><br><span class="line">                    + skillConfig.SkillList[i].damage);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">XMLSerialize</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            SkillConfig skillConfig = <span class="keyword">new</span> SkillConfig();</span><br><span class="line"></span><br><span class="line">            Skill skillOne = <span class="keyword">new</span> Skill();</span><br><span class="line">            skillOne.id = <span class="number">101</span>;</span><br><span class="line">            <span class="comment">//skillOne.name = "破天";</span></span><br><span class="line">            skillOne.name = <span class="keyword">new</span> Name();</span><br><span class="line">            skillOne.name.attackType = <span class="string">"近战"</span>;</span><br><span class="line">            skillOne.name.content = <span class="string">"破天"</span>;</span><br><span class="line">            skillOne.damage = <span class="number">10000</span>;</span><br><span class="line"></span><br><span class="line">            Skill skillTwo = <span class="keyword">new</span> Skill();</span><br><span class="line">            skillTwo.id = <span class="number">102</span>;</span><br><span class="line">            <span class="comment">//skillTwo.name = "流星";</span></span><br><span class="line">            skillTwo.name = <span class="keyword">new</span> Name();</span><br><span class="line">            skillTwo.name.attackType = <span class="string">"近战"</span>;</span><br><span class="line">            skillTwo.name.content = <span class="string">"流星"</span>;</span><br><span class="line">            skillTwo.damage = <span class="number">20000</span>;</span><br><span class="line"></span><br><span class="line">            Skill skillThree = <span class="keyword">new</span> Skill();</span><br><span class="line">            skillThree.id = <span class="number">103</span>;</span><br><span class="line">            <span class="comment">//skillThree.name = "残月";</span></span><br><span class="line">            skillThree.name = <span class="keyword">new</span> Name();</span><br><span class="line">            skillThree.name.attackType = <span class="string">"近战"</span>;</span><br><span class="line">            skillThree.name.content = <span class="string">"残月"</span>;</span><br><span class="line">            skillThree.damage = <span class="number">30000</span>;</span><br><span class="line"></span><br><span class="line">            skillConfig.SkillList.Add(skillOne);</span><br><span class="line">            skillConfig.SkillList.Add(skillTwo);</span><br><span class="line">            skillConfig.SkillList.Add(skillThree);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//将以上实体类进行序列化</span></span><br><span class="line">            <span class="comment">//第一步：确定XML文档路径</span></span><br><span class="line">            <span class="keyword">string</span> path = <span class="string">@"E:\Study with me\XMLfile\SkillConfig4.xml"</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//第二步：构建用于序列化的对象</span></span><br><span class="line">            XmlSerializer xmlSerializer = <span class="keyword">new</span> XmlSerializer(<span class="keyword">typeof</span>(SkillConfig));</span><br><span class="line"></span><br><span class="line">            <span class="comment">//第三步：构建文件流，写入数据</span></span><br><span class="line">            StreamWriter streamWriter = <span class="keyword">new</span> StreamWriter(path, <span class="literal">false</span>, Encoding.UTF8);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//可选：命名空间</span></span><br><span class="line">            <span class="comment">//不建议自定义命名空间，因为没太大必要</span></span><br><span class="line">            XmlSerializerNamespaces namespaces = <span class="keyword">new</span> XmlSerializerNamespaces();</span><br><span class="line">            namespaces.Add(<span class="string">""</span>, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//第四步：调用序列化对象的序列化的接口</span></span><br><span class="line">            <span class="comment">//xmlSerializer.Serialize(streamWriter, skillConfig);</span></span><br><span class="line">            xmlSerializer.Serialize(streamWriter, skillConfig, namespaces);</span><br><span class="line">            streamWriter.Close();</span><br><span class="line">            Console.WriteLine(<span class="string">"已经序列化完毕"</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Skill.cs经修改后：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Xml.Serialization;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_XML</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Skill</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> id;</span><br><span class="line">        <span class="comment">//public string name;</span></span><br><span class="line">        <span class="keyword">public</span> Name name;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> damage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Name</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//因为要对name进行拓展，加上属性</span></span><br><span class="line">        [<span class="meta">XmlAttribute(<span class="meta-string">"attackType"</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> attackType;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">XmlText</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> content;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="成员标记"><a href="#成员标记" class="headerlink" title="成员标记"></a>成员标记</h2><p>[XmlRootAttribute]：对根节点的描述，在类声明中使用</p><p>[XmlType]：对节点描述，在类声明中使用</p><p>[XmlElement]：节点下内部节点描述，如果对数组标识，是对数组单元描述</p><p>[XmlAttribute]：节点下内部属性描述</p><p>[XmlArrayItem]：数组单元项描述</p><p>[XmlArray]：数组描述</p><p>[XmlIgnore]：使该项不序列化</p><p>[XmlText]：做为节点的text文本输出</p><h1 id="按Json的方式进行读取和存储"><a href="#按Json的方式进行读取和存储" class="headerlink" title="按Json的方式进行读取和存储"></a>按Json的方式进行读取和存储</h1><h2 id="Json是什么？"><a href="#Json是什么？" class="headerlink" title="Json是什么？"></a>Json是什么？</h2><p>格式：</p><ul><li><p>键值对</p></li><li><p>数据由逗号分隔</p></li><li><p>大括号保存对象</p></li><li><p>键值对中的值可以是一个class</p></li><li><p>值如果是string，需要加上双引号，如果不是则不需要</p></li><li><p>如果值是数组，那么需要用中括号括起来</p></li></ul><p>Json的体积相比XML更小，在客户端和服务端的传输的过程中消耗资源更低，传输速度就会更快</p><h2 id="怎样使用它"><a href="#怎样使用它" class="headerlink" title="怎样使用它"></a>怎样使用它</h2><p>序列化：将实体类转化为Json文档</p><p>反序列化：将Json文档转化为实体类</p><p>如果用于网络传输</p><p>string -&gt; 转化byte[ ]</p><h2 id="例子（反序列化）"><a href="#例子（反序列化）" class="headerlink" title="例子（反序列化）"></a>例子（反序列化）</h2><p>准备Skill.json文件如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"name"</span>: <span class="string">"破天"</span>,</span><br><span class="line"><span class="attr">"id"</span>:<span class="number">1001</span>,</span><br><span class="line"><span class="attr">"damage"</span>:<span class="number">800</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用VS 2017创建一个C#控制台应用（.NET Framework）项目，取名为Project_Json。</p><p>给项目添加一个类，取名Skill。</p><p>在VS2017的解决方案资源管理器窗口的【引用】右键，选择【添加引用】，在弹出的窗口左边选择【浏览】,点击下方浏览按钮，导入文件<strong>LitJson.dll</strong>。（LitJson.dll可以在网上搜索下载）</p><p><img src="/2020/04/01/C%20Sharp%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20200402170506743.png" alt="image-20200402170506743"></p><p>编辑Skill.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Json</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Skill</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> id;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> name;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> damage;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编辑Program.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> LitJson;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Json</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            ToObject();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//反序列化</span></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ToObject</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//1.确定读取的Json文档的路径</span></span><br><span class="line">            <span class="keyword">string</span> path = <span class="string">@"E:\Study with me\JsonFile\Skill.json"</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//2.构建读取文件的流</span></span><br><span class="line">            StreamReader streamReader = <span class="keyword">new</span> StreamReader(path);</span><br><span class="line">            <span class="keyword">string</span> text = streamReader.ReadToEnd();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//3.调用反序列化的API</span></span><br><span class="line">            Skill skill = JsonMapper.ToObject&lt;Skill&gt;(text);</span><br><span class="line"></span><br><span class="line">            Console.WriteLine(skill.id + <span class="string">" "</span></span><br><span class="line">                + skill.name + <span class="string">" "</span></span><br><span class="line">                + skill.damage);</span><br><span class="line">            streamReader.Close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行程序结果如下：</p><p><img src="/2020/04/01/C%20Sharp%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20200402170856833.png" alt="image-20200402170856833"></p><h2 id="例子（序列化）"><a href="#例子（序列化）" class="headerlink" title="例子（序列化）"></a>例子（序列化）</h2><p>Program.cs修改后如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> LitJson;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Json</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            ToJson();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//序列化</span></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ToJson</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//1.构建需要进行保存的数据</span></span><br><span class="line">            Skill skill = <span class="keyword">new</span> Skill();</span><br><span class="line">            skill.id = <span class="number">1001</span>;</span><br><span class="line">            skill.name = <span class="string">"末日"</span>;</span><br><span class="line">            skill.damage = <span class="number">99999</span>;</span><br><span class="line">            <span class="comment">//2.确定保存路径</span></span><br><span class="line">            <span class="keyword">string</span> path = <span class="string">@"E:\Study with me\JsonFile\Skill2.json"</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//3.通过序列化的API获取到需要写入的文本</span></span><br><span class="line">            <span class="keyword">string</span> text = JsonMapper.ToJson(skill);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//4.通过文件流进行写入操作</span></span><br><span class="line">            StreamWriter streamWriter = <span class="keyword">new</span> StreamWriter(path);</span><br><span class="line">            streamWriter.Write(text);</span><br><span class="line">            streamWriter.Close();</span><br><span class="line">            Console.WriteLine(<span class="string">"Json文档保存成功"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序运行结果：</p><p><img src="/2020/04/01/C%20Sharp%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20200402172427752.png" alt="image-20200402172427752"></p><h1 id="案例：开发一个角色的背包"><a href="#案例：开发一个角色的背包" class="headerlink" title="案例：开发一个角色的背包"></a>案例：开发一个角色的背包</h1><h2 id="分三步开发"><a href="#分三步开发" class="headerlink" title="分三步开发"></a>分三步开发</h2><ol><li><p>写一个辅助类JsonHelper：</p><p>提供序列化接口和反序列化接口，可以复用。</p></li><li><p>创建实体类和本地的Json文件</p></li><li><p>写管理类，提供<strong>增删改查</strong>功能。（内部维护的一个数据结构，通常为字典）</p></li></ol><p>准备一个MyProp.json如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"props"</span>:[</span><br><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"滴石"</span>,<span class="attr">"id"</span>:<span class="number">1001</span>,<span class="attr">"use"</span>:<span class="literal">false</span>&#125;,</span><br><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"辉滴石"</span>,<span class="attr">"id"</span>:<span class="number">1002</span>,<span class="attr">"use"</span>:<span class="literal">false</span>&#125;,</span><br><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"古老的辉滴石"</span>,<span class="attr">"id"</span>:<span class="number">1003</span>,<span class="attr">"use"</span>:<span class="literal">false</span>&#125;,</span><br><span class="line">&#123;<span class="attr">"name"</span>:<span class="string">"元素瓶"</span>,<span class="attr">"id"</span>:<span class="number">1004</span>,<span class="attr">"use"</span>:<span class="literal">false</span>&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用VS 2017创建个控制台应用项目，取名为Project_Warehouse。</p><p>添加引用LitJson.dll。<strong>（注意：如果是添加最近的引用，需要勾选后再点击确定）</strong></p><p>添加三个类，分别取名为MyProp，MyPropManager，JsonHelper。</p><p>MyProp.cs内容如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Warehouse</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">MyProp</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//我的道具列表</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Prop&gt; props = <span class="keyword">new</span> List&lt;Prop&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 道具的实体类</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Prop</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> id;<span class="comment">//道具ID</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> name;<span class="comment">//道具名称</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> use;<span class="comment">//是否使用过</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyPropManager.cs内容如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Warehouse</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">MyPropManager</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> Dictionary&lt;<span class="keyword">int</span>, Prop&gt; props = <span class="keyword">new</span> Dictionary&lt;<span class="keyword">int</span>, Prop&gt;();</span><br><span class="line">        <span class="keyword">public</span> MyProp myProp = <span class="keyword">new</span> MyProp();</span><br><span class="line">        <span class="keyword">string</span> path = <span class="string">@"E:\Study with me\JsonFile\MyProp.json"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Init</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            myProp = JsonHelper.ToObject&lt;MyProp&gt;(path);</span><br><span class="line">            <span class="comment">//通过ID查找一个物体...</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; myProp.props.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (!props.ContainsKey(myProp.props[i].id))</span><br><span class="line">                &#123;</span><br><span class="line">                    props.Add(myProp.props[i].id, myProp.props[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="string">"初始化结束"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">public</span> List&lt;Prop&gt; <span class="title">GetAll</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> myProp.props;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">public</span> Prop <span class="title">Get</span>(<span class="params"><span class="keyword">int</span> id</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!props.ContainsKey(id))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> props[id];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="title">Add</span>(<span class="params">Prop prop</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!props.ContainsKey(prop.id))</span><br><span class="line">            &#123;</span><br><span class="line">                props.Add(prop.id, prop);</span><br><span class="line">                myProp.props = props.Values.ToList();</span><br><span class="line">                JsonHelper.ToJson&lt;MyProp&gt;(myProp, path);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="title">Remove</span>(<span class="params"><span class="keyword">int</span> id</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (props.ContainsKey(id))</span><br><span class="line">            &#123;</span><br><span class="line">                props.Remove(id);</span><br><span class="line">                myProp.props = props.Values.ToList();</span><br><span class="line">                JsonHelper.ToJson&lt;MyProp&gt;(myProp, path);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="title">Update</span>(<span class="params"><span class="keyword">int</span> id, <span class="keyword">bool</span> use</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (props.ContainsKey(id))</span><br><span class="line">            &#123;</span><br><span class="line">                props[id].use = use;</span><br><span class="line">                myProp.props = props.Values.ToList();</span><br><span class="line">                JsonHelper.ToJson&lt;MyProp&gt;(myProp, path);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JsonHelper.cs内容如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> LitJson;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Warehouse</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">JsonHelper</span></span><br><span class="line">    &#123;   <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 序列化</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;typeparam name="T"&gt;</span>类型<span class="doctag">&lt;/typeparam&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="o"&gt;</span>要序列化的对象<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="path"&gt;</span>路径<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span> ToJson&lt;T&gt;(T o, <span class="keyword">string</span> path)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">string</span> text = JsonMapper.ToJson(o);</span><br><span class="line">            StreamWriter streamWriter = <span class="keyword">new</span> StreamWriter(path, <span class="literal">false</span>, Encoding.UTF8);</span><br><span class="line">            streamWriter.Write(text);</span><br><span class="line">            streamWriter.Close();</span><br><span class="line">            <span class="keyword">return</span> text;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 反序列化</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;typeparam name="T"&gt;</span>类型<span class="doctag">&lt;/typeparam&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="path"&gt;</span>路径<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> T ToObject&lt;T&gt;(<span class="keyword">string</span> path)</span><br><span class="line">        &#123;</span><br><span class="line">            StreamReader streamReader = <span class="keyword">new</span> StreamReader(path);</span><br><span class="line">            <span class="keyword">string</span> text = streamReader.ReadToEnd();</span><br><span class="line">            streamReader.Close();</span><br><span class="line">            T o = JsonMapper.ToObject&lt;T&gt;(text);</span><br><span class="line">            <span class="keyword">return</span> o;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Program.cs内容：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Warehouse</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MyPropManager myPropManager = <span class="keyword">new</span> MyPropManager();</span><br><span class="line">            myPropManager.Init();<span class="comment">//初始化</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//查找所有道具</span></span><br><span class="line">            <span class="comment">//List&lt;Prop&gt; props = myPropManager.GetAll();</span></span><br><span class="line">            <span class="comment">//for (int i = 0; i &lt; props.Count; i++)</span></span><br><span class="line">            <span class="comment">//&#123;</span></span><br><span class="line">            <span class="comment">//    Console.WriteLine(props[i].id + " "</span></span><br><span class="line">            <span class="comment">//        + props[i].name + " "</span></span><br><span class="line">            <span class="comment">//        + props[i].use);</span></span><br><span class="line">            <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//查找单个道具</span></span><br><span class="line">            <span class="comment">//Prop prop = myPropManager.Get(1001);</span></span><br><span class="line">            <span class="comment">//Console.WriteLine("1001: " + prop.name);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//添加物品</span></span><br><span class="line">            <span class="comment">//Prop prop = new Prop() &#123; id = 1005, name = "飞镖", use = false &#125;;</span></span><br><span class="line">            <span class="comment">//myPropManager.Add(prop);</span></span><br><span class="line">            <span class="comment">//Console.WriteLine("添加【" + prop.name +"】成功");</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//删除物品</span></span><br><span class="line">            <span class="comment">//myPropManager.Remove(1005);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//更新物品属性</span></span><br><span class="line">            <span class="comment">//myPropManager.Update(1002, true);</span></span><br><span class="line">            <span class="comment">//Console.WriteLine("更新属性成功");</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li><p>所有业务模块基本均有增删查改构成</p></li><li><p>模块独立化，比如本例中JsonHelper类的出现，能少写很多条调用序列化和反序列化的代码。</p></li><li><p>所有的功能需求都是数学问题，即数学建模。</p><ul><li><p>构建一个类，包含背包的信息无非是各种字段/属性。</p></li><li><p>背包的业务：增加物品、删除物品、修改物品、查找物品。</p></li><li><p>初始化一定要做，否则容易出问题。</p></li></ul></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> C&amp;#35 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#多线程与异步操作</title>
      <link href="/2020/03/31/C%20Sharp%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8E%E5%BC%82%E6%AD%A5%E6%93%8D%E4%BD%9C/"/>
      <url>/2020/03/31/C%20Sharp%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8E%E5%BC%82%E6%AD%A5%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>什么是线程？为什么使用线程？线程的使用、线程池、任务、委托异步执行、Thread类、Task类</p><a id="more"></a><h1 id="一、线程基础"><a href="#一、线程基础" class="headerlink" title="一、线程基础"></a>一、线程基础</h1><h2 id="为什么使用线程？"><a href="#为什么使用线程？" class="headerlink" title="为什么使用线程？"></a>为什么使用线程？</h2><ol><li>将某段代码同其他低吗隔离，提高应用程序可靠性。</li><li>简化代码。</li><li>实现并发执行</li></ol><p><strong>什么是并发执行？</strong></p><p>…</p><h2 id="什么是线程？"><a href="#什么是线程？" class="headerlink" title="什么是线程？"></a>什么是线程？</h2><h3 id="1-进程与线程"><a href="#1-进程与线程" class="headerlink" title="1. 进程与线程"></a>1. 进程与线程</h3><p><strong>进程</strong>是<strong>操作系统执行程序的基本单位</strong>，<strong>拥有应用程序的资源</strong>。</p><p>（例：一个应用程序的一次运行。）</p><p>进程包含线程，<strong>进程的资源被线程共享</strong>，<strong>线程不拥有资源</strong>。</p><p>（一个进程包含很多线程。）</p><h3 id="2-前台线程和后台线程"><a href="#2-前台线程和后台线程" class="headerlink" title="2. 前台线程和后台线程"></a>2. 前台线程和后台线程</h3><p>通过<strong>Thread类新建线程</strong>默认为<strong>前台线程</strong>。<strong>当所有前台线程关闭时，所有的后台线程也会被直接终止，不会抛出异常</strong>。</p><h3 id="3-挂起（Suspend）和唤醒（Resume）"><a href="#3-挂起（Suspend）和唤醒（Resume）" class="headerlink" title="3. 挂起（Suspend）和唤醒（Resume）"></a>3. 挂起（Suspend）和唤醒（Resume）</h3><p>由于线程的执行顺序和程序的执行情况不可预知所以使用挂起和唤醒容易发生死锁的情况，在实际应用中应该尽量少用。</p><h3 id="4-阻塞线程"><a href="#4-阻塞线程" class="headerlink" title="4. 阻塞线程"></a>4. 阻塞线程</h3><p>Join，阻塞调用线程，直到该线程终止。</p><h3 id="5-终止线程"><a href="#5-终止线程" class="headerlink" title="5. 终止线程"></a>5. 终止线程</h3><p>Abort：抛出ThreadAbortException异常让线程终止，终止后的线程不可以唤醒。</p><p>Interrupt：抛出ThreadInterruptException异常让线程终止，通过捕获异常可以继续执行。</p><h3 id="6-线程优先级"><a href="#6-线程优先级" class="headerlink" title="6. 线程优先级"></a>6. 线程优先级</h3><p>AbortNormal、BelowNormal、Highest、Lowest、Normal，默认为Normal。</p><h2 id="线程的使用"><a href="#线程的使用" class="headerlink" title="线程的使用"></a>线程的使用</h2><p>线程函数通过委托传递，可以不带参数，也可以带参数（只能有一个参数），可以用一个类或结构体封装参数。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">TheardTest</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Thread t = <span class="keyword">new</span> Thread(Run);</span><br><span class="line">            t.Start();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Run</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"aaa"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="线程池"><a href="#线程池" class="headerlink" title="线程池"></a>线程池</h2><h2 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h2><h2 id="委托异步执行"><a href="#委托异步执行" class="headerlink" title="委托异步执行"></a>委托异步执行</h2><h1 id="二、线程同步"><a href="#二、线程同步" class="headerlink" title="二、线程同步"></a>二、线程同步</h1><h2 id="原子操作（Interlocked）"><a href="#原子操作（Interlocked）" class="headerlink" title="原子操作（Interlocked）"></a>原子操作（Interlocked）</h2><h2 id="lock-语句"><a href="#lock-语句" class="headerlink" title="lock()语句"></a>lock()语句</h2><h2 id="Monitor实现线程同步"><a href="#Monitor实现线程同步" class="headerlink" title="Monitor实现线程同步"></a>Monitor实现线程同步</h2><h2 id="ReaderWriterLock"><a href="#ReaderWriterLock" class="headerlink" title="ReaderWriterLock"></a>ReaderWriterLock</h2><h2 id="事件（Event）类实现同步"><a href="#事件（Event）类实现同步" class="headerlink" title="事件（Event）类实现同步"></a>事件（Event）类实现同步</h2><h2 id="信号量（Semaphore）"><a href="#信号量（Semaphore）" class="headerlink" title="信号量（Semaphore）"></a>信号量（Semaphore）</h2><h2 id="互斥体（Mutex）"><a href="#互斥体（Mutex）" class="headerlink" title="互斥体（Mutex）"></a>互斥体（Mutex）</h2><h2 id="跨进程间的同步"><a href="#跨进程间的同步" class="headerlink" title="跨进程间的同步"></a>跨进程间的同步</h2><p>多线程处理的作用：</p><ol><li><p>实现多任务。</p></li><li><p>解决延迟。</p></li><li><p>多线程应用：计算量大的场景、计算时长久的业务，比如LOL中的战争迷雾，它需要算很多可视化和迷雾单位，需要独立的线程进行计算。</p></li><li><p>在LOL中，每个正在战斗的房间，底层也是要求相互独立，可并行的，所以也需要多线程的支持。</p></li><li><p>每次打开王者荣耀，要更新很多内容，如果不使用多线程下载更新，速度会更慢。</p></li><li><p>其他</p></li></ol><p>有关线程的对象：<strong>Thread</strong>（.net 4.0）、<strong>Task</strong> （.net 4.0之后）</p><p>线程同步保证数据的可靠性</p><h1 id="Thread"><a href="#Thread" class="headerlink" title="Thread"></a>Thread</h1><ul><li>创建线程<ul><li>构建<strong>Thread</strong>实例，参数需要指定一个方法</li><li>通过<strong>Start方法</strong>开始执行线程</li><li>如果需要给方法传递参数，则使用<strong>匿名函数( ) =&gt; { }</strong></li><li>如果有返回值怎么办？定义变量进行接收</li></ul></li><li>暂停线程<ul><li>通过Thread实例调用Join，可以阻止其他线程的调用，直到由该实例表示的线程终止</li><li><strong>线程实例.Join();</strong></li><li>可以传递一个参数，表示最长<strong>阻塞</strong>多长时间的（单位：毫秒）</li></ul></li><li>计时等待<ul><li><strong>Thread.Sleep()</strong>让线程休眠一段时间</li><li>通过<strong>静态方法</strong>可以让当前的线程等待一定的时间，由参数决定等待的时间（单位：毫秒）</li><li>它只影响当前执行的线程，其他线程依旧会执行</li></ul></li><li>终止线程<ul><li><strong>Thread.Abort();</strong></li><li>该方法终止方式是对线程进行销毁，它适用于当线程要关闭的时候进行调度，能够保证线程程序关闭，线程也被销毁</li><li>其他地方尽可能不要用，有其他方式，比如用在线程内部用了lock语句，那么强制关闭线程回导致lock失效从而可能影响计算结果</li></ul></li><li>通过<strong>信号控制</strong>线程的<strong>暂停</strong>执行和<strong>继续</strong>执行<ul><li><strong>ManualResetEvent</strong></li></ul></li><li>检测线程状态<ul><li><strong>thread.ThreadState</strong></li></ul></li><li>前台线程和后台线程<ul><li>后台线程程序停止后可能还会继续执行</li><li>前台线程程序停止都会停止掉左右前台线程，线程默认都是前台线程</li></ul></li><li>访问当前线程<ul><li><strong>Thread.CurrentThread.ManagedThreadId</strong></li></ul></li></ul><h2 id="例1"><a href="#例1" class="headerlink" title="例1"></a>例1</h2><p>本例包含：线程的<strong>创建、启动、阻塞（等待）、休眠、终止</strong></p><p>IDE：<strong>VS 2017</strong></p><p>创建项目类型：<strong>控制台应用(.NET Framework)</strong></p><p>项目名：<strong>Project_Thread</strong></p><p><strong>Program.cs</strong>代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Thread</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            ThreadDemo threadDemo = <span class="keyword">new</span> ThreadDemo();<span class="comment">//实例化ThreadDemo</span></span><br><span class="line">            threadDemo.Start();<span class="comment">//启动三个任务：Thread01,Thread02,Thread03</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在项目中新建一个类，取名为<strong>ThreadDemo</strong></p><p><strong>ThreadDemo.cs</strong>代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Thread</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">ThreadDemo</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//多个线程，可以同时执行不同的任务，减少</span></span><br><span class="line">            <span class="comment">//通过线程调用方法</span></span><br><span class="line">            Thread t1 = <span class="keyword">new</span> Thread(Thread01);</span><br><span class="line">            t1.Start();</span><br><span class="line"></span><br><span class="line">            Thread t2 = <span class="keyword">new</span> Thread(Thread02);</span><br><span class="line">            t2.Start();</span><br><span class="line"></span><br><span class="line">            Thread t3 = <span class="keyword">new</span> Thread(Thread03);</span><br><span class="line">            t3.Start();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> count = <span class="number">0</span>;<span class="comment">//局部变量</span></span><br><span class="line">            Thread t4 = <span class="keyword">new</span> Thread(()=&gt; &#123; count=Thread04(<span class="number">500</span>); &#125;);<span class="comment">//用匿名方法传递参数</span></span><br><span class="line">            t4.Start();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//等待线程执行完毕</span></span><br><span class="line">            t4.Join();</span><br><span class="line">            <span class="comment">/*************以下代码块是有关进程的终止**********/</span></span><br><span class="line">            Console.WriteLine(t4.ThreadState);<span class="comment">//访问进程t4的当前状态</span></span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                t4.Abort();<span class="comment">//终止线程，通过抛异常的形式销毁线程</span></span><br><span class="line">                Console.WriteLine(t4.ThreadState);<span class="comment">//访问进程t4的当前状态</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception e)<span class="comment">//捕获异常</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(e);<span class="comment">//打印异常信息</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">/********************************************/</span></span><br><span class="line">            </span><br><span class="line">            Console.WriteLine(<span class="string">"count是多少："</span> + count);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Thread01</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">100</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//Thread.Sleep(1000); //当前进程休眠1000ms（1s）</span></span><br><span class="line">                Console.WriteLine(<span class="string">"Thread01: "</span> + i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Thread02</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"Thread02: "</span> + i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Thread03</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"Thread03: "</span> + i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">Thread04</span>(<span class="params"><span class="keyword">int</span> count</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span> _count = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                _count++;</span><br><span class="line">                Console.WriteLine(<span class="string">"Thread04: "</span> + i);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> _count;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="例2"><a href="#例2" class="headerlink" title="例2"></a>例2</h2><p>本例包含<strong>暂停执行、继续执行</strong></p><p>给项目新建一个类，取名为ManualResetEventDemo</p><p>ManualResetEventDemo.cs内容如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Thread</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//通过信号的形式控制线程的暂停与继续</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">ManualResetEventDemo</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//停止信号</span></span><br><span class="line">        ManualResetEvent mr = <span class="keyword">new</span> ManualResetEvent(<span class="literal">true</span>);</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ManualResetEventDemo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Thread t = <span class="keyword">new</span> Thread(Thread01);</span><br><span class="line">            t.IsBackground = <span class="literal">false</span>;<span class="comment">//false前台线程， true后台线程</span></span><br><span class="line">            <span class="comment">//基本不会用到这个属性 软件开发可能用到比较多</span></span><br><span class="line">            <span class="comment">//前台线程会在应用程序关闭的时候全部停止掉，后台线程在程序执行完之前不会停止。</span></span><br><span class="line">            t.Start();</span><br><span class="line"></span><br><span class="line">            Start();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//发送一个让线程继续执行的信号</span></span><br><span class="line">            mr.Set();<span class="comment">//继续</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Stop</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            mr.Reset();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Thread01</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Thread.Sleep(<span class="number">3000</span>);</span><br><span class="line">            <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                mr.WaitOne();</span><br><span class="line">                <span class="comment">//线程ID是系统自动分配的；每次都是不同的ID, 每个线程的ID唯一。</span></span><br><span class="line">                Console.WriteLine(<span class="string">"线程的ID: "</span> + Thread.CurrentThread.ManagedThreadId);</span><br><span class="line">                i++;</span><br><span class="line">                Console.WriteLine(<span class="string">"i的值："</span> + i);</span><br><span class="line">                Thread.Sleep(<span class="number">3000</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改Program.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Thread</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//ThreadDemo threadDemo = new ThreadDemo();//实例化ThreadDemo</span></span><br><span class="line">            <span class="comment">//threadDemo.Start();//启动三个任务：Thread01,Thread02,Thread03</span></span><br><span class="line">            ManualResetEventDemo mre = <span class="keyword">new</span> ManualResetEventDemo();</span><br><span class="line">            Console.WriteLine(<span class="string">"输入 start:继续执行线程 stop:停止线程"</span>);</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">string</span> s = Console.ReadLine();</span><br><span class="line">                <span class="keyword">if</span>(s == <span class="string">"start"</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    mre.Start();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(s == <span class="string">"stop"</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    mre.Stop();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Task"><a href="#Task" class="headerlink" title="Task"></a>Task</h1><p>.net4.0之后推出，.net4.5又开放了更多接口</p><ul><li><p>创建任务</p></li><li><p>接收返回值</p></li><li><p>计时等待</p></li><li><p>等待任务执行完毕</p></li><li><p>取消任务</p><p>CancellationToken</p><p>bool标志位 自定义逻辑 进行内部控制</p></li></ul><h2 id="例1（创建、接收返回值，阻塞）"><a href="#例1（创建、接收返回值，阻塞）" class="headerlink" title="例1（创建、接收返回值，阻塞）"></a>例1（创建、接收返回值，阻塞）</h2><p>通过VS 2017创建C#控制台应用项目Project_Task，新建一个类TaskDemo，编辑TaskDemo.cs如下:</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Task</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">TaskDemo</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//开始执行三个任务</span></span><br><span class="line">            Task.Run((Action)Task01);</span><br><span class="line">            <span class="comment">//Run有多个重载方法，因此参数前要加上(Action)，指定只需要一个Action参数的Run方法</span></span><br><span class="line">            Task.Run((Action)Task02);</span><br><span class="line">            Task.Run((Action)Task03);</span><br><span class="line"></span><br><span class="line">            Task t4 = Task.Run(() =&gt; &#123;<span class="comment">//用匿名方法传递参数</span></span><br><span class="line">               mCount = Task04(<span class="number">10</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="comment">//线程等待，等待线程的执行完毕</span></span><br><span class="line">            t4.Wait();</span><br><span class="line">            Console.WriteLine(<span class="string">"COUNT: "</span> + mCount);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> mCount = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">Task04</span>(<span class="params"><span class="keyword">int</span> count</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span> _count = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                _count++;</span><br><span class="line">                Console.WriteLine(<span class="string">"Task04: "</span> + i);</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">return</span> _count;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Task03</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"Task03: "</span> + i);</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Task02</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"Task02: "</span> + i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Task01</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"Task01: "</span> + i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编辑Program.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Task</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            TaskDemo taskDemo = <span class="keyword">new</span> TaskDemo();</span><br><span class="line">            taskDemo.Start();</span><br><span class="line"></span><br><span class="line">            Console.ReadKey();<span class="comment">//等待用户输入，阻塞程序，以便线程都工作完毕。</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序运行结果如下：</p><p><img src="/2020/03/31/C%20Sharp%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8E%E5%BC%82%E6%AD%A5%E6%93%8D%E4%BD%9C/image-20200406115319542.png" alt="image-20200406115319542"></p><h2 id="例2（计时等待）"><a href="#例2（计时等待）" class="headerlink" title="例2（计时等待）"></a>例2（计时等待）</h2><p>修改TaskDemo.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Project_Task</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">TaskDemo</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Task.Run((Action)Task05);            </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">async</span> <span class="keyword">void</span> <span class="title">Task05</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"Task05执行中..."</span>);</span><br><span class="line">                <span class="comment">//Task.Delay 可以执行一个延时的操作</span></span><br><span class="line">                <span class="keyword">await</span> Task.Delay(<span class="number">1000</span>);<span class="comment">//单位毫秒 1000ms = 1s</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行后控制台每隔1秒打印一次“Task05执行中…”</p><h2 id="例3（取消任务）"><a href="#例3（取消任务）" class="headerlink" title="例3（取消任务）"></a>例3（取消任务）</h2>]]></content>
      
      
      
        <tags>
            
            <tag> C&amp;#35 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PluralSight课程：游戏机制设计基础</title>
      <link href="/2020/02/24/PluralSight%E8%AF%BE%E7%A8%8B%EF%BC%9A%E6%B8%B8%E6%88%8F%E6%9C%BA%E5%88%B6%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80/"/>
      <url>/2020/02/24/PluralSight%E8%AF%BE%E7%A8%8B%EF%BC%9A%E6%B8%B8%E6%88%8F%E6%9C%BA%E5%88%B6%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity动画基础</title>
      <link href="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/"/>
      <url>/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<p>Unity版本：Unity 2017.4.35f1 Personal</p><p>导入资源包unity_animation_fundamentals_module_2_begin.unitypackage</p><a id="more"></a><h1 id="一、Animator（动画控制器）"><a href="#一、Animator（动画控制器）" class="headerlink" title="一、Animator（动画控制器）"></a>一、Animator（动画控制器）</h1><h2 id="创建动画片段"><a href="#创建动画片段" class="headerlink" title="创建动画片段"></a>创建动画片段</h2><p>在Assets/Animations下新建Animation，命名为Chest_Open。</p><p>在菜单栏 &gt; Window &gt; Animation打开动画窗口。</p><p>找到选中场景中的Chest，在Animation窗口点击Create按钮在弹出的窗口中选中Open_Chest.anim点击保存。</p><p>在窗口中默认提供60帧，我们修改成30帧</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200306115006356.png" alt="image-20200306115006356"></p><p>展开Chest选中chest_top，在Animation窗口点击Add Property，展开chest_top &gt; Transform，点击Rotation右边的加号。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200306115504925.png" alt="image-20200306115504925"></p><p>此时我们在动画起始和末尾各创建了一个关键帧，我们将白线拖动到最后一帧，然后点击记录按钮。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200306115942461.png" alt="image-20200306115942461"></p><p>修改chest_top的Rotation的x为-130，再点击记录按钮关闭记录，这时我们点击Animation窗口的播放按钮，Scene窗口将循环播放Chest打开的动画。</p><p>如图操作，点击Clips列表，添加新的动画Clip，命名为Chest_Close</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200306135038980.png" alt="image-20200306135038980"></p><p>点击Clips列表，可改变当前要编辑的Clip.</p><p>点击Add Property，选中chest_top &gt; Transform &gt; Rotation。</p><h2 id="使用动画曲线"><a href="#使用动画曲线" class="headerlink" title="使用动画曲线"></a>使用动画曲线</h2><p>保持Chest被选中，点击Animation窗口下的Curves按钮，打开动画曲线界面，</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200320181825478.png" alt="image-20200320181825478"></p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200320182359505.png" alt="image-20200320182359505"></p><h2 id="重新定时动画"><a href="#重新定时动画" class="headerlink" title="重新定时动画"></a>重新定时动画</h2><h2 id="使用动画事件"><a href="#使用动画事件" class="headerlink" title="使用动画事件"></a>使用动画事件</h2><p>将动画光标移动到箱子完全打开的关键帧位置，点击添加动画事件按钮。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200320215514821.png" alt="image-20200320215514821"></p><p>此时Inpsector面板出现动画事件函数设置。我们在Hierarchy选中Chest，为其添加组件Treasure Chest(Script)。</p><p>为Chest添加空的子GameObject并重命名为Spawner。将其拖拽添加到Chest的Treasure Chest(Script)组件下Spawner属性。从Assets/Prefabs下拖拽Coin到Chest的Treasure Chest(Script)组件下Coin Prefab属性。我们双击该组件下的Script属性打开脚本文件，在其中我们发现有一个OpenChest方法。</p><p>回到Unity，在Animation窗口点击刚才添加的动画事件标记，在Inspector窗口的动画事件函数选项里我们有3种函数可以选择。选择OpenChest，这个函数就与动画事件关联上了。当我们播放游戏时，开箱动画播放到完全打开关键帧时将自动触发动画事件，调用OpenChest函数，弹出硬币。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200320220902629.png" alt="image-20200320220902629"></p><h2 id="创建多个剪辑"><a href="#创建多个剪辑" class="headerlink" title="创建多个剪辑"></a>创建多个剪辑</h2><p>首先为Chest_Close添加属性Rotation，通过Ctrl+C/V将Chest_Open的关键帧复制粘贴到Chest_Close里。</p><p>在Chest_Close里，将首尾两个关键帧交换位置，然后调整其动画曲线。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200321082658400.png" alt="image-20200321082658400"></p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200321083142461.png" alt="image-20200321083142461"></p><h2 id="Animator视窗里的基本操作"><a href="#Animator视窗里的基本操作" class="headerlink" title="Animator视窗里的基本操作"></a>Animator视窗里的基本操作</h2><p>如果我们有多个动画片段，需要管理它们，甚至在一个动画到下一个动画之间转换，需要使用动画控制器。这是一个可以与动画组件一起使用的游戏Assets。当我们创建动画片段时，Unity会自动创建一个动画控制器，该动画控制器需要设置动画的控制参数。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200321083855523.png" alt="image-20200321083855523"></p><p>双击动画控制器，打开Animation窗口</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200321092216642.png" alt="image-20200321092216642"></p><p>在Animation窗口中，我们看到四个节点，按住鼠标中键可以移动观图视角</p><p>Any State：特殊节点，允许中断正在播放的当前状态或正在播放以退出并进入另一个状态的当前动画。例如，当玩家的生命值降低到零，玩家处于生命状态并不重要，它将转到死亡动画。</p><p>Entry：任何游戏开始或基础层上的特殊状态机的开始，将进入的第一个默认状态/默认动画。</p><p>Exit：特殊节点，表明状态机应该退出。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200321094443227.png" alt="image-20200321094443227"></p><p>Chest_Open状态是橙色的，代表默认状态，表示这个动画将在游戏开始后立即播放。如果我们希望箱子在游戏开始时时保持关闭状态，我们需要先创建一个空状态。在Animator视窗空白处右键选择Create State|Empty，重命名为Chest_Idle，且它的Motion设为None。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200425205759946.png" alt="image-20200425205759946"></p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200425213738029.png" alt="image-20200425213738029"></p><p>然后选中Chest_Idle右键选择Set as Layer Default State。此时播放动画，Chest保持关闭状态。</p><p>我们要箱子从Chest_Idle转变到Chest_Open状态，可以先右键Chest_Idle，选择Make Transition，然后点击Chest_Open，这样一个过渡箭头将两个状态连接起来。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200425210555148.png" alt="image-20200425210555148"></p><p>选中这个过渡箭头，我们可以在Inspector里设置过渡条件。通常我们会取消勾选Has Exit Time，并确保下方的Condition里设置了条件。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200425211003751.png" alt="image-20200425211003751"></p><h2 id="参数和条件"><a href="#参数和条件" class="headerlink" title="参数和条件"></a>参数和条件</h2><p>接下来我们将使用Condition（条件），条件在Animator视窗左边的Parameter（参数）视窗里创建。点击加号，我们可以看到有四种数据类型参数供选择，我们这次选择创建Bool（布尔类型）参数，并重命名为isOpen。我们将利用这个参数来控制箱子的开关，默认值设为false。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200425211915696.png" alt="image-20200425211915696"></p><p>然后选中Chest_Idle到Chest_Open的过渡箭头，在Conditions点击加号，设置isOpen为true。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200425213244652.png" alt="image-20200425213244652"></p><p>同理，我们将Chest_Open到Chest_Close之间的相互过渡也做条件设置，开箱到关箱的条件是isOpen为false，关箱到开箱的条件为true，记得都取消勾选Has Exit Time。</p><h2 id="脚本控制条件参数"><a href="#脚本控制条件参数" class="headerlink" title="脚本控制条件参数"></a>脚本控制条件参数</h2><p>打开Assets/Scripts下的TreasureChest.cs，以下只展示部分关键代码（重点看Update方法）：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TreasureChest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">bool</span> interactable = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">bool</span> isOpen = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> Animator anim;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Rigidbody coinPrefab;</span><br><span class="line">    <span class="keyword">public</span> Transform spawner;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Use this for initialization</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        anim = GetComponent&lt;Animator&gt;();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Update is called once per frame</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line"><span class="keyword">if</span>(Input.GetKeyDown(KeyCode.Space))</span><br><span class="line">        &#123;</span><br><span class="line">          isOpen = !isOpen;</span><br><span class="line">          anim.SetBool(<span class="string">"isOpen"</span>, isOpen);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后回到Unity，将Animations文件夹下的Chest_Close、Chest_Open的Loop Time取消勾选，不让其循环播放动画剪辑。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200425223028862.png" alt="image-20200425223028862"></p><p>然后保存，播放场景，箱子一开始是关闭的，按空格键箱子打开，再按一次空格键箱子关闭。</p><h1 id="二、Maya导出动画"><a href="#二、Maya导出动画" class="headerlink" title="二、Maya导出动画"></a>二、Maya导出动画</h1><p>用Maya 2018打开资料里Referenced Files里的rig_DwarfHero_root_motion.ma。</p><h1 id="三、导入设置"><a href="#三、导入设置" class="headerlink" title="三、导入设置"></a>三、导入设置</h1><p>回到Unity，选中Assets/Mesh/dwarf_hero，Inspector视窗里选中Model，取消勾选Import Visibility、Import Cameras、Import Lights，其他保持默认，点击Materials，勾选Import Materials，点击Apply。此时可见素材的材质得到了应用。</p><p>点击Rig，Animation Type默认设置为Generic。此项可以可选的值有：</p><p>None：一般用于箱子、机关门等，因为他们没有骨骼。</p><p>Legacy：专用功能，用于兼容老版本Unity 5项目。</p><p>Generic：基于骨骼创建avatar，没有人形的特征。</p><p>Humanoid：用于将已有的动画重新用在多个角色人物上。</p><p>这里我们将Animation Type设为Humanoid，Avatar Definition设置为Create From This Mode，点击Apply，点击Configure，选择保存当前场景，进入到角色的临时场景，角色处于T形姿势，方便在骨骼上绑定其他物品。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200527185740100.png" alt="image-20200527185740100"></p><p>通过Inspector视窗我们可以定位骨骼关节并在场景窗口中改变骨骼布局。</p><p>Mapping中的点，外圈是实线环的是必要节点，外边是虚线环的是可选节点。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200527190923869.png" alt="image-20200527190923869"></p><p>因为这个案例中的骨骼健壮性很强，所以在Unity中都自动映射好了。要使用Unity的自动映射，我们可以点击Mapping，选择Automap。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200527192045065.png" alt="image-20200527192045065"></p><p>或者可以选择Clear，自己手动一个一个映射。</p><p>我们可以更改角色的姿势，点击Pose。当前我们使用的是Enforce T-Pose，如果选择Sample Blind-Pose则转为角色的原始姿势</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200528124245040.png" alt="image-20200528124245040"></p><p>保持T-Pose，点击Apply应用设置。</p><p>骨骼设置好后，点击Muscles&amp;Settings进行肌肉设置。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200528124713954.png" alt="image-20200528124713954"></p><p>肌肉并非必要的设置项，它只是为骨骼设置运动范围。通过Musles Group Preview可以很好地了解角色的运动方式以及如何重定位角色的其他动画。例如，我们可以调节Open Close来调整骨骼的打开和关闭状态。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200528125540720.png" alt="image-20200528125540720"></p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200528125636700.png" alt="image-20200528125636700"></p><p>通过Per-Muscle Settings，我们可以对具体的骨骼本身进行运动范围的修改。例如我们要将body伸展开，调节时会有特定的范围。我们放大会看到扇形的范围区。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200528131024583.png" alt="image-20200528131024583"></p><p>此时spine Front-Back处于最大值，对应骨骼处在扇形的边缘，我们可以调节下方的滑块的两端来调整活动范围最大值或最小值，可以看到扇形的大小也顺便改变了。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200528131351914.png" alt="image-20200528131351914"></p><p>本案例的默认设定已经满足学习，我们可以点击Revert重置会默认设定，接着点击Done返回游戏场景。</p><p>那么我们使用humanoid类型有什么意义？</p><p>因为我们使用的动画可能来源各异，可能来自动作捕捉，可能来自Unity资源商店。humanoid类型提供很大的灵活性，方便我们使用不同的动画，提高开发效率。</p><h1 id="四、导入动画剪辑"><a href="#四、导入动画剪辑" class="headerlink" title="四、导入动画剪辑"></a>四、导入动画剪辑</h1><p>动画剪辑已经导入，我们先修改设置。先选中Animations文件夹下的anm_dwarfHero_idle、anm_dwarfHero_jump、anm_dwarfHero_run、anm_dwarfHero_walk动画，然后转到Model设置界面。</p><p>取消勾选Import Visibility、Import Cameras、Import Lights、Import Matrtials。因为我们不需要任何额外的东西，我们并不真正需要动画剪辑材料。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200528202026194.png" alt="image-20200528202026194"></p><p>点击Rig将Animation Type设为Humanoid。现在我们可以继续为每个动画剪辑创建新的avatar，但没有多大作用，特别是我们将要用于重新定向。因此如果我们使用同一类型模型同一设置，只需将Avatar Definition设置为Copy From Other Avatar，然后在下方Source设置准备好的Avatar。这里我们设置上dwarf_heroAvatar，然后点击Apply。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200529122623553.png" alt="image-20200529122623553"></p><p>在Import Messages那会出现警告消息：我们重新定向的质量可能较低，因为我们没有在人形动画的Spine_1节点，实际上这属于正常情况。</p><p>然后我们选中Project视窗里的anm_dwarfHero_idle，在Inspector里点击Animation设置动画剪辑，将Loop Time勾选上，这将可以让闲置动画循环播放。下方的Loop Pose的作用是，如果动画中角色的骨骼或角色的根节点在动画开始和结束的位置存在偏差，Loop Pose将使这个衔接变得自然。在这里，loop match右边的灯是绿色的，表示衔接良好，所以我们无需勾选Loop Pose。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200529124320656.png" alt="image-20200529124320656"></p><p>下方的Root Transform Rotation控制角色整体的根节点的转向。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200608123937508.png" alt="image-20200608123937508"></p><p>如果我们将其下的Based Upon设置为Body Orientation，则方向箭头会指向了Z轴。设置回Original。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200608124311565.png" alt="image-20200608124311565"></p><p>Root Transform Position(Y)可以控制角色的上下移动，如控制角色飞行。</p><p>在Additive Reference Pose下方有一个指示平均速率（Average Velocity）的消息。下图中，XZ方向上的速度均为0，Y方向上的速度为0.001。0.001虽然是个很小的数，但是如果控制角色移动足够远则会发现角色走到了半空中。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200608125207343.png" alt="image-20200608125207343"></p><p>要解决这个问题，我们勾选Root Transform Position(Y)下的Bake Into Pose，将Based Upon (at Start)设置为Original或Feet，然后点击Apply。</p><h1 id="五、根动作（Root-motion"><a href="#五、根动作（Root-motion" class="headerlink" title="五、根动作（Root motion)"></a>五、根动作（Root motion)</h1><p>接下来我们使用根动作让我们的角色向前行走。我们选中一个已经应用了根动作的动画剪辑anm_dwarfHero_walk。当我们播放该动画时，角色的根节点将自动被检测并随着行走动画，改变根节点的坐标，从而驱使角色向前移动。角色移动的速度受动画控制，从而避免了滑行（即角色的脚步与角色的速度不同步）。</p><p>让我们暂停动画进行设置，首先勾选上Loop Time。注意到Root Transform Position(XZ)的loop match为红灯，表示动画循环没有匹配良好。可以知道的是我们的角色移动在XZ方向上有偏差。造成偏差的原因是在用Maya制作此动画剪辑时，角色向前迈步，XZ方向上一定会有位移，动画首尾坐标不一致。这属于正常现象，我们需要解决的是不让角色速度方向有偏差。</p><p>我们先勾选上Root Transform Rotation的Bake Into Pose，此举可以将角色在Y方向上的平均角速度变为0，从转向上消除偏差。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200608223600561.png" alt="image-20200608223600561"></p><p>接着我们勾选Loop Time下边的Loop Pose。将Root Transform Rotation的Based Upon设为Body Orientation。改变Root Transform Rotation的Offset值，直到平均速度的X分量为0。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200608224444664.png" alt="image-20200608224444664"></p><p>然后勾选Root Transform Position(Y)的Bake Into Pose，然后设置Based Upon (at Start)为Feet。</p><p>设置Root Transform Position(XZ)的Based Upon为Center of Mass</p><p>然后点击Apply，一个行走动画就基本调成完成。</p><p>接着我们用同样的步骤调整anm_dwarfHero_run</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200608230554607.png" alt="image-20200608230554607"></p><h1 id="六、调整非人型rig的骨骼"><a href="#六、调整非人型rig的骨骼" class="headerlink" title="六、调整非人型rig的骨骼"></a>六、调整非人型rig的骨骼</h1><p>角色可能带有多余的骨骼，比如英雄肩膀上的一个护甲也绑定上了骨骼，但人型rig并不会检测到这种骨骼的存在。</p><p>让我们选中项目窗口Animation文件夹下的anm_DwarfHero_Attack03动画，在这个动画中，角色的胡子和肩膀护甲并没有按预期活动。我们可以在Inspector里调整如下参数。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609201925384.png" alt="image-20200609201925384"></p><p>将Mask下的Definition设置为Create From This Model。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609202146188.png" alt="image-20200609202146188"></p><p>然后点开Transform，找到L_Pauldron_Jnt、R_Pauldron_Jnt、Beard_1_Jnt、grp_Beard_1_Con并将它们勾选上，点击Apply。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609202935392.png" alt="image-20200609202935392"></p><p>这时我们再播放动画，胡子和肩膀护甲都按预期进行了活动，而且其他anm_DwarfHero动画也同时得到了相同的调整。</p><h1 id="七、角色动画准备工作"><a href="#七、角色动画准备工作" class="headerlink" title="七、角色动画准备工作"></a>七、角色动画准备工作</h1><p>首先从项目窗口中将Meshes文件夹下的dwarf_hero拖拽到场景中。然后给场景中的<strong>dwarf_hero添加Rigidbody组件、Capsule Collider组件</strong>。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609204504815.png" alt="image-20200609204504815"></p><p>然后<strong>设置胶囊碰撞体参数</strong>如下，以适配角色的身体。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609204821434.png" alt="image-20200609204821434"></p><p>然后给dwarf_hero设置动画控制器，我们在项目窗口Animations文件夹下右键新建Animator Controller，重命名为DwarfHero，然后拖拽到场景中的dwarf_hero的Animator组件|Controller。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609205414913.png" alt="image-20200609205414913"></p><p>然后勾选Rigidbody组件|Is Kinematic</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609205722222.png" alt="image-20200609205722222"></p><p>然后进入Animator窗口，将Animations文件夹下的anm_dwarfHero_idle拖拽进来，让它成为角色的起始播放动画。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609210219947.png" alt="image-20200609210219947"></p><p>保存场景，此时我们如果点击播放游戏，则场景中的角色在进入游戏时将成功播放闲置动画。</p><h1 id="八、设计动画逻辑"><a href="#八、设计动画逻辑" class="headerlink" title="八、设计动画逻辑"></a>八、设计动画逻辑</h1><p>在Assets/Scripts下有一个CharacterMovement.cs脚本。我们给场景中的dwarf_hero添加组件Character Movement (Script)。接着进入Animator窗口，将Animations文件夹下的anm_dwarfHero_run拖拽进来，然后选中之前添加的anm_dwarfHero_idle，右键选择Make Transition，再点击anm_dwarfHero_run将这两个动画剪辑用箭头连接起来。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609211613777.png" alt="image-20200609211613777"></p><p>然后选中连接箭头，创建Bool类型条件参数，重名命名为IsRunning</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609212307947.png" alt="image-20200609212307947"></p><p>然后在转换关系（箭头）上添加条件IsRunning，并设置条件值为true。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609212528081.png" alt="image-20200609212528081"></p><p>然后我们在创建一个从run到idle的转换关系（箭头），设置条件为IsRunning为false。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609212752582.png" alt="image-20200609212752582"></p><p>双击用VS2017打开CharacterMovement.cs脚本，其中Animating函数是控制角色跑动的关键。float类型变量lh、lv分别表示手柄/键盘输入的水平方向数据和垂直方向数据，当他们全都为0时，bool类型变量running为true，但它俩其中一个不为0则running为false。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FixedUpdate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//Store input axes</span></span><br><span class="line">    <span class="keyword">float</span> lh = Input.GetAxisRaw(<span class="string">"Horizontal"</span>);</span><br><span class="line">    <span class="keyword">float</span> lv = Input.GetAxisRaw (<span class="string">"Vertical"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Move (lh, lv);</span><br><span class="line"></span><br><span class="line">    Animating(lh, lv);</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Animating</span>(<span class="params"><span class="keyword">float</span> lh, <span class="keyword">float</span> lv</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> running = lh != <span class="number">0f</span> || lv != <span class="number">0f</span>;</span><br><span class="line"></span><br><span class="line">    anim.SetBool (<span class="string">"IsRunning"</span>, running);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好，如果我们现在播放游戏，并用WASD控制角色跑动，我们会发现角色先滑行一段距离才开始跑动。</p><p>进入Animator窗口，选中idle到run的转变关系箭头，取消勾选Has Exit Time。同样地，run到idle的转变关系箭头也这么修改。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609214521142.png" alt="image-20200609214521142"></p><p>Has Exit Time如果被勾选，则角色将在转变前的动画播放完毕才开始转变到下一个动画，取消勾选可以打断等待，让转变立刻发生。</p><h1 id="九、混合树（Blend-Tree）"><a href="#九、混合树（Blend-Tree）" class="headerlink" title="九、混合树（Blend Tree）"></a>九、混合树（Blend Tree）</h1><p>首先我们给场景中的dwarf_hero添加Nav Mesh Agent组件，并做如下参数设置。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609215258252.png" alt="image-20200609215258252"></p><p>接着添加World Interaction、Locomotion Agent两个脚本组件。World Interaction脚本让我们可以通过鼠标点击场景控制角色行动Locomotion Agen脚本不仅用于控制角色的动画还会更新Nav Mesh Agent以便适配角色的根动作（Root Motion）</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609215605471.png" alt="image-20200609215605471"></p><p>回到Animator窗口，删掉之前添加进来的idle和run动画剪辑，右键选择Create State|From New Blend Tree新建混合树，重命名为Locomotion</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609220435603.png" alt="image-20200609220435603"></p><p>双击建好的Locomotion进入内部，将条件Blend重命名为PlayerVelocity</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609220814579.png" alt="image-20200609220814579"></p><p>选中Blend Tree，在Inspector点击Motion下的加号添加要混合的动作。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609221102876.png" alt="image-20200609221102876"></p><p>依次添加动画剪辑idle、walk、run。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609221329386.png" alt="image-20200609221329386"></p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609221506166.png" alt="image-20200609221506166"></p><p>播放混合动画，当我们拖拽改变PlayerVelocity时，角色动作将发生变化。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609221947274.png" alt="image-20200609221947274"></p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609222136105.png" alt="image-20200609222136105"></p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609222218057.png" alt="image-20200609222218057"></p><p>我们可以通过脚本控制参数PlayerVelocity来控制这一动作变化。</p><p>用VS2017打开Locomotion.cs，在Update函数下的关键代码如下。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">...</span><br><span class="line">    <span class="comment">// Update animation parameters</span></span><br><span class="line">    anim.SetFloat(<span class="string">"PlayerVelocity"</span>, agent.velocity.magnitude);</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>回到Unity，注意到PlayerVelocity的可变范围是0到1，我们可以改变这个范围。</p><p>选中Blend Tree，取消勾选Automate Thresholds，并依次改变run、walk的阈值为8、2。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609223225813.png" alt="image-20200609223225813"></p><p>播放游戏，我们在控制角色的时候可以发现角色从闲置到奔跑有过渡，我们可以改变run、walk的阈值（比如分别为6、1）使这个过渡更加自然。</p><h1 id="十、动画层"><a href="#十、动画层" class="headerlink" title="十、动画层"></a>十、动画层</h1><p>在这个小节我们将使用动画层配置角色攻击动画。首先我们先将场景中的dwarf_hero的World Interaction、Locomotion Agent两个组件删掉，然后添加脚本组件Player Attack。</p><p>进入Animator窗口，点击Parameters左边的Layers，我们看到一个Base Layer。每一个Animator都有一个Base Layer，我们可以添加动画层，在另一个动画层上做攻击动画。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609225036270.png" alt="image-20200609225036270"></p><p>点击加号，新建一个动画层，重命名为Attack Layer。在Attack Layer里我们拖拽进Attack01动画剪辑，但我们不希望默认起始动画是攻击动画，于是我们右键Create State|Empty创建一个空状态（重命名为Empty），然后选中Empty状态右键|Set as Layer Default State设置为默认状态。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609225548574.png" alt="image-20200609225548574"></p><p>然后从空状态到Attack01建立一个转变关系，取消勾选Has Exit Time，设置Trigger类型条件IsAttacking。Trigger类型条件的原理是把条件变量IsAttacking赋值为true然后在赋值为false。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609230306166.png" alt="image-20200609230306166"></p><p>然后从Attack01到Empty之间在建立一个转变关系，勾选Has Exit Time，这样一来，Attack01动画播放完毕就可以回到Empty状态等待下次触发。</p><p>在Base Layer和Attack Layer右边有小齿轮按钮，点击可以看到更多设置。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609231407247.png" alt="image-20200609231407247"></p><p>其中Weight（权重）决定动画层的优先级。Base Layer一直在播放，因此它的Weight不可改变。当我们把Attack Layer的Weight改为1时，Attack Layer将根据Blending设置的Override，完全覆盖Base Layer，即只播放Attack Layer。如果把Blending设置为Additive，Attack Layer将在Base Layer的基础上做变化。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609232105874.png" alt="image-20200609232105874"></p><p>保持Blending为Override，打开PlayerAttack.cs脚本</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(Input.GetKeyDown(KeyCode.Mouse0))</span><br><span class="line">    &#123;</span><br><span class="line">        anim.SetLayerWeight(<span class="number">1</span>, <span class="number">1f</span>);</span><br><span class="line">        anim.SetTrigger(<span class="string">"IsAttacking"</span>);</span><br><span class="line">        print(<span class="string">"Attacking!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>其中Update方法下的语句“anim.SetLayerWeight(1, 1f);’’SetLayerWeight传递Attack Layer的动画层索引1（Base Layer的索引是0）以及权重范围1f（表示范围是0~1）。然后”anim.SetTrigger(“IsAttacking”);“设置触发器”IsAttacking”。</p><p>播放游戏，一边控制角色跑动，一边按鼠标左键攻击，角色会在攻击的时候脚停止不动。</p><h1 id="十一、动画遮罩（Avatar-Mask）"><a href="#十一、动画遮罩（Avatar-Mask）" class="headerlink" title="十一、动画遮罩（Avatar Mask）"></a>十一、动画遮罩（Avatar Mask）</h1><p>动画遮罩（Avatar Mask）用于混合动画层，让上一小节中角色的边跑边攻击动画没那么奇怪。</p><p>在Assets/Animations下右键新建|Avatar Mask，重命名为DwarfHero_LowerBody。选中DwarfHero_LowerBody，在Inspector里点开Humanoid，将需要遮挡住的部分点击变红，这里我们将双腿和根动作全部点红。因为我们要将攻击动画层中角色的下半身全部被Base Layer遮住。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609234540132.png" alt="image-20200609234540132"></p><p>接下来将这个遮罩应用到Attack Layer中。点击Attack Layer右边的小齿轮，点击Mask右边的小圆，在弹出的对话框中选择DwarfHero_LowerBody。</p><p><img src="/2020/02/23/Unity%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/image-20200609235030518.png" alt="image-20200609235030518"></p><p>播放游戏，角色可以一边跑动一边攻击，脚步不停了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity 2018 UI基础</title>
      <link href="/2020/02/19/Unity%202018%20UI%E5%9F%BA%E7%A1%80/"/>
      <url>/2020/02/19/Unity%202018%20UI%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<ul><li>三种画布的添加</li><li>不同分辨率的屏幕</li><li>文本组件</li></ul><a id="more"></a><p>Unity版本：Unity 2018.4.13c1 Personal</p><p>Interface Type 交互界面类型</p><ul><li>Diegetic(剧情的，故事内的)：存档点</li><li>Spatial(受空间条件限制的)：高亮任务NPC或其他玩家，或玩家自己</li><li>Meta：有写摄像机玩家察觉不到，但开发者知道</li><li>Non-Diegetic ：打分面板</li></ul><p>Canvas Type画布类型</p><ul><li>Screen Space Overlay：在场景顶层，HUD，用于标识角色状态等信息</li><li>Screen Space Camera：</li><li>World Space：</li></ul><p>Interface Type Use Canvas Type</p><ul><li><p>Overlay用于做No-diegetic UI</p></li><li><p>Camera用于做No-diegetic &amp; diegetic UI</p></li><li><p>World用于做diegetic UI</p></li></ul><p><strong>What is HUD ?</strong></p><p>HUD - Head-Up Display</p><p>HUD或状态条是游戏UI中视觉传达玩家信息的一种交互方式。</p><p><strong>导入资源包</strong></p><p>新建好项目后，导入ui-fundamentals-2018.unitypackage，进入Scenes文件件，双击打开UIScene</p><h1 id="一、三种画布的添加"><a href="#一、三种画布的添加" class="headerlink" title="一、三种画布的添加"></a>一、三种画布的添加</h1><h2 id="1-Overlay"><a href="#1-Overlay" class="headerlink" title="1. Overlay"></a>1. Overlay</h2><p>新建一个新场景，菜单栏GameObject &gt; UI &gt; Canvas，在其组件Canvas &gt; Render Mode选中Screen Space - Overlay。</p><p>在Canvas下新建一个Cube，但我们却无法在Game视窗看到Cube，无论Cube调整到多大。这就是Overlay型画布。我们可以看见在其上边放置的二维图片，文本，和一些可以互动的东西比如按钮，而三维模型无法看到。</p><p>接着我们在Cube下新建一个UI &gt; Button，通过Game视窗，我们看到一个显示在画布上的按钮。</p><p>想要看到那个Cube，需要将其放置在摄像机的视野中，我们将Cube位置重置，接着将Cube向Z轴正方向移动5个单位长度，使其正好在Main Camera正前方，此时我们得以在Game视窗中看到Cube，注意这个Cube不在画布上。</p><p><img src="/2020/02/19/Unity%202018%20UI%E5%9F%BA%E7%A1%80/C:%5CUsers%5CWMJ%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200321191703903.png" alt="image-20200321191703903"></p><h2 id="2-Camera"><a href="#2-Camera" class="headerlink" title="2. Camera"></a>2. Camera</h2><p>我们将Carves的Render Mode改成Screen Space - Camera，此时Render Camera没有指定，我们将Main Camera拖拽过去添加上。这时候我们发现Game视窗下的按钮消失了，我们选中Main Camera，将其Camera &gt; Clipping Planes Far由原来的10改成100或1000此时我们又看到了button，或者不改变摄像机的可视范围，将Canves的Plane Distance(平面距离)改为5，即把画布移到摄像机的可视范围内，也同样在Game视窗中显示button。</p><p><img src="/2020/02/19/Unity%202018%20UI%E5%9F%BA%E7%A1%80/C:%5CUsers%5CWMJ%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200321202535660.png" alt="image-20200321202535660"></p><h2 id="3-World-Space"><a href="#3-World-Space" class="headerlink" title="3. World Space"></a>3. World Space</h2><p>我们将Canves的Render Mode改为World Space。将Cube拖拽到Main Camera的子系。</p><p>接下来我们将按钮Y方向旋转一定角度。</p><p><img src="/2020/02/19/Unity%202018%20UI%E5%9F%BA%E7%A1%80/C:%5CUsers%5CWMJ%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200321203804848.png" alt="image-20200321203804848"></p><p><img src="/2020/02/19/Unity%202018%20UI%E5%9F%BA%E7%A1%80/C:%5CUsers%5CWMJ%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200321203711010.png" alt="image-20200321203711010"></p><p>再看Game视窗，可以看到倾斜的按钮</p><p><img src="/2020/02/19/Unity%202018%20UI%E5%9F%BA%E7%A1%80/C:%5CUsers%5CWMJ%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200321204017725.png" alt="image-20200321204017725"></p><h1 id="二、不同的分辨率的屏幕"><a href="#二、不同的分辨率的屏幕" class="headerlink" title="二、不同的分辨率的屏幕"></a>二、不同的分辨率的屏幕</h1><h2 id="1-高分辨率PC游戏"><a href="#1-高分辨率PC游戏" class="headerlink" title="1. 高分辨率PC游戏"></a>1. 高分辨率PC游戏</h2><h2 id="2-HTML5网页大小"><a href="#2-HTML5网页大小" class="headerlink" title="2. HTML5网页大小"></a>2. HTML5网页大小</h2><h2 id="3-移动设备横屏与竖屏"><a href="#3-移动设备横屏与竖屏" class="headerlink" title="3. 移动设备横屏与竖屏"></a>3. 移动设备横屏与竖屏</h2><p>File &gt; Build Settings，默认是选择PC平台</p><h1 id="三、文本组件"><a href="#三、文本组件" class="headerlink" title="三、文本组件"></a>三、文本组件</h1><p>打开UIStart场景，选中03-Responsive，在菜单栏GameObject下选择UI &gt; Text</p>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity载入界面基础</title>
      <link href="/2020/02/17/Unity%E8%BD%BD%E5%85%A5%E7%95%8C%E9%9D%A2%E5%9F%BA%E7%A1%80/"/>
      <url>/2020/02/17/Unity%E8%BD%BD%E5%85%A5%E7%95%8C%E9%9D%A2%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<ul><li>创建用户界面元素</li><li>编写场景切换脚本</li></ul><a id="more"></a><p>Unity 版本：Unity 2018.4.13c1 Personal</p><h1 id="一、创建用户界面元素"><a href="#一、创建用户界面元素" class="headerlink" title="一、创建用户界面元素"></a>一、创建用户界面元素</h1><p>新建一个场景，命名为MainMenu。删掉Directioinal light，切换为2D视角。</p><p>再Lighting窗口，设置Scene &gt; Environment &gt; Environment Lighting &gt; Source为Color，Amibient Color为黑色，Skybox material设置为None(Material)。</p><p>再Hierarchy窗口创建 &gt; UI &gt; Canvas</p><p>再Game窗口下把分辨率由Free Aspect改为16：9</p><p><img src="/2020/02/17/Unity%E8%BD%BD%E5%85%A5%E7%95%8C%E9%9D%A2%E5%9F%BA%E7%A1%80/image-20200228112125949.png" alt="image-20200228112125949"></p><p>再Canvas下新建 &gt; UI &gt; Text - TextMeshPro，首次新建会弹出导入TMP必备窗口，点击Import TMP Essentials，导入完成后关闭窗口即可。</p><p>然后重命名TextMeshPro为TitleText，再其Text Mesh Pro UGUI(Script)组件 &gt; Text自定义文本写上游戏名“Sword and Shovels”，在该组件 &gt; Main Settings可以修改字体。我们勾选Font Size &gt; Auto Size，这时字体大小将随文本框大小改变而自动调节。通过Aligment右边的按钮可以调节文本对齐居中等。</p><p>再Canves下新建 &gt; UI &gt; Button，将Button下的Text删掉，再Button下新建Text - TextMeshPro，调整好之后如下图：</p><p><img src="/2020/02/17/Unity%E8%BD%BD%E5%85%A5%E7%95%8C%E9%9D%A2%E5%9F%BA%E7%A1%80/image-20200228114127419.png" alt="image-20200228114127419"></p><p>播放游戏，画面中Play按钮可以点击。</p><p><img src="/2020/02/17/Unity%E8%BD%BD%E5%85%A5%E7%95%8C%E9%9D%A2%E5%9F%BA%E7%A1%80/image-20200228114309539.png" alt="image-20200228114309539"></p><h1 id="二、编写场景切换脚本"><a href="#二、编写场景切换脚本" class="headerlink" title="二、编写场景切换脚本"></a>二、编写场景切换脚本</h1><p>再Hirarchy窗口新建空Game Object，重命名为SceneSwitcher。再Assest/Scripts下新建SceneSwitcher.cs，用VS2017打开，编写代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.SceneManagement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SceneSwitcher</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SceneSwitch</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        SceneManager.LoadScene(<span class="number">1</span>);      </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>回到Unity，给SceneSwitcher添加Scene Switcher(Script)组件。</p><p>选中Canvas/Button，在On Click()下添加点击事件，将SceneSwitcher拖拽进来，函数选择SceneSwitcher &gt; SceneSwitch()。</p><p><img src="/2020/02/17/Unity%E8%BD%BD%E5%85%A5%E7%95%8C%E9%9D%A2%E5%9F%BA%E7%A1%80/image-20200228122020919.png" alt="image-20200228122020919"></p><p>保存MainMenu场景，然后点击菜单栏File &gt; Build Settings，在Build Settings弹窗点击Add Open Scenes把MainMenu添加进去，然后将Assets/Scenes下建好的Main01场景拖拽添加进来。</p><p><img src="/2020/02/17/Unity%E8%BD%BD%E5%85%A5%E7%95%8C%E9%9D%A2%E5%9F%BA%E7%A1%80/image-20200228121302765.png" alt="image-20200228121302765"></p><p>播放游戏，开始进入MainMenu场景，当我们点击Play后，进入Main01场景。</p><p><img src="/2020/02/17/Unity%E8%BD%BD%E5%85%A5%E7%95%8C%E9%9D%A2%E5%9F%BA%E7%A1%80/image-20200228122611804.png" alt="image-20200228122611804"></p><p><img src="/2020/02/17/Unity%E8%BD%BD%E5%85%A5%E7%95%8C%E9%9D%A2%E5%9F%BA%E7%A1%80/image-20200228122641396.png" alt="image-20200228122641396"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PluralSight谈游戏设计基础</title>
      <link href="/2020/02/16/PluralSight%E8%AF%BE%E7%A8%8B%EF%BC%9A%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80/"/>
      <url>/2020/02/16/PluralSight%E8%AF%BE%E7%A8%8B%EF%BC%9A%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<p>12 parts in total.</p><a id="more"></a><h1 id="1-From-Idea-to-Game-Vision"><a href="#1-From-Idea-to-Game-Vision" class="headerlink" title="1. From Idea to Game Vision"></a>1. From Idea to Game Vision</h1><p>writing an idea down, extends the ideas lifespan.</p><p><strong>Vision</strong> — A vivid, imaginative concept to drive your direction.</p><h1 id="2-Communicating-Your-Idea"><a href="#2-Communicating-Your-Idea" class="headerlink" title="2. Communicating Your Idea"></a>2. Communicating Your Idea</h1><p>Communicating your game’s vision with confidence is key.</p><h1 id="3-Going-to-the-Game-Premise"><a href="#3-Going-to-the-Game-Premise" class="headerlink" title="3. Going to the Game Premise"></a>3. Going to the Game Premise</h1><p>Your game premise should be one Action-Packed sentence describing the user’s experience.</p><p>for example,</p><blockquote><p>Swords and Shovels is a light-hearted, action-packed, 2D, top-down dungeon crawler. Alone dwarf and his trusty warthog explore an abandoned mine to seek our glory, riches and loot while avoiding the nightmarish creatures below.</p></blockquote><h1 id="4-Evolving-Your-Idea"><a href="#4-Evolving-Your-Idea" class="headerlink" title="4. Evolving Your Idea"></a>4. Evolving Your Idea</h1><h1 id="5-Thinking-About-the-Game-Core-Mechanics"><a href="#5-Thinking-About-the-Game-Core-Mechanics" class="headerlink" title="5. Thinking About the Game Core Mechanics"></a>5. Thinking About the Game Core Mechanics</h1><p><strong>Things to avoid</strong></p><ul><li>Generalizations</li><li>Words without meaning</li></ul><h1 id="6-Summary"><a href="#6-Summary" class="headerlink" title="6. Summary"></a>6. Summary</h1><ul><li><p>Ideas are small</p></li><li><p>Turn your idea into an action-packed premise</p></li><li><p>Get feedback from the RIGHT people</p></li><li><p>Identify Core Mechanics</p></li></ul><h1 id="7-Managing-the-Scope-of-the-Project"><a href="#7-Managing-the-Scope-of-the-Project" class="headerlink" title="7. Managing the Scope of the Project"></a>7. Managing the Scope of the Project</h1><h1 id="8-Defining-SMART-Goals-for-Your-Game"><a href="#8-Defining-SMART-Goals-for-Your-Game" class="headerlink" title="8. Defining SMART Goals for Your Game"></a>8. Defining SMART Goals for Your Game</h1><h1 id="9-Creating-a-Schedule-for-Your-Game-Project"><a href="#9-Creating-a-Schedule-for-Your-Game-Project" class="headerlink" title="9. Creating a Schedule for Your Game Project"></a>9. Creating a Schedule for Your Game Project</h1><h1 id="10-Creating-Achievable-Time-Estimates"><a href="#10-Creating-Achievable-Time-Estimates" class="headerlink" title="10. Creating Achievable Time Estimates"></a>10. Creating Achievable Time Estimates</h1><h1 id="11-Think-of-the-Gameplay"><a href="#11-Think-of-the-Gameplay" class="headerlink" title="11. Think of the Gameplay"></a>11. Think of the Gameplay</h1><h1 id="12-Creating-the-Pitch"><a href="#12-Creating-the-Pitch" class="headerlink" title="12. Creating the Pitch"></a>12. Creating the Pitch</h1>]]></content>
      
      
      
        <tags>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity简易角色开发</title>
      <link href="/2020/02/16/Unity%E7%AE%80%E6%98%93%E8%A7%92%E8%89%B2%E5%BC%80%E5%8F%91/"/>
      <url>/2020/02/16/Unity%E7%AE%80%E6%98%93%E8%A7%92%E8%89%B2%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<ul><li>建立角色</li><li>动画控制器</li><li>给角色添加组件</li><li>使用Cinemachine</li><li>打包生成游戏</li></ul><a id="more"></a><p>Unity版本：Unity 2018.4.13c1 Personal</p><h1 id="一、建立角色"><a href="#一、建立角色" class="headerlink" title="一、建立角色"></a>一、建立角色</h1><p>从Unity Assets\Unity Fundamentals Source Assets\Character导入Characters.unitypackage</p><p>再Assets/Models/Hero/Models/Hero/FBX下将Hero_Low拖拽到场景中，给Hero_Low添加Player Controller(Script)组件，Nav Mesh Agent组件并修改Radius为0.4，Height为1.6。设置Hero_Low的Tag为Player，Layer为Player。</p><p>再Hierarchy窗口添加空Game Object，命名为MouseManager，为其添加Mouse Manager(Script)组件，Clickable Layer设置为Clickable，并添加鼠标材质：</p><p><img src="/2020/02/16/Unity%E7%AE%80%E6%98%93%E8%A7%92%E8%89%B2%E5%BC%80%E5%8F%91/image-20200226120424579.png" alt="image-20200226120424579"></p><p>添加鼠标点击事件，添加上时间Object拖入Hero_Low，函数选择NavMeshAgent &gt; destination</p><p><img src="/2020/02/16/Unity%E7%AE%80%E6%98%93%E8%A7%92%E8%89%B2%E5%BC%80%E5%8F%91/image-20200226120725080.png" alt="image-20200226120725080"></p><p>创建一个空物体，命名为NavMeshSurface，并为其添加NavMeshSurface（Script）组件</p><p>Agent Type: Open Agent Settings &gt; Radius: 0.4, Height: 1.6。回到Inspector点击Bake。注意到中间木桥处有断开，我们可以在木桥处放一个Cube,并将其Layer设置为Clickable，角色可以走动的地面均选中并将Layer设置为Clickable，然后重新烘焙NavMeshSurface。</p><p><img src="/2020/02/16/Unity%E7%AE%80%E6%98%93%E8%A7%92%E8%89%B2%E5%BC%80%E5%8F%91/image-20200227152928129.png" alt="image-20200227152928129"></p><p>NavMeshSurface连成一块后，把Cube Disable掉即可。</p><p><img src="/2020/02/16/Unity%E7%AE%80%E6%98%93%E8%A7%92%E8%89%B2%E5%BC%80%E5%8F%91/image-20200227153042423.png" alt="image-20200227153042423"></p><p>这时我们可以播放游戏看看角色是否可以走过去了。</p><h1 id="二、动画控制器"><a href="#二、动画控制器" class="headerlink" title="二、动画控制器"></a>二、动画控制器</h1><p>在Assets下新建一个Animations文件夹，在Assets/Animations下新建一个Animation Controller，取名为Hero_Alt，即Hero_Alt.controller文件，双击进入其Animator窗口，界面可以通过按住鼠标中键拖拽，滚动鼠标中键缩放。</p><p>Animator窗口 &gt; Base Layer下有三个状态：Any State, Entry, Exit。</p><p>Entry：初识状态，如角色闲置动画。</p><p>Any State：任何时候都可以转换到的状态，如角色死亡动画。</p><p>Exit：结束状态。</p><p>常用的是Entry和Any State状态。</p><p>在空白处右键Create State &gt; From New Blend Tree，将建好的Blend Tree重命名为Motion Tree，双击进入Motion Tree，将里边的Blend Tree重命名为Speed，Inspector &gt; Parameter重命名为Speed。点击下方的加号 &gt; Add Motion Field，然后给我们的Motion Field选择Motion：anm_dwarfHero_idle。同样的方法，我们再添加一个Motion Field，选择anm_dwarfHero_run</p><p><img src="/2020/02/16/Unity%E7%AE%80%E6%98%93%E8%A7%92%E8%89%B2%E5%BC%80%E5%8F%91/image-20200227201226207.png" alt="image-20200227201226207"></p><p>添加完两个要混合的动画，点击下方动画播放小窗口的播放按钮，此时播放的是闲置动画，当我们把Speed由0播放到1时，角色动画过渡到奔跑动画。</p><p><img src="/2020/02/16/Unity%E7%AE%80%E6%98%93%E8%A7%92%E8%89%B2%E5%BC%80%E5%8F%91/image-20200227202413061.png" alt="image-20200227202413061"></p><p><img src="/2020/02/16/Unity%E7%AE%80%E6%98%93%E8%A7%92%E8%89%B2%E5%BC%80%E5%8F%91/image-20200227202523565.png" alt="image-20200227202523565"></p><p>打开Assets/Scripts下的PlayerController.cs。保存代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.AI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerController</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Animator anim;</span><br><span class="line">    <span class="keyword">private</span> NavMeshAgent agent;</span><br><span class="line">    <span class="comment">// Use this for initializtion</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        anim = GetComponent&lt;Animator&gt;();</span><br><span class="line">        agent = GetComponent&lt;NavMeshAgent&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        anim.SetFloat(<span class="string">"Speed"</span>, agent.velocity.magnitude);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>给角色的Animator组件 &gt; Controller添加RuntimeAnimatorController：Hero_Alt。</p><p><img src="/2020/02/16/Unity%E7%AE%80%E6%98%93%E8%A7%92%E8%89%B2%E5%BC%80%E5%8F%91/image-20200227203943172.png" alt="image-20200227203943172"></p><p>回到Animator窗口，给Parameter添加Speed参数</p><p><img src="/2020/02/16/Unity%E7%AE%80%E6%98%93%E8%A7%92%E8%89%B2%E5%BC%80%E5%8F%91/image-20200227215939191.png" alt="image-20200227215939191"></p><p>回到Scene窗口，点击Play，播放游戏。鼠标点击控制角色，我们的角色行动不在像尸体一样平移，而是有闲置动画，奔跑动画的移动。</p><h1 id="三、给角色添加附件"><a href="#三、给角色添加附件" class="headerlink" title="三、给角色添加附件"></a>三、给角色添加附件</h1><p>将Assets/Models/Hero/Models/Weapons/FBX下的LowpolySword添加到场景中，调整到合适的大小。</p><p>LowpolySword的全身是灰色的，我们需要更新材质。再Assets/Models/Hero/Models/Weapons/Materials下选中Sword.mat，锁定Inspector窗口，找到Assets/Models/Hero/Models/Weapons/Textures，将Sword Base Color.png、Sword Metalic.png、Sword Normal.png分别拖拽到Inspector &gt; Main Maps &gt; Albedo、Metalic、Mormal Map。将Main &gt; Smoothness调整到0.4。</p><p><img src="/2020/02/16/Unity%E7%AE%80%E6%98%93%E8%A7%92%E8%89%B2%E5%BC%80%E5%8F%91/image-20200227221854510.png" alt="image-20200227221854510"></p><p>我们将LowpolySword拖拽到Hero_Low/R_Wrist_Jnt下，然后将LowpolySword的位置旋转角度都归零，调整LowpolySword的角度，使LowpolySword看上去被正确地握在Hero_Low手中。</p><p><img src="/2020/02/16/Unity%E7%AE%80%E6%98%93%E8%A7%92%E8%89%B2%E5%BC%80%E5%8F%91/image-20200227223059895.png" alt="image-20200227223059895"></p><p>播放游戏，可以看到LowpolySword跟随Hero_Low的右手动画运动。</p><p><img src="/2020/02/16/Unity%E7%AE%80%E6%98%93%E8%A7%92%E8%89%B2%E5%BC%80%E5%8F%91/image-20200227223343297.png" alt="image-20200227223343297"></p><h1 id="四、使用Cinemachine制作跟随镜头"><a href="#四、使用Cinemachine制作跟随镜头" class="headerlink" title="四、使用Cinemachine制作跟随镜头"></a>四、使用Cinemachine制作跟随镜头</h1><p>打开Unity菜单栏 &gt; Window &gt; Package Manager，安装Cinemachine插件。</p><p>完成安装后通过Unity菜单栏 &gt; Cinemachine &gt; Create Virtual Camera新建一个虚拟摄像机CM vcam1。</p><p>虚拟摄像机可以覆盖主摄像机的设置。</p><p>在Scene窗口下选择合适的观察角色的视角，选中CM vcam1，按快捷键Ctrl+Shift+F。</p><p>将Hero_Low拖拽到CM vcam1的Inspector &gt; Cinemachine Virtual Camera(Script) &gt; Follow和Look At</p><p><img src="/2020/02/16/Unity%E7%AE%80%E6%98%93%E8%A7%92%E8%89%B2%E5%BC%80%E5%8F%91/image-20200229100523509.png" alt="image-20200229100523509"></p><p>Aim设置为Do nothing，Body选择Framing Transposer。</p><p>转到Game视窗，选中CM vcam1，可以看到画面分为三种区域：</p><p>中间区域（原本的颜色）：叫做死亡区域，LookAt的这个目标在这个区域内，摄像机是不会跟随的。<br>蓝色区域：代表缓冲区域，此时摄像机会开始跟随，使目标在中间的透明区域。<br>红色区域：不可到达区域，跟随过程中目标是不可能到达这些区域的。</p><p>我们可以拖动画面上的直线改变这三种区域的大小。</p><p><img src="/2020/02/16/Unity%E7%AE%80%E6%98%93%E8%A7%92%E8%89%B2%E5%BC%80%E5%8F%91/image-20200229121358207.png" alt="image-20200229121358207"></p><p>播放游戏，控制角色行走，摄像机跟随角色移动。</p><p><img src="/2020/02/16/Unity%E7%AE%80%E6%98%93%E8%A7%92%E8%89%B2%E5%BC%80%E5%8F%91/image-20200229121611685.png" alt="image-20200229121611685"></p><p>我们还可以给虚拟摄像机添加其他设置，例如Noice设置为Basic Muti Channel Perlin，Noice Profile设置为Handheld_normal_mild，Amplitude Gain和Frequency Gain均设置为0.5，这样一来游戏中摄像机就有了轻微的晃动。</p><h1 id="五、打包生成游戏"><a href="#五、打包生成游戏" class="headerlink" title="五、打包生成游戏"></a>五、打包生成游戏</h1><p>将场景保存好后，Unity菜单栏File &gt; Build Settings，确认所有场景都在Scene In Build，选择平台，按需要勾选是否创建VS解决方案或开发build。</p><p>点击Player Settings，在其Inspector面板我们可以修改游戏名称，公司名称，版本号，游戏图标，游戏中的鼠标材质等信息。这里我们添加了一个游戏鼠标材质，其他设置均默认，然后点击Build按钮选好路径生成游戏。</p><p><img src="/2020/02/16/Unity%E7%AE%80%E6%98%93%E8%A7%92%E8%89%B2%E5%BC%80%E5%8F%91/image-20200229145944487.png" alt="image-20200229145944487"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity简易关卡设计</title>
      <link href="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/"/>
      <url>/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<ul><li>ProBuilder和ProGirds</li><li>搭建关卡原型</li></ul><p>…</p><a id="more"></a><p>Unity版本：Unity 2018.4.13c1</p><h1 id="一、安装ProBuilder和ProGrids"><a href="#一、安装ProBuilder和ProGrids" class="headerlink" title="一、安装ProBuilder和ProGrids"></a>一、安装ProBuilder和ProGrids</h1><p>开始之前，新建一个场景命名为“Main”，在Assets文件夹下新建一个Prefabs文件夹用于存放预制体。</p><p>可以回到之前的SampleScene，将之前创建的Player,NPC逐一拖拽到Prefabs文件夹中。</p><p>回到场景Main，开始安装ProBuilder,ProGrids。</p><p>首先通过Unity编辑器的菜单栏上的Window，找到并点击打开Package Manager。</p><p>切换到All packages，找到ProBuilder，选中点击右侧页面中的Install。</p><p>我在Unity 2018.4.13c1 Perconal版本中没有找到ProGrid，需要在进入项目文件夹，在Packages文件夹中找到manifest.json文件，用Notepad++或写字板打开，在dependencies的花括号内添加”com.unity.progrids”: “3.0.3-preview.4”，注意末尾添加英文逗号，保存修改后，回到Unity编辑器会立刻自动安装ProGrids。</p><p>以上工具安装完成后，All packages切换到In packages，会找到已安装的工具。</p><p>关闭Package Manager，在Unity编辑器菜单栏的Tools，点击ProGrids&gt;ProGrids Window打开ProGrids工具窗口，点击ProBuilder&gt;ProBuilder Window打开ProBuilder工具面板，将其拖拽到和Inspector窗口并列。</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200213164149998.png" alt="image-20200213164149998"></p><h1 id="二、搭建关卡原型"><a href="#二、搭建关卡原型" class="headerlink" title="二、搭建关卡原型"></a>二、搭建关卡原型</h1><p>点击New Shape右边的加号，Shape Selector选择Cube点击Build，如果不点击加号，会直接创建Cube。</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200213181034956.png" alt="image-20200213181034956"></p><p>将Cube位置设置为（0，0，0）。通过ProBuilder我们有4种选中方式来选中Cube。</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200213182152004.png" alt="image-20200213182152004"></p><p>面选中模式下，我们选中Cube的一个侧面，拖拽与选中面垂直的坐标方向，将Cube拓长12个单位长度。</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200213183037197.png" alt="image-20200213183037197"></p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200213183402592.png" alt="image-20200213183402592"></p><p>然后用相同的方法，将Cube拓宽到8个单位长度。</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200213183819423.png" alt="image-20200213183819423"></p><p>切换到边选中模式，如图选中最中间的线，然后点击ProBuilder面板的Connect Edges。用同样的方法，将Cube划分为四等份。</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200213184759697.png" alt="image-20200213184759697"></p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200213184916561.png" alt="image-20200213184916561"></p><p>然后在面选中模式下，我们通过Ctrl快捷键连续选中划分成四等份的侧面中间两份，按住Shift键拖拽拓长10个单位长度。</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200213185612029.png" alt="image-20200213185612029"></p><p>再次按住Shift继续拓长2个单位长度，再拓长10个长度。可以看到，停顿的地方会有分界线。</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200213190045975.png" alt="image-20200213190045975"></p><p>然后同时选中尾段（10个单位长度）的两侧，（此时如果坐标轴不在两个面的正中间就点击图中圈起来的Center按钮使坐标系处于正中间，）然后按【R】键切换到比例调节坐标系，使两侧拓宽2个单位长度。</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200213192933928.png" alt="image-20200213192933928"></p><p>放置阶梯：</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200214092936572.png" alt="image-20200214092936572"></p><p>最终完成关卡原型如下：</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200214093318116.png" alt="image-20200214093318116"></p><h1 id="三、配置环境资产"><a href="#三、配置环境资产" class="headerlink" title="三、配置环境资产"></a>三、配置环境资产</h1><ol><li>导入文件</li></ol><p>在Assets文件夹下新建文件夹Materials、Models、Textures，Models下新建文件夹Environment。</p><p>将Unity Fundamentals Source Assets\Level Assets\FBX下的所有文件导入到Assets\Models\Environment中。</p><p>将Unity Fundamentals Source Assets\Level Assets\Materials下的所有文件导入到Assets\Materials中。</p><p>将Unity Fundamentals Source Assets\Level Assets\Textures下的所有文件导入到Assets\Textures中。</p><p>以上文件由美术工作人员制作好。</p><ol start="2"><li>调整材质</li></ol><p>进入Materials,选中Banner，Shader选择Standard(Specular setup)，要批量改变Shader，则同时选中，然后再再Inspector面板里改Shader。此处我们把剩下的材质球全部选中把Shader设置为Standard(Specular setup)。</p><p>接下来选中Barriers，锁定Inspector面板，进入Texture文件夹，把Barriers 01 Diff.tga拖拽到Inspector面板下的Main Maps&gt;Albedo，Albedo指反射率贴图，主要体现模型的纹理和颜色。通常适合放入含有单词Albedo或BaseColor（少数情况Diff或Diffuse）的tga文件。</p><p>把Barriers 01 Spec.tga拖拽到Albedo下方的Specular，把Barriers 01 Norm.tga拖拽到Specular下方的Normal Map，把Barriers 01 occlusion.tga拖拽到Occlusion，把detail normal.png拖拽到Secondary Maps&gt;Normal Map。</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200215104949369.png" alt="image-20200215104949369"></p><p>同理把，把剩下的Bridge、Broken_Bridge、Door、Floor_01、Floor_04、Lantern、Pillar、Stairs、Statue、Wall_01、Wall_02、Wall_03、WoodenPlank全都配置好。其中Door的Emission&gt;Color需要放入Door 01 emiss.tga。</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200215105801961.png" alt="image-20200215105801961"></p><p>配置Banner有些不同，即将Flag 01 Diffuse.tga放到Albedo，Flag 01 normals.tga放到Normal Map，Flag 01 occulsion.tga放到Occlusion。</p><ol start="3"><li>配置材质到模型</li></ol><p>进入Models/Environment,选中Barrier 01.FB。在Inspector面板中点击Materials，勾选Import Materials，在Remapped Materials&gt;Standard_20 点击最右侧的圆圈按钮打开材质选择窗口，选择Barriers，点击Apply。</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200215165602864.png" alt="image-20200215165602864"></p><p>同理，把Barrie_02、Barrier_03、Bridge_01、Broken_Bridge_01、Broken_Bridge_02、Broken_Bridge_03、Broken_Bridge_04、Broken_Floor_01、Door_01、Door_02、Door_03、Door_04、Flag_01（用Banner）、Floor_01（用Floor_01）、Floor_02（用Floor_01）、Floor_03（用Floor_01）、Floor_04（用Floor_04）、Floor_05（用Floor_04）、Floor_06（用Floor_04）、Lantern、Pillar_01、Pillar_02、Pillar_03、Pillar_04、Stairs_01、Statue_01、Wall_01、Wall_02、Wall_03、Wooden_Plank_01、Wooden_Plank_02都配置好。</p><h1 id="五、创建环境预制体"><a href="#五、创建环境预制体" class="headerlink" title="五、创建环境预制体"></a>五、创建环境预制体</h1><h1 id="六、照明"><a href="#六、照明" class="headerlink" title="六、照明"></a>六、照明</h1><p>菜单栏的Window &gt; Rendering &gt; Lighting Settings，打开Lighting窗口，拖拽并dock到Inspector窗口旁边。</p><p>修改Lighting窗口下的Skybox Material，将默认改成BlackSky，使环境全黑。</p><p>选中Directional Light，在其Inspector窗口 &gt; Light &gt; Color，将颜色自定义成淡蓝偏灰的颜色色（冷色）。</p><p>在场景中创建四个Point Light并把它们放置到关卡中四个Lantern上，把它们的颜色都设置成浅橙色（暖色）,调高Intensity，这里设置成3。Range（光照范围）设置为6。根据需要设置Shadow Type，这里设置为No Shadows。</p><p><strong>烘焙照明</strong>，选中Environment，勾选其Inspector面板的Static，（如果询问是否改变子项，选择确认）。</p><p>来到Lighting窗口，确保Realtime Global Illumi勾选，Baked Global Illumi勾选，然后点击下方Generate Lighting按钮或者勾选Auto Generate。</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200225114234325.png" alt="image-20200225114234325"></p><p>等待一段时间直到烘培完成（烘培时间取决于计算机硬件性能）。减小Lightmapping Settiing &gt; Lightmap Size的大小可以稍微加快烘培速度（此处我设置为256）。</p><p>烘焙好照明后，我们给关卡添加Reflection Probe（Hierarchy窗口 &gt; Create &gt; Light &gt; Reflection Probe）。</p><p>调节大小至包围（捕获）地形如图：</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200225120006184.png" alt="image-20200225120006184"></p><p>通过快捷键Ctrl+D快速复制粘贴一份，然后拖动包围旁边的桥（Reflection Probe之间重叠也没关系）</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200225120413589.png" alt="image-20200225120413589"></p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200225120956426.png" alt="image-20200225120956426"></p><p>然后再Lighting窗口 &gt; Other Setting &gt; Generate Light下三角 &gt; Bake Reflection Probes。烘焙Reflection Probes完成后地形的部分阴影会稍微变淡。</p><h1 id="七、粒子系统"><a href="#七、粒子系统" class="headerlink" title="七、粒子系统"></a>七、粒子系统</h1><p>创建粒子系统：Hierarchy &gt; Create &gt; Effects &gt; Particle System</p><p>详细调节：</p><p>Inspector &gt; Particle System &gt; Particle System</p><p>Duration: 1.50</p><p>Looping: ✔</p><p>Prewarm: ✔</p><p>Start Lifetime 点击右边小三角 &gt; Random Between Two Constants</p><p>Start Lifetime: 10, 15 </p><p>Start Speed: 0.1, 0.5（Random Between Two Constants）</p><p>Start Size: 20, 30（Random Between Two Constants）</p><p>Start Rotation: 0, 360（Random Between Two Constants）</p><p>Start Color: 深蓝色</p><p> Max Particles: 100</p><p>点击Particle System可最小化，这时可以看到Emission, Shape等其他可调节项目。</p><p>Emssion:✔</p><p>Rate over Time: 30</p><p>Rate over Distance: 0</p><p>Shape:✔</p><p>Shape: Box</p><p>Emit from: Volume</p><p>Scale: X=125, Y=75, Z=10 设置好后调整粒子系统再场景中的位置使其笼罩整个地形</p><p>Color over Lifetime:✔</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200225213536996.png" alt="image-20200225213536996"></p><p>Color: Alpha=0, Location 100.0%</p><p>如果没有显示Alpha则，拖动一下第一排标尺。</p><p>Size over Lifetime:✔</p><p>Size：先将起点拖动到0.800，然后起点旁边的白点稍微往上拉一点。</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200225214159610.png" alt="image-20200225214159610"></p><p>点击曲线的另一端（红点），这时旁边出现一个白点，向上拉动，使红色曲线接近直线。</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200225221846095.png" alt="image-20200225221846095"></p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200225221926451.png" alt="image-20200225221926451"></p><p>Rotation over Lifetime: ✔</p><p>Angular Veclocity: -5, 5 (Random Between Two Constants)</p><p>Render: ✔</p><p>Normal Direction: 0.7</p><p>Assets/Materials下新建一个材质，取名GlobalFag，其Shader改成Legacy/Shaders/Particle/Additive(Soft)。</p><p>再Assets/Texture下导入Unity Fundamentals Source Assets\Level Assets\VFX下的ParticleCloudWhite.png，然后给GlobalFag的Texture选择ParticleCloudWhite。</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200225225243872.png" alt="image-20200225225243872"></p><p>回到Particle System，Renderer &gt; Material选择GlobalFag。</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200225225407664.png" alt="image-20200225225407664"></p><p>然后回到Lighting窗口点击Generate Lighting</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200225225909485.png" alt="image-20200225225909485"></p><h1 id="八、创造光条纹"><a href="#八、创造光条纹" class="headerlink" title="八、创造光条纹"></a>八、创造光条纹</h1><p>Hierarchy &gt; Create &gt; Effects &gt; Line</p><p>Line &gt; Inspector &gt; Line Render &gt; Cast Shadows改为Off。</p><p>再Assets/Material下新建材质，命名为Streak。</p><p>Streak &gt; Inspector &gt; Shader改为Legacy Shaders/Particles/Additive</p><p>Particle Texture选择Default-Particle</p><p>Line &gt; Inspector &gt; Line Renderer &gt; Positions &gt; Index 1 Z=25, 拖拽Width到10</p><p>修改颜色成由黑过渡到蓝</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200226110435565.png" alt="image-20200226110435565"></p><p>Line Renderer &gt; Materials &gt; Element 0改成Streak</p><p>给Line添加Light组件，并且将Light &gt; Type改成Spot</p><p>Light &gt; Range设置为20，Color设置为浅蓝色，Intensity设置为接近接近20（这里设置为18.23），Cookie选择ParticleCloudWhite，Shadow Type设置为Hard Shadows</p><p>点击Cookie旁边的ParticleCloudWhite，再Assets/Textures找到ParticleCloudWhite，将其Advanced &gt; Wrap Mode改为Clamp</p><p>调整角度，使光照射再门上：</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200226113058044.png" alt="image-20200226113058044"></p><p>给Line改名为Moonlight，保存到Assets/Prefabs/VFX下（拖拽过去）。我们还可以给场景其他地方添加Moonlight:</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200226113755214.png" alt="image-20200226113755214"></p><h1 id="九、创建环境音乐"><a href="#九、创建环境音乐" class="headerlink" title="九、创建环境音乐"></a>九、创建环境音乐</h1><p>在场景中新建一个空Game Object，取名AudioManager，为其添加组件Audio Source。</p><p>在Assets文件夹下新建一个Audio文件夹，向里边导入Unity Fundamentals Source Assets\Audio下的两个音频文件：ForestNight Amb Lp.wav、Torch Lp.wav</p><p>选中AudioManager，将ForestNight Amb Lp.wav添加到Audio Source组件 &gt; AudioClip，勾选Loop，稍微降低Volume（音量）。</p><p>播放游戏，可以听到环境音乐。</p><h1 id="十、后期处理"><a href="#十、后期处理" class="headerlink" title="十、后期处理"></a>十、后期处理</h1><p>打开Unity菜单栏Window &gt; Package Manager，安装Post Processing插件。</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200228161608376.png" alt="image-20200228161608376"></p><p>在Hierarchy窗口新建一个空Game Object，命名为PostProcessing，为其添加组件Post Process Volume(Script)，勾选其属性Is Global（这个属性可以影响游戏整个画面），点击Profile旁边的New创建新的Profile。</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200228200004457.png" alt="image-20200228200004457"></p><p>给Main Camera添加组件Post Processing Layer(Script)，属性Anti-aliasing &gt; Mode设置为Fast Approximate Anti-aliasing(FXAA)。Main Camera的Layer设置为PostProcessing。</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200228200937548.png" alt="image-20200228200937548"></p><p>选中PostProcessing，Layer设置为PostProcessing，在其Post Processing Volume(Script)组件下点击Add effect &gt; Unity &gt; Vignette。展开Vignette，点击All勾选下方全部属性。从Game窗口观察游戏场景，当我们调解Vignette &gt; Intensity时，可以产生让我们的目光聚集在画面中央的效果。</p><p><img src="/2020/02/13/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/image-20200228205934309.png" alt="image-20200228205934309"></p><p>点击Add effect按钮添加Unity &gt; Bloom，勾选其下方所有属性，观察Game画面适当调解Intensity。</p><p>点击Add effect按钮添加Unity &gt; Chromatic Aberration，勾选其下方所有属性，观察Game画面适当调解Intensity。</p><p>点击Add effect按钮添加Unity &gt; Color Grading，勾选其下方所有属性，观察Game画面适当调解Trackball以改变画面色调。</p><p>我们还可以添加Unity &gt; Grain，继续调解画面，这些后期处理可以改善游戏画面，但也会消耗计算机性能，移动端或低配PC不建议过多调节。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity简易关卡原型开发</title>
      <link href="/2020/02/07/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E5%8E%9F%E5%9E%8B%E5%BC%80%E5%8F%91/"/>
      <url>/2020/02/07/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E5%8E%9F%E5%9E%8B%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<ul><li>编写鼠标交互脚本</li><li>使用NavMesh组件实现角色移动</li></ul><p>…</p><a id="more"></a><p>Unity版本：Unity 2018.4.13c1</p><h1 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h1><p>在一个新建的场景下新建一个Cube，调成Cube的大小，使之成为一个扁平面（Scale参考值：x=50，y=0.36，z=50），重命名为“Floor”，重置Floor的位置到（0，0，0）。</p><p>在Floor上方新建一个Capsule,调整大小致合适。</p><p>在Floor上方新建一个Cube,调整大小致门板的样子，重命名为“Door”</p><p>在场景里新建一个空Object，命名为“MouseManager”。</p><p>在项目面板的Assets文件夹下新建一个Materials文件夹，在其中新建一个材质，取名为Gray。将Gray的Inspector面板的MainMaps下把颜色设置成灰色。拖拽Gray致Floor上。</p><p>调整角度到可以同时看到Door、Capsule、Floor和环境的合适位置后，选中Main Camera，使用快捷键【Ctrl + Shift + F】将摄像机快速调整到满足当前观察视角的位置。</p><p>完成后如下图：</p><p><img src="/2020/02/07/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E5%8E%9F%E5%9E%8B%E5%BC%80%E5%8F%91/image-20200207172113295.png" alt="image-20200207172113295"></p><p>在Assets文件夹下新建一个名叫“Cursors”的文件夹，导入png图片素材如下图：</p><p><img src="/2020/02/07/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E5%8E%9F%E5%9E%8B%E5%BC%80%E5%8F%91/image-20200207172929532.png" alt="image-20200207172929532"></p><h1 id="二、编写鼠标交互脚本"><a href="#二、编写鼠标交互脚本" class="headerlink" title="二、编写鼠标交互脚本"></a>二、编写鼠标交互脚本</h1><p>在项目面板的Assets文件夹下新建一个名叫“Scripts”的文件夹，在其中新建一个C#脚本文件，取名为MouseManager</p><p>打开MouseManager.cs，编写代码并确定无错误后保存如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MouseManager</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//which objects are clickable</span></span><br><span class="line">    <span class="keyword">public</span> LayerMask clickableLayer;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//Swap cursors per object</span></span><br><span class="line">    <span class="keyword">public</span> Texture2D pointer;<span class="comment">//Normal Pointer</span></span><br><span class="line">    <span class="keyword">public</span> Texture2D target;<span class="comment">//Cursors for clickable objects like world</span></span><br><span class="line">    <span class="keyword">public</span> Texture2D doorway;<span class="comment">//Cursors for doorways</span></span><br><span class="line">    <span class="keyword">public</span> Texture2D combat;<span class="comment">//Cursors for combat sections</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        RaycastHit hit;</span><br><span class="line">        <span class="keyword">if</span>(Physics.Raycast(Camera.main.ScreenPointToRay(Input.mousePosition), <span class="keyword">out</span> hit, <span class="number">50</span>, clickableLayer.<span class="keyword">value</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">bool</span> door = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span>(hit.collider.gameObject.tag == <span class="string">"Doorway"</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Cursor.SetCursor(doorway, <span class="keyword">new</span> Vector2(<span class="number">16</span>, <span class="number">16</span>), CursorMode.Auto);</span><br><span class="line">                door = <span class="literal">true</span>;                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Cursor.SetCursor(target, <span class="keyword">new</span> Vector2(<span class="number">16</span>, <span class="number">16</span>), CursorMode.Auto);                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Cursor.SetCursor(pointer, Vector2.zero, CursorMode.Auto);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>回到Unity编辑器，选中MouseManager，在Inspector面板点击【Add Component】按钮，搜索到MouseManager后单击添加。</p><p>把Cursors文件夹下的png素材拖拽到Mouse Manager组件如下图：</p><p><img src="/2020/02/07/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E5%8E%9F%E5%9E%8B%E5%BC%80%E5%8F%91/image-20200207174110820.png" alt="image-20200207174110820"></p><p>点击Inspector面板上方的Layers下拉按钮，点击Edit Layers</p><p><img src="/2020/02/07/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E5%8E%9F%E5%9E%8B%E5%BC%80%E5%8F%91/image-20200207174357668.png" alt="image-20200207174357668"></p><p>点开Layers，在User Layers 9填写”Clickable“</p><p><img src="/2020/02/07/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E5%8E%9F%E5%9E%8B%E5%BC%80%E5%8F%91/image-20200207174606366.png" alt="image-20200207174606366"></p><p>在Hierachy面板选中MouseManager，在Inspector面板的MouseManager组件下的Clickable Layer选项点击下拉，把默认的Nothing改选成Clickable</p><p><img src="/2020/02/07/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E5%8E%9F%E5%9E%8B%E5%BC%80%E5%8F%91/image-20200207174838667.png" alt="image-20200207174838667"></p><p>点击播放按钮验证效果。当鼠标移动到Floor上时，鼠标样式为target，当鼠标移动到Door上时，鼠标样式为doorway，当鼠标移动到周围环境时，鼠标样式为pointer。</p><h1 id="三、使用MavMesh组件实现鼠标点击移动"><a href="#三、使用MavMesh组件实现鼠标点击移动" class="headerlink" title="三、使用MavMesh组件实现鼠标点击移动"></a>三、使用MavMesh组件实现鼠标点击移动</h1><p>接上一篇鼠标交互</p><p>将路径Unity Fundamentals Source Assets\NaMeshComponents-Master下的两个文件夹Gizmos和NavMeshComponents拖拽复制到Unity编辑器项目面板Assets文件夹下。</p><p>在Hierachy面板新建一个空Object命名为”NavMesh Surface”，点击NavMesh Surface，在Inspector面板点击Add Component，选择NavMeshSurface。</p><p>点击Inspector面板上方的Layers下拉按钮，选择Edit Layers，在User Layer 10填上Player。</p><p>点击Cupsule，在Inspector面板将Layer设置为Player。</p><p>回到NavMeshSurface的Inspector面板，在NavMeshSurface组件下方，Agent Type默认Humanoid，Include Layers取消勾选Player</p><p>点击Bake按钮创建一层附在Floor上的蓝色NavMesh表面</p><p><img src="/2020/02/07/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E5%8E%9F%E5%9E%8B%E5%BC%80%E5%8F%91/image-20200209104045071.png" alt="image-20200209104045071"></p><p>在Door的Inspector面板添加NavMeshObstacle组件，默认Carve勾选。产生的效果是Capsule无法通过Door，即视Door为一个障碍。</p><p>添加NavMeshModifier组件，取消勾选Ingnore From Build。</p><p>回到NavMesh Surface的Inspector面板，再次点击Bake。</p><p>如果此时向上平移Door，原本Door下方的黑色矩形将消失，视为“门开启”，Capsule可以通过。</p><p>选中Capsule，添加组件NavMeshAgent，Agent Type默认Humanoid。</p><p>在项目面板Scripts文件夹下新建一个C#脚本文件，取名“PlayerController”。</p><p>打开脚本文件，编写代码如下，确认无报错后保存。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.AI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerController</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//private Animator anim;</span></span><br><span class="line">    <span class="keyword">private</span> NavMeshAgent agent;</span><br><span class="line">    <span class="comment">// Use this for initializtion</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">      <span class="comment">//  anim = GetComponent&lt;Animator&gt;();</span></span><br><span class="line">      agent = GetComponent&lt;NavMeshAgent&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打开之前写的MouseManager.cs，修改代码如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.Events;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MouseManager</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//what objects are clickable</span></span><br><span class="line">    <span class="keyword">public</span> LayerMask clickableLayer;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//Swap cursers per object</span></span><br><span class="line">    <span class="keyword">public</span> Texture2D pointer;<span class="comment">//Normal Pointer</span></span><br><span class="line">    <span class="keyword">public</span> Texture2D target;<span class="comment">//Cursers for clickable objects like world</span></span><br><span class="line">    <span class="keyword">public</span> Texture2D doorway;<span class="comment">//Cursers for doorways</span></span><br><span class="line">    <span class="keyword">public</span> Texture2D combat;<span class="comment">//Cursers for combat sections</span></span><br><span class="line">    <span class="keyword">public</span> EventVector3 OnclickEnviroment; </span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        RaycastHit hit;</span><br><span class="line">        <span class="keyword">if</span>(Physics.Raycast(Camera.main.ScreenPointToRay(Input.mousePosition), <span class="keyword">out</span> hit, <span class="number">50</span>, clickableLayer.<span class="keyword">value</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">bool</span> door = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span>(hit.collider.gameObject.tag == <span class="string">"Doorway"</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Cursor.SetCursor(doorway, <span class="keyword">new</span> Vector2(<span class="number">16</span>, <span class="number">16</span>), CursorMode.Auto);</span><br><span class="line">                door = <span class="literal">true</span>;                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Cursor.SetCursor(target, <span class="keyword">new</span> Vector2(<span class="number">16</span>, <span class="number">16</span>), CursorMode.Auto);                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(Input.GetMouseButton(<span class="number">0</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                OnclickEnviroment.Invoke(hit.point);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Cursor.SetCursor(pointer, Vector2.zero, CursorMode.Auto);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[<span class="meta">System.Serializable</span>]</span><br><span class="line">public class EventVector3 : UnityEvent&lt;Vector3&gt;&#123; &#125;</span><br></pre></td></tr></table></figure><p>回到Unity编辑器，MouseManager的Inpspector面板的MouseManager组件多出了Onclick Enviroment(Vector3)。</p><p>从Hierarchy面板拖拽Capsule到None(Object)，点击No function下拉框，勾选NavMeshAgent下的destination。</p><p><img src="/2020/02/07/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E5%8E%9F%E5%9E%8B%E5%BC%80%E5%8F%91/image-20200209165155270.png" alt="image-20200209165155270"></p><p>点击播放后，鼠标单击Floor上任意位置，Capsule移动跟随。</p><p>在Capsule的Inspector面板的NavMeshAgent组件下的Steering部分可以修改移动速度(Speed)、角速度(Angular Speed)、加速度(Acceleration)、制动距离(Stopping Distance)、自动刹车(Auto Braking)。</p><p><img src="/2020/02/07/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E5%8E%9F%E5%9E%8B%E5%BC%80%E5%8F%91/image-20200209170725519.png" alt="image-20200209170725519"></p><h1 id="四、玩家互动行为实现"><a href="#四、玩家互动行为实现" class="headerlink" title="四、玩家互动行为实现"></a>四、玩家互动行为实现</h1><p>修改MouseManager.cs如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.Events;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MouseManager</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//what objects are clickable</span></span><br><span class="line">    <span class="keyword">public</span> LayerMask clickableLayer;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//Swap cursers per object</span></span><br><span class="line">    <span class="keyword">public</span> Texture2D pointer;<span class="comment">//Normal Pointer</span></span><br><span class="line">    <span class="keyword">public</span> Texture2D target;<span class="comment">//Cursers for clickable objects like world</span></span><br><span class="line">    <span class="keyword">public</span> Texture2D doorway;<span class="comment">//Cursers for doorways</span></span><br><span class="line">    <span class="keyword">public</span> Texture2D combat;<span class="comment">//Cursers for combat sections</span></span><br><span class="line">    <span class="keyword">public</span> EventVector3 OnclickEnviroment;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        RaycastHit hit;</span><br><span class="line">        <span class="keyword">if</span>(Physics.Raycast(Camera.main.ScreenPointToRay(Input.mousePosition), <span class="keyword">out</span> hit, <span class="number">50</span>, clickableLayer.<span class="keyword">value</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">bool</span> door = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">bool</span> item = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span>(hit.collider.gameObject.tag == <span class="string">"Doorway"</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Cursor.SetCursor(doorway, <span class="keyword">new</span> Vector2(<span class="number">16</span>, <span class="number">16</span>), CursorMode.Auto);</span><br><span class="line">                door = <span class="literal">true</span>;                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(hit.collider.gameObject.tag == <span class="string">"Item"</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Cursor.SetCursor(combat, <span class="keyword">new</span> Vector2(<span class="number">16</span>, <span class="number">16</span>), CursorMode.Auto);</span><br><span class="line">                item = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Cursor.SetCursor(target, <span class="keyword">new</span> Vector2(<span class="number">16</span>, <span class="number">16</span>), CursorMode.Auto);                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(Input.GetMouseButton(<span class="number">0</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(door)</span><br><span class="line">                &#123;</span><br><span class="line">                    Transform doorway = hit.collider.gameObject.transform;</span><br><span class="line">                    OnclickEnviroment.Invoke(doorway.position);</span><br><span class="line">                    Debug.Log(<span class="string">"DOOR"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(item)</span><br><span class="line">                &#123;</span><br><span class="line">                    Transform itemPos = hit.collider.gameObject.transform;</span><br><span class="line">                    OnclickEnviroment.Invoke(itemPos.position);</span><br><span class="line">                    Debug.Log(<span class="string">"ITEM"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    OnclickEnviroment.Invoke(hit.point);   </span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Cursor.SetCursor(pointer, Vector2.zero, CursorMode.Auto);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[<span class="meta">System.Serializable</span>]</span><br><span class="line">public class EventVector3 : UnityEvent&lt;Vector3&gt;&#123; &#125;</span><br></pre></td></tr></table></figure><p>回到Unity编辑器，在Floor上新建一个Cube。</p><p>将其Layer设置成Clickable，点击Untagged按钮，选择Add Tag，点击加号按钮，填写“Item”，保存。</p><p><img src="/2020/02/07/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E5%8E%9F%E5%9E%8B%E5%BC%80%E5%8F%91/image-20200209185228053.png" alt="image-20200209185228053"></p><p>点击播放，当鼠标点击Door后，Unity编辑器控制台打印消息“DOOR”，当鼠标点击Cube后，控制台打印消息消息“ITEM”。</p><p><img src="/2020/02/07/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E5%8E%9F%E5%9E%8B%E5%BC%80%E5%8F%91/image-20200209190218401.png" alt="image-20200209190218401"></p><h1 id="五、NPC原型设计"><a href="#五、NPC原型设计" class="headerlink" title="五、NPC原型设计"></a>五、NPC原型设计</h1><p>在Scripts文件夹下新建两个C#脚本文件，分别命名为“NPCController.cs”，“PlayerController.cs”。</p><p>NPCController.cs代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.AI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">NPCController</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">float</span> patrolTime = <span class="number">10f</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">float</span> aggroRange = <span class="number">10f</span>;</span><br><span class="line">    <span class="keyword">public</span> Transform[] waypoints;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> index;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> speed, agentSpeed;</span><br><span class="line">    <span class="keyword">private</span> Transform player;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Animator anim;</span><br><span class="line">    <span class="keyword">private</span> NavMeshAgent agent;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        anim= GetComponent&lt;Animator&gt;();</span><br><span class="line">        agent =GetComponent&lt;NavMeshAgent&gt;();</span><br><span class="line">        <span class="keyword">if</span>(agent != <span class="literal">null</span>) &#123; agentSpeed = agent.speed; &#125;</span><br><span class="line">        player = GameObject.FindGameObjectWithTag(<span class="string">"Player"</span>).transform;</span><br><span class="line">        index = Random.Range(<span class="number">0</span>, waypoints.Length);</span><br><span class="line"></span><br><span class="line">        InvokeRepeating(<span class="string">"Tick"</span>, <span class="number">0</span> , <span class="number">0.5f</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(waypoints.Length &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            InvokeRepeating(<span class="string">"Patrol"</span>, <span class="number">0</span>, patrolTime);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Patrol</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        index= index == waypoints.Length - <span class="number">1</span> ? <span class="number">0</span> : index + <span class="number">1</span>;  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Tick</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        agent.destination = waypoints[index].position;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PlayerController.cs代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.AI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerController</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//private Animator anim;</span></span><br><span class="line">    <span class="keyword">private</span> NavMeshAgent agent;</span><br><span class="line">    <span class="comment">// Use this for initializtion</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">      <span class="comment">//  anim = GetComponent&lt;Animator&gt;();</span></span><br><span class="line">      agent = GetComponent&lt;NavMeshAgent&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>复制Capsule一个，移到Door旁边，重命名为NPC，原来的Capsule命名为Player。</p><p>给NPC添加NPCController组件，PlayerController组件虽然暂时用不上，但可以先添加到Player上。</p><p>在Hierarchy面板新建一个空Object Waypoint (1)，在Inspector面板修改图标颜色，操作如下图。</p><p><img src="/2020/02/07/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E5%8E%9F%E5%9E%8B%E5%BC%80%E5%8F%91/image-20200213125222589.png" alt="image-20200213125222589"></p><p>复制Waypoint (1)，粘贴自动生成一个Waypoint (2)。把两个Waypoint平移到Floor上方便观察的位置。</p><p>选中NPC，点击Inspector面板的锁定面板按钮，同时选中Hierarchy面板的Waypoint (1)、Waypoint (2)拖拽到NPC的NPCController组件下的Waypoints</p><p><img src="/2020/02/07/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E5%8E%9F%E5%9E%8B%E5%BC%80%E5%8F%91/image-20200213130047903.png" alt="image-20200213130047903"></p><p>拖拽Waypoint过来后：</p><p><img src="/2020/02/07/Unity%E7%AE%80%E6%98%93%E5%85%B3%E5%8D%A1%E5%8E%9F%E5%9E%8B%E5%BC%80%E5%8F%91/image-20200213130137382.png" alt="image-20200213130137382"></p><p>解除NPC的Inspector面板锁定，保存场景，点击Play播放。</p><p>我们发现NPC会先自己移动到Waypoint (1)，过了几秒后自己移动到Waypoint (2)，然后回到Waypoint (1)，循环往复。</p><h1 id="六、NPC跟踪玩家角色"><a href="#六、NPC跟踪玩家角色" class="headerlink" title="六、NPC跟踪玩家角色"></a>六、NPC跟踪玩家角色</h1><p>修改NPCController.cs的Tick函数如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Tick</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    agent.destination = waypoints[index].position;</span><br><span class="line">    agent.speed = agentSpeed / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(player != <span class="literal">null</span> &amp;&amp; Vector2.Distance(transform.position, player.position) &lt; aggroRange)</span><br><span class="line">    &#123;</span><br><span class="line">        agent.destination = player.position;</span><br><span class="line">        agent.speed = agentSpeed;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存后回到Unity编辑器，把NPC的NavMeshAgent组件下的Steering&gt;StoppingDistance设为1.5。</p><p>保存场景后点击播放按钮，我们发现，当鼠标点击Floor后，Player移动，NPC跟随在后。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win32窗口</title>
      <link href="/2020/01/29/Win32%E7%AA%97%E5%8F%A3/"/>
      <url>/2020/01/29/Win32%E7%AA%97%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<p>没写完…</p><a id="more"></a><h1 id="一、创建项目"><a href="#一、创建项目" class="headerlink" title="一、创建项目"></a>一、创建项目</h1><ul><li>开发软件：VS2017</li></ul><p>新建项目 &gt; Visual C++ &gt; Windows桌面 &gt; Windows桌面向导，填好项目名，项目路径后，下一步，选择“桌面应用程序(.exe)”，勾选“空项目”，点击确定。</p><p>PS：在VS2013、2015中，窗口程序叫”Win32项目“，在VS2017、2019中叫做“桌面应用程序”。</p><h1 id="二、"><a href="#二、" class="headerlink" title="二、"></a>二、</h1><p>在线搜索API网址：<a href="https://docs.microsoft.com/zh-cn/" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/</a></p><ol><li><p>头文件：windows.h文件是win32 API的主要头文件，首字母大小写都行。</p></li><li><p>主函数WinMain：是main函数的一个自定义函数，在底层由main函数调用它。</p><p>右键函数名，选择“转到定义”可以查看函数的具体定义。</p><ol><li><p>返回值为int类型。</p></li><li><p>调用约定</p><ul><li>WINAPI</li><li>作用：决定函数名字编译方式、参数入栈顺序、函数逻辑调用时间</li></ul></li><li><p>参数：由系统传递供我们使用</p><ul><li><p>HINSTANCE hInstance：实例句柄，当前软件运行时，系统分配给的唯一ID，int类型。</p></li><li><p>HINSTANCE hPreInstance：前一个实例句柄，即前一个打开的软件的句柄，值为NULL，功能名存实亡。</p></li><li><p>LPSTR lpCmdLine：命令行参数，main函数传递到WinMain函数的参数，类型为char*，</p><p>PS：P或LP开头的转义变量类型均为指针类型</p></li><li><p>int nShowCmd：窗口显示方式，默认是窗口正常显示，值为1</p></li><li><p>SAL：微软源代码注释语言（8个）</p><p>功能：提醒编译器帮我们检查函数参数可能存在的问题，避免这些问题在运行时爆发。</p></li></ul></li><li><p>SDL：安全开发生命周期</p></li></ol></li></ol><h1 id="三、"><a href="#三、" class="headerlink" title="三、"></a>三、</h1><ol><li>WNDCLASS：窗口类（类是结构体的拓展）</li><li>WNDCLASSEX：拓展版本的窗口类</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2.5D回合制游戏Demo实现</title>
      <link href="/2020/01/27/2D%E5%9B%9E%E5%90%88%E5%88%B6%E6%B8%B8%E6%88%8FDemo%E5%AE%9E%E7%8E%B0/"/>
      <url>/2020/01/27/2D%E5%9B%9E%E5%90%88%E5%88%B6%E6%B8%B8%E6%88%8FDemo%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p>没写完…</p><a id="more"></a><ol><li>Win32窗口的机制</li><li>GDI绘图原理：基本原理、三缓冲体系</li><li>C/C++变量、数据结构、算法、库函数</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lua函数</title>
      <link href="/2020/01/26/Lua%E5%87%BD%E6%95%B0/"/>
      <url>/2020/01/26/Lua%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>没写完…</p><a id="more"></a><h1 id="一、求最大值与函数作为参数传递"><a href="#一、求最大值与函数作为参数传递" class="headerlink" title="一、求最大值与函数作为参数传递"></a>一、求最大值与函数作为参数传递</h1><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">max</span><span class="params">(num1, num2)</span></span></span><br><span class="line"><span class="keyword">if</span> (num1 &gt; num2) <span class="keyword">then</span></span><br><span class="line">result = num1;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">result = num2;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"两值比较最大值为"</span>,<span class="built_in">max</span>(<span class="number">10</span>,<span class="number">4</span>));</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"两值比较最大值为"</span>,<span class="built_in">max</span>(<span class="number">5</span>,<span class="number">6</span>));</span><br><span class="line"></span><br><span class="line">myprint = <span class="function"><span class="keyword">function</span><span class="params">(param)</span></span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"这是一个打印函数-##"</span>, param,<span class="string">"##"</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span><span class="params">(num1, num2, functionPrint)</span></span></span><br><span class="line">result = num1 + num2;</span><br><span class="line">functionPrint(result);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">myprint(<span class="number">10</span>);</span><br><span class="line">add(<span class="number">2</span>, <span class="number">5</span>, myprint);</span><br></pre></td></tr></table></figure><blockquote><p>两值比较最大值为    10<br>两值比较最大值为    6<br>这是一个打印函数-##    10    ##<br>这是一个打印函数-##    7    ##</p></blockquote><h1 id="二、多返回值"><a href="#二、多返回值" class="headerlink" title="二、多返回值"></a>二、多返回值</h1>]]></content>
      
      
      
        <tags>
            
            <tag> Lua </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lua变量、赋值语句、索引、循环、流程控制</title>
      <link href="/2020/01/26/Lua%E5%8F%98%E9%87%8F/"/>
      <url>/2020/01/26/Lua%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<p>变量、赋值语句、索引、循环、流程控制</p><a id="more"></a><h1 id="一、变量"><a href="#一、变量" class="headerlink" title="一、变量"></a>一、变量</h1><ul><li>全局变量</li><li>局部变量</li><li>表中的域</li></ul><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">5</span>; <span class="comment">-- 全局变量</span></span><br><span class="line"><span class="keyword">local</span> b = <span class="number">5</span>; <span class="comment">-- 局部变量</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">joke</span><span class="params">()</span></span></span><br><span class="line">c = <span class="number">5</span>; <span class="comment">-- 全局变量</span></span><br><span class="line"><span class="keyword">local</span> d = <span class="number">6</span>; <span class="comment">--局部变量</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"a\t"</span>..<span class="string">"b\t"</span>..<span class="string">"c\t"</span>..<span class="string">"d"</span>)</span><br><span class="line"><span class="built_in">print</span>(a, b, c, d);</span><br><span class="line"></span><br><span class="line">joke();</span><br><span class="line"><span class="built_in">print</span>(a, b, c, d);</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">local</span> a = <span class="number">6</span>; <span class="comment">-- 局部变量</span></span><br><span class="line">b = <span class="number">6</span>; <span class="comment">-- 对局部变量重新赋值</span></span><br><span class="line"><span class="built_in">print</span>(a, b);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a, b);</span><br></pre></td></tr></table></figure><blockquote><p>a    b    c    d<br>5    5    nil    nil<br>5    5    5    nil<br>6    6<br>5    6</p></blockquote><h1 id="二、赋值语句"><a href="#二、赋值语句" class="headerlink" title="二、赋值语句"></a>二、赋值语句</h1><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a, b, c = <span class="number">0</span>, <span class="number">1</span>;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"a\t"</span>..<span class="string">"b\t"</span>..<span class="string">"c"</span>)</span><br><span class="line"><span class="built_in">print</span>(a, b, c);</span><br><span class="line"></span><br><span class="line">a, b = a+<span class="number">1</span>,b+<span class="number">1</span>,b+<span class="number">2</span>; <span class="comment">-- 没有被赋值的变量会被忽略</span></span><br><span class="line"><span class="built_in">print</span>(a, b, c);</span><br><span class="line"></span><br><span class="line">a, b, c = <span class="number">0</span>; <span class="comment">-- 同时为多个变量赋相同的值</span></span><br><span class="line"><span class="built_in">print</span>(a, b, c);</span><br></pre></td></tr></table></figure><blockquote><p>a    b    c<br>0    1    nil<br>1    2    nil<br>0    nil    nil</p></blockquote><h1 id="三、索引"><a href="#三、索引" class="headerlink" title="三、索引"></a>三、索引</h1><p>t[i]或t.i，t.i是当索引为字符串类型时的一种简化写法。</p><p>gettable_event(t, i)采用索引访问本质上时一个类似这样的函数调用。</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">site = &#123;&#125;;</span><br><span class="line">site[<span class="string">"key"</span>] = <span class="string">"www.baidu.com"</span>;</span><br><span class="line"><span class="built_in">print</span>(site[<span class="string">"key"</span>]); <span class="comment">-- 建议写法</span></span><br><span class="line"><span class="built_in">print</span>(site.key); <span class="comment">-- 不建议写法</span></span><br></pre></td></tr></table></figure><blockquote><p><a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a><br><a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a></p></blockquote><h1 id="四、循环"><a href="#四、循环" class="headerlink" title="四、循环"></a>四、循环</h1><p>循环体：while, for, repeat…until</p><p>循环控制语句：break</p><h1 id="五、流程控制"><a href="#五、流程控制" class="headerlink" title="五、流程控制"></a>五、流程控制</h1><p>if语句：if … then … else … end</p><p>if嵌套</p>]]></content>
      
      
      
        <tags>
            
            <tag> Lua </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lua数据类型</title>
      <link href="/2020/01/25/Lua%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2020/01/25/Lua%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<p>布尔、数字、字符串、表、函数、线程、自定义</p><a id="more"></a><h1 id="一、布尔类型"><a href="#一、布尔类型" class="headerlink" title="一、布尔类型"></a>一、布尔类型</h1><p>Lua把false和nil看作是假，其他都看作是真</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="literal">true</span>));</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="literal">false</span>));</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="literal">nil</span>));</span><br></pre></td></tr></table></figure><blockquote><p>boolean<br>boolean<br>nil</p></blockquote><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="literal">false</span> <span class="keyword">or</span> <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"至少有一个是true"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"false nil都为false"</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><blockquote><p>false nil都为false</p></blockquote><h1 id="二、数字类型（number）"><a href="#二、数字类型（number）" class="headerlink" title="二、数字类型（number）"></a>二、数字类型（number）</h1><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="number">2</span>));</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="number">2.2</span>));</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="number">0.2</span>));</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="number">2e+1</span>));</span><br><span class="line"><span class="built_in">print</span>(<span class="number">2e+1</span>);</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="number">0.2e-1</span>));</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="number">1.25489e-6</span>));</span><br></pre></td></tr></table></figure><blockquote><p>number<br>number<br>number<br>number<br>20<br>number<br>number</p></blockquote><h1 id="三、字符串（String）"><a href="#三、字符串（String）" class="headerlink" title="三、字符串（String）"></a>三、字符串（String）</h1><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">"Hi,I'm MJ."</span>;</span><br><span class="line">str2 = <span class="string">"Hello, MJ.Nice to meet you."</span>;</span><br><span class="line"><span class="built_in">print</span>(str1..<span class="string">"\n"</span>..str2)</span><br><span class="line"><span class="comment">-- 一块字符串</span></span><br><span class="line">html = <span class="string">[[</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;a href = "www.baidu.com"&gt;百度搜索&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">]]</span></span><br><span class="line"><span class="built_in">print</span>(html);</span><br></pre></td></tr></table></figure><blockquote><p>Hi,I’m MJ.<br>Hello, MJ.Nice to meet you.<br>    <html></html></p><pre><code>&lt;head&gt;&lt;/head&gt;</code></pre><p>​        <body><br>​            <a href="www.baidu.com">百度搜索</a><br>​        </body><br>​    </p></blockquote><p>在进行数字相加时，lua会自动把字符串转成数字</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">'2'</span> + <span class="number">3</span>);</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'2'</span> + <span class="string">'3'</span>);</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'n'</span>..<span class="string">'b'</span>); <span class="comment">-- 字符串连接</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">123</span> .. <span class="number">456</span>); <span class="comment">-- 数字连接，数字与点号间要有空格</span></span><br><span class="line"></span><br><span class="line">website = <span class="string">"www.baidu.com"</span></span><br><span class="line"><span class="built_in">print</span>(#website); <span class="comment">-- 输出字符串长度</span></span><br><span class="line"><span class="built_in">print</span>(#<span class="string">"www.baidu.com"</span>)</span><br></pre></td></tr></table></figure><blockquote><p>5<br>5<br>nb<br>123456<br>13<br>13</p></blockquote><h1 id="四、表（table）"><a href="#四、表（table）" class="headerlink" title="四、表（table）"></a>四、表（table）</h1><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> tb1 = &#123;&#125;; <span class="comment">-- 创建一个空表</span></span><br><span class="line"><span class="keyword">local</span> tb2 = &#123;<span class="string">"Java"</span>,<span class="string">"Python"</span>,<span class="string">"Lua"</span>,<span class="string">"C++"</span>&#125;; <span class="comment">-- 直接初始化表</span></span><br><span class="line"><span class="comment">-- 关联数组</span></span><br><span class="line">a = &#123;&#125;;</span><br><span class="line">a[<span class="string">"key"</span>] = <span class="string">"value"</span>;</span><br><span class="line">key = <span class="number">10</span>;</span><br><span class="line">a[key] = <span class="number">22</span>;</span><br><span class="line">a[key] = a[key] + <span class="number">11</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> <span class="built_in">pairs</span>(a) <span class="keyword">do</span></span><br><span class="line"><span class="built_in">print</span>(k.. <span class="string">" : "</span> ..v);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> tb1 = &#123;<span class="string">"Java"</span>,<span class="string">"Python"</span>,<span class="string">"Lua"</span>,<span class="string">"C++"</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> key, val <span class="keyword">in</span> <span class="built_in">pairs</span>(tb1) <span class="keyword">do</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"key"</span>, key);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">a3 = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i = <span class="number">1</span>, <span class="number">10</span> <span class="keyword">do</span></span><br><span class="line">a3[i] = i;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">a3[<span class="string">"key"</span>] = <span class="string">"val"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a3[<span class="string">"key"</span>]);</span><br><span class="line"><span class="built_in">print</span>(a3[<span class="string">"none"</span>]);</span><br></pre></td></tr></table></figure><blockquote><p>key : value<br>10 : 33<br>key    1<br>key    2<br>key    3<br>key    4<br>val<br>nil</p></blockquote><h1 id="五、函数"><a href="#五、函数" class="headerlink" title="五、函数"></a>五、函数</h1><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">factorial1</span><span class="params">(n)</span></span></span><br><span class="line"><span class="keyword">if</span> n == <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> n * factorial1(n<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">print</span>(factorial1(<span class="number">5</span>));</span><br><span class="line"></span><br><span class="line">factorial2 = factorial1;</span><br><span class="line"><span class="built_in">print</span>(factorial2(<span class="number">5</span>));</span><br></pre></td></tr></table></figure><blockquote><p>120<br>120</p></blockquote><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">testFun</span><span class="params">(tab, fun)</span></span></span><br><span class="line"><span class="keyword">for</span> k, v <span class="keyword">in</span> <span class="built_in">pairs</span>(tab) <span class="keyword">do</span></span><br><span class="line"><span class="built_in">print</span>(fun(k, v))</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">tab = &#123;key1 = <span class="string">"val1"</span>, key2 = <span class="string">"val2"</span>&#125;;</span><br><span class="line"><span class="comment">-- function可以以匿名函数的方式通过参数传递</span></span><br><span class="line">testFun(tab,</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">(key, val)</span></span> <span class="comment">-- 匿名函数</span></span><br><span class="line"><span class="keyword">return</span> key .. <span class="string">" = "</span> .. val;</span><br><span class="line"><span class="keyword">end</span>);</span><br></pre></td></tr></table></figure><blockquote><p>key1 = val1<br>key2 = val2</p></blockquote><h1 id="六、线程（Thread）"><a href="#六、线程（Thread）" class="headerlink" title="六、线程（Thread）"></a>六、线程（Thread）</h1><h1 id="七、自定义类型（Userdata）"><a href="#七、自定义类型（Userdata）" class="headerlink" title="七、自定义类型（Userdata）"></a>七、自定义类型（Userdata）</h1>]]></content>
      
      
      
        <tags>
            
            <tag> Lua </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lua入门</title>
      <link href="/2020/01/23/Lua%E5%85%A5%E9%97%A8/"/>
      <url>/2020/01/23/Lua%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>标识符、关键字、全局变量、数据类型</p><a id="more"></a><h1 id="一、环境搭建"><a href="#一、环境搭建" class="headerlink" title="一、环境搭建"></a>一、环境搭建</h1><p>Windows上安装IDE：SciTE</p><p>下载地址：<a href="https://github.com/rjpcomputing/luaforwindows/releases" target="_blank" rel="noopener">https://github.com/rjpcomputing/luaforwindows/releases</a></p><p>选好安装路径，一路Next，完成安装后即可在该环境下编写 Lua 程序并运行。</p><p>在哪运行？<br><img src="/2020/01/23/Lua%E5%85%A5%E9%97%A8/image-20200123115402942.png" alt="image-20200123115402942"></p><p>快捷键Ctrl+D，复制光标所在行并插入到光标的下一行。</p><h1 id="二、交互式编程、脚本编程、注释写法"><a href="#二、交互式编程、脚本编程、注释写法" class="headerlink" title="二、交互式编程、脚本编程、注释写法"></a>二、交互式编程、脚本编程、注释写法</h1><ol><li><p>交互式编程方式</p><p>打开cmd控制命令窗口，使用命令：</p><blockquote><p>Lua -i</p></blockquote></li><li><p>脚本式编程方式</p><p>将Lua代码保存成.lua文件然后运行。</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/<span class="keyword">local</span>/bin/lua</span><br><span class="line">   </span><br><span class="line">   <span class="built_in">print</span>(<span class="string">"Hello world!"</span>);</span><br></pre></td></tr></table></figure><p>上边第一行表示指定解释器，解释器执行时会忽略井号开头的第一行。</p></li><li><p>注释格式</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 单行注释</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--[[多行注释</span></span><br><span class="line"><span class="comment">多行注释</span></span><br><span class="line"><span class="comment">多行注释</span></span><br><span class="line"><span class="comment">--]]</span></span><br></pre></td></tr></table></figure><h1 id="三、标识符、关键字"><a href="#三、标识符、关键字" class="headerlink" title="三、标识符、关键字"></a>三、标识符、关键字</h1></li><li><p>标识符组成</p><ul><li><p>字母、数字、下划线；</p></li><li><p>必须以字母/下划线开头；</p></li><li><p>区分大小写；</p></li></ul></li><li><p>关键字</p><ul><li>保留关键字不能用作变量名或自定义标识符：<br>and, break, do, else, elseif, end, false, for, function, if, in , local, nil, not, or, repeat, return, then, true, until, while</li><li>一般约定，用下划线开头连接一串大写字母的名字比如：_VERSION，被保留用于Lua内部全局变量。</li></ul></li></ol><h1 id="四、全局变量"><a href="#四、全局变量" class="headerlink" title="四、全局变量"></a>四、全局变量</h1><ul><li><p>全局变量：</p><ul><li>默认情况下，变量总被认为是全局的，全局变量不需要声明，给一个变量赋值即可创建该全局变量。</li><li>写在函数外部</li><li>作用范围从定义的那一行开始到文件末尾</li></ul><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">b = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">print</span>(b);</span><br><span class="line">b = <span class="literal">nil</span>; <span class="comment">-- 要删除一个变量，就给它赋值为nil</span></span><br><span class="line"><span class="built_in">print</span>(b); <span class="comment">-- 当且仅当一个变量的值不为nil时，这个变量即存在</span></span><br></pre></td></tr></table></figure><blockquote><p>10<br>nil</p></blockquote></li><li><p>局部变量：</p><ul><li>用关键字“local”定义</li><li>写在函数内，if语句内</li><li>作用范围从定义的那一行开始到函数结束或return</li></ul></li></ul><h1 id="五、数据类型"><a href="#五、数据类型" class="headerlink" title="五、数据类型"></a>五、数据类型</h1><p>Lua的8种数据类型：<br>      nil(无效值), boolean, number(双精度实浮点数), string, userdata(任意存储在变量中的C数据结构), function, thread(独立线程),  table(表，关联数组，通过构造表达式产生)</p>   <figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="string">"Hello World!"</span>)); <span class="comment">-- 建议用双引号讲字符串括起来，用单引号括单个字符</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="number">10.4</span> * <span class="number">3</span>));</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="built_in">print</span>));</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="built_in">type</span>));</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="literal">true</span>));</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="literal">nil</span>));</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="built_in">type</span>(X))); <span class="comment">-- type()返回结果是字符串</span></span><br></pre></td></tr></table></figure><blockquote><p>string<br>number<br>function<br>function<br>boolean<br>nil<br>string</p></blockquote>   <figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tab1 = &#123;key1 = <span class="string">"val1"</span>, key2 = <span class="string">"val2"</span>,<span class="string">"val3"</span>&#125;</span><br></pre></td></tr></table></figure><p>for k,v in pairs(tab1) do<br>    print(k..” - “.. v) – “..”表示连接<br>end<br>print(“——“)<br>tab1.key1 = nil; – 可以用nil删除键值对<br>for k,v in pairs(tab1) do<br>    print(k.. “ - “.. v)<br>end<br>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">   &gt;1 - val3</span><br><span class="line">   &gt; key1 - val1</span><br><span class="line">   &gt; key2 - val2</span><br><span class="line">   &gt; </span><br><span class="line">   &gt; 1 - val3</span><br><span class="line">   &gt; key2 - val2</span><br><span class="line"></span><br><span class="line">   &#96;&#96;&#96;lua</span><br><span class="line">print(type(X) &#x3D;&#x3D; nil);</span><br><span class="line">print(type(X) &#x3D;&#x3D; &quot;nil&quot;);</span><br></pre></td></tr></table></figure></p><blockquote><p>false<br>true</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Lua </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何设置Win10右键打开CMD</title>
      <link href="/2020/01/23/%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AEWin10%E5%8F%B3%E9%94%AE%E6%89%93%E5%BC%80CMD/"/>
      <url>/2020/01/23/%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AEWin10%E5%8F%B3%E9%94%AE%E6%89%93%E5%BC%80CMD/</url>
      
        <content type="html"><![CDATA[<p>转载出自：<a href="https://blog.csdn.net/itas109/article/details/86618799" target="_blank" rel="noopener">https://blog.csdn.net/itas109/article/details/86618799</a></p><p>将如下代码保存为*.reg的注册表文件，双击运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\cmd_here]</span><br><span class="line">&quot;ShowBasedOnVelocityId&quot;&#x3D;dword:00639bc8</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\cmd_here\command]</span><br><span class="line">@&#x3D;&quot;cmd.exe &#x2F;s &#x2F;k pushd \&quot;%V\&quot;&quot;</span><br></pre></td></tr></table></figure><p>效果：</p><p><img src="/2020/01/23/%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AEWin10%E5%8F%B3%E9%94%AE%E6%89%93%E5%BC%80CMD/image-20200123113510340.png" alt="image-20200123113510340"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Unity C#脚本基础</title>
      <link href="/2020/01/18/Unity%20C%20Sharp%E8%84%9A%E6%9C%AC%E5%9F%BA%E7%A1%80/"/>
      <url>/2020/01/18/Unity%20C%20Sharp%E8%84%9A%E6%9C%AC%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<p>Unity版本：Unity 2017.4.35f1 Personal</p><a id="more"></a><h1 id="一、在Unity中创建C-脚本"><a href="#一、在Unity中创建C-脚本" class="headerlink" title="一、在Unity中创建C#脚本"></a>一、在Unity中创建C#脚本</h1><ol><li><p>Project&gt;Assets下新建一个叫“Scripts”的文件夹用于存放脚本</p></li><li><p>在Scripts文件夹下右键&gt;Create&gt;C# Script，取名“ExampleScript”</p></li></ol><p>两种方法给物体添加脚本：</p><ol><li><p>左键单击并将脚本从项目文件夹拖拽到物体上</p></li><li><p>在物体的Inspector窗口点击Add Component按钮，选择Scripts添加现有的脚本。</p><p>通过Add Component按钮，选择New Script添加新建脚本，但脚本是被添加到Assets文件夹，而非Scripts文件夹。</p></li></ol><p>删除物体的脚本：在物体的Inspector面板找到例如ExampleScript(Script)，点击小齿轮，选择Remove Component</p><p>调试时打开和关闭脚本：勾选或取消勾选相应的脚本。脚本中可能有错误，如果禁用它，它可能仍会出现并在底部显示错误。因此需要使用代码注释来屏蔽代码块</p><p>注意：项目窗口的脚本删除后无法撤销删除。</p><h1 id="二、脚本结构"><a href="#二、脚本结构" class="headerlink" title="二、脚本结构"></a>二、脚本结构</h1><p>双击ExampleScript将自动加载到Visual Studio 2017，如果遇到”File Modification Detected“弹窗，选择“Reload All”重新加载脚本。在Visual Studio将看到ExampleScript.cs的代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;<span class="comment">//命名空间</span></span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;<span class="comment">//命名空间只是引用类的名称的集合</span></span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">NewBehaviourScript</span> : <span class="title">MonoBehaviour</span> &#123;</span><br><span class="line"><span class="comment">//每一个通过Unity新建的脚本都继承自MonoBehavior</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Use this for initialization</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span> (<span class="params"></span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Update is called once per frame</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span> (<span class="params"></span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>MonoBehavior</strong>来自命名空间UnityEngine，每一个通过Unity新建的脚本都继承自MonoBehavior。</p><p>MonoBehavior允许你将脚本作为组件附加到游戏对象中。</p><p><strong>类(Class)</strong>，只是变量和方法的容器</p><p>注意到，类名和.cs文件名相同。如果要修改类的名字，.cs文件名也要一起修改。</p><p>起始函数Start()：脚本一启动就执行的方法。</p><p>更新函数Update()：每一帧都在执行以保证更新的方法。</p><h1 id="三、对游戏对象的基本操作"><a href="#三、对游戏对象的基本操作" class="headerlink" title="三、对游戏对象的基本操作"></a>三、对游戏对象的基本操作</h1><h2 id="1-访问、操纵游戏对象组件"><a href="#1-访问、操纵游戏对象组件" class="headerlink" title="1. 访问、操纵游戏对象组件"></a>1. 访问、操纵游戏对象组件</h2><ol><li><p>导入资源包：首先在Assets文件夹导入Unity_C_Sharp_Fundamentals_Assets.unitypackage。</p></li><li><p>创建一个Floor：在Assets/Standard Assets/Prototyping/Prefabs下找到FloorPrototype08x01x08，拖拽到场景中，重置其位置。</p></li><li><p>放入角色：在Assets/Prefabs下找到dwarf_hero，拖拽到场景中的Floor上。给角色添加Capsule Collider组件，并将Capsule Collider下的Center &gt; Y设为0.8，Radius设为0.4，Height设为1.6。</p></li><li><p>为角色添加脚本：在Assets/Scripts下创建脚本Player.cs，打开脚本，编辑代码如下并保存。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">MonoBehaviour</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> CapsuleCollider playerConllider;</span><br><span class="line"><span class="comment">// Use this for initialization</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span> (<span class="params"></span>)</span> &#123;</span><br><span class="line">        playerConllider = GetComponent&lt;CapsuleCollider&gt;();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Update is called once per frame</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span> (<span class="params"></span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>回到Unity编辑器，将Player.cs拖拽到角色的Inspector窗口里。可以看到角色增加了一个叫Player(Script)的组件，里边的Player Collider的值为None(Collider)。当我们点击播放按钮，Player Collider会很容易地自动获取到Collider组件，因为Capsule Collider组件和脚本组件在同一个游戏物体里（角色）。</p><p>如果我们在上边的代码中<strong>public Collider playerCollider;</strong>下插入一行<strong>playerCollider.enabled = false;</strong>，保存脚本回到Unity点击播放，则可以看到Capsule Collider组件被取消勾选。</p><p>同理，如果我们在上边的代码中<strong>public Collider playerCollider;</strong>下插入一行<strong>playerConllider.isTrigger = true;</strong>，保存脚本回到Unity点击播放，则可以看到Capsule Collider组件下的Is Trigger被勾选。</p><p>如果我们要在游戏启动时修改Capsule Collider的长度、中心位置，我们可以编写代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span> (<span class="params"></span>)</span> &#123;</span><br><span class="line">    playerCollider = GetComponent&lt;CapsuleCollider&gt;();</span><br><span class="line">    <span class="comment">//playerCollider.enabled = false; //取消勾选Capsule Collider组件</span></span><br><span class="line">    <span class="comment">//playerCollider.isTrigger = true; //勾选Capsule Collider组件下Is Trigger选项</span></span><br><span class="line">    playerCollider.height = <span class="number">3f</span>; <span class="comment">//修改胶囊碰撞体的高（长度）</span></span><br><span class="line">    playerCollider.center = <span class="keyword">new</span> Vector3(<span class="number">0f</span>, <span class="number">2f</span>, <span class="number">0f</span>); <span class="comment">//修改胶囊碰撞体中心的位置坐标</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="2-用户输入"><a href="#2-用户输入" class="headerlink" title="2. 用户输入"></a>2. 用户输入</h2><p>在Unity编辑器菜单栏，点击Edit &gt; Project Settings &gt; Input在Inspector窗口打开<strong>InputManager</strong>。我们可以在InputManager中编辑用户输入控制。</p><p>我们回到Player.cs，编辑Update函数如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">float</span> moveHorizontal = Input.GetAxis(<span class="string">"Horizontal"</span>);</span><br><span class="line"><span class="keyword">float</span> moveVertical = Input.GetAxis(<span class="string">"Vertical"</span>);</span><br><span class="line"></span><br><span class="line">print(moveHorizontal);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存后回到Unity编辑器点击播放，当我们按住【A】键时，控制台将打印消息一系列大于-1且小于0的小数，打印的小数快速减小直到打印出-1，松开键盘后归0，按住【D】键，打印大于0且小于1的小数，并且打印的小数快速增大直至打印出1。</p><p>由此我们得知，按键A关联水平负方向，W关联水平正方向。</p><p>接下来将Player.cs编辑如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">MonoBehaviour</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">float</span> moveSpeed = <span class="number">5f</span>;</span><br><span class="line"><span class="comment">// Update is called once per frame</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">float</span> moveHorizontal = Input.GetAxis(<span class="string">"Horizontal"</span>);<span class="comment">//获取左右移动分量</span></span><br><span class="line">        <span class="keyword">float</span> moveVertical = Input.GetAxis(<span class="string">"Vertical"</span>);<span class="comment">//获取前后移动分量</span></span><br><span class="line"><span class="comment">//创建水平面移动矢量</span></span><br><span class="line">        Vector3 movement = <span class="keyword">new</span> Vector3(moveHorizontal, <span class="number">0f</span>, moveVertical);</span><br><span class="line"><span class="comment">//将移动矢量转译到Transform组件</span></span><br><span class="line">        transform.Translate(movement * Time.deltaTime * moveSpeed);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存后，在Unity编辑器将镜头摆到合适观察角色的位置，点击播放。通过【W】【A】【S】【D】键，我们可以控制角色前后左右移动。</p><h1 id="四、游戏对象之间的交互"><a href="#四、游戏对象之间的交互" class="headerlink" title="四、游戏对象之间的交互"></a>四、游戏对象之间的交互</h1><h2 id="1-脚本之间交互"><a href="#1-脚本之间交互" class="headerlink" title="1. 脚本之间交互"></a>1. 脚本之间交互</h2><p>在Assets/Prefabs下找到Battle_Dummy，拖拽进场景到Floor上。在Scripts文件夹新建一个Enemy.cs。将Enemy.cs拖拽到Battle_Dummy的Inpsector窗口中形成Enemy(Script)组件。</p><p>给Enemy添加上一个Health属性，即编辑Enemy.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Enemy</span> : <span class="title">MonoBehaviour</span> &#123; <span class="comment">//声明Enemy类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> enemyHealth = <span class="number">4</span>; <span class="comment">//声明enemyHealth并初始化</span></span><br><span class="line"><span class="comment">// Use this for initialization</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Update is called once per frame</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编辑Player.cs如下</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">MonoBehaviour</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">float</span> moveSpeed = <span class="number">5f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> GameObject enemy;</span><br><span class="line">    <span class="keyword">private</span> Enemy enemyScript;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Use this for initialization</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">        enemy = GameObject.Find(<span class="string">"Battle_Dummy"</span>);</span><br><span class="line">        enemyScript = enemy.GetComponent&lt;Enemy&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Update is called once per frame</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">float</span> moveHorizontal = Input.GetAxis(<span class="string">"Horizontal"</span>);</span><br><span class="line">        <span class="keyword">float</span> moveVertical = Input.GetAxis(<span class="string">"Vertical"</span>);</span><br><span class="line"></span><br><span class="line">        Vector3 movement = <span class="keyword">new</span> Vector3(moveHorizontal, <span class="number">0f</span>, moveVertical);</span><br><span class="line"></span><br><span class="line">        transform.Translate(movement * Time.deltaTime * moveSpeed);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space)) <span class="comment">//当键盘按下空格键时执行</span></span><br><span class="line">        &#123;</span><br><span class="line">            enemyScript.enemyHealth--; <span class="comment">//Health自减1</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存脚本后，回到Unity点击播放，当我们每按一次【空格】键时，点击Battle_Dummy，通过Inspector窗口可以看到Enemy组件下的Enemy Health都会减1。</p><h2 id="2-碰撞交互"><a href="#2-碰撞交互" class="headerlink" title="2. 碰撞交互"></a>2. 碰撞交互</h2><p>给角色添加Rigidbody组件,并设置Constraints如图</p><p><img src="/2020/01/18/Unity%20C%20Sharp%E8%84%9A%E6%9C%AC%E5%9F%BA%E7%A1%80/image-20200222183920131.png" alt="image-20200222183920131"></p><p>给Battle_Dummy添加Capsule Collider组件，Center设置为（0，0.5，0），Radius设置为0.4，Height设置为2。通过快捷键Ctrl+D快速生成两个复制品，拖到旁边如图：</p><p><img src="/2020/01/18/Unity%20C%20Sharp%E8%84%9A%E6%9C%AC%E5%9F%BA%E7%A1%80/image-20200222170229708.png" alt="image-20200222170229708"></p><p>在Player.cs里为类Player添加方法OnCollisionEnter：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OnCollisionEnter</span>(<span class="params">Collision collision</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(collision.gameObject.tag == <span class="string">"Enemy"</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        enemyScript.enemyHealth--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>回到Unity给3个Battle_Bummy添加Tag Enemy，角色添加Tag Player。</p><p>点击播放，选中Battle_Bummy，控制角色碰到Battle_Bummy一次，其Enemy组件下EnemyHealth减1一次。</p><p>但当我们控制角色碰撞Battle_Bummy(1)、Battle_Bummy(2)时，它们的EnemyHealth却没有减少。</p><p>修改Player.cs如下后即可解决问题：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">MonoBehaviour</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">float</span> moveSpeed = <span class="number">5f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//private GameObject enemy;</span></span><br><span class="line">    <span class="keyword">private</span> Enemy enemyScript;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Use this for initialization</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">//enemy = GameObject.Find("Battle_Dummy");</span></span><br><span class="line">        <span class="comment">//enemyScript = enemy.GetComponent&lt;Enemy&gt;();</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Update is called once per frame</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">float</span> moveHorizontal = Input.GetAxis(<span class="string">"Horizontal"</span>);</span><br><span class="line">        <span class="keyword">float</span> moveVertical = Input.GetAxis(<span class="string">"Vertical"</span>);</span><br><span class="line"></span><br><span class="line">        Vector3 movement = <span class="keyword">new</span> Vector3(moveHorizontal, <span class="number">0f</span>, moveVertical);</span><br><span class="line">        <span class="comment">//角色移动</span></span><br><span class="line">        transform.Translate(movement * Time.deltaTime * moveSpeed);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnCollisionEnter</span>(<span class="params">Collision collision</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span>(collision.gameObject.tag == <span class="string">"Enemy"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            enemyScript = collision.gameObject.GetComponent&lt;Enemy&gt;();</span><br><span class="line">            enemyScript.enemyHealth--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-触发器"><a href="#3-触发器" class="headerlink" title="3. 触发器"></a>3. 触发器</h2><p>我们从Assets/Prefabs往场景里添加一个Chest</p><p><img src="/2020/01/18/Unity%20C%20Sharp%E8%84%9A%E6%9C%AC%E5%9F%BA%E7%A1%80/image-20200223115839508.png" alt="image-20200223115839508"></p><p>在Scripts文件夹里新建一个TreasureChest.cs，为类TreasureChest添加一个<strong>OnTriggerEnter</strong>方法。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OnTriggerEnter</span>(<span class="params">Collider other</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(other.gameObject.tag == <span class="string">"Player"</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    print(<span class="string">"Interacting!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Unity中，给Chest添加上TreasureChest(Script)组件。</p><p>点击播放，当我们控制角色碰到Chest一次，控制台打印消息“Interacting!”一次。</p><p>如果把<strong>OnTriggerEnter</strong>换成<strong>OnTriggerStay</strong>，当我们控制角色停留在Chest旁边时，控制台会持续打印消息“Interacting!”。</p><p>如果在<strong>OnTriggerEnter</strong>方法下方添加<strong>OnTriggerExit</strong>方法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OnTriggerExit</span>(<span class="params">Collider other</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(other.gameObject.tag == <span class="string">"Player"</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        print(<span class="string">"Hey!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当我们的角色靠近Chest在离开，控制台将打印一次消息“Hey!”。</p><p>我们给TreasureChest添加一个布尔类型的公共属性interactable，并初始化为false。修改<strong>OnTriggerEnter</strong>方法和<strong>OnTriggerExit</strong>方法的内容如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TreasureChest</span> : <span class="title">MonoBehaviour</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">bool</span> interactable = <span class="literal">false</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnTriggerEnter</span>(<span class="params">Collider other</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span>(other.gameObject.tag == <span class="string">"Player"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            interactable = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerExit</span>(<span class="params">Collider other</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span>(other.gameObject.tag == <span class="string">"Player"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            interactable = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当我们播放游戏时，Chest的TreasureChest(Script)组件下会生成一个interactable选项，当角色靠近Chest时，interactable被勾选（值为true），当角色离开时，interactable取消勾选（值为false）。</p><p>接下来加入动画，</p><p>点击Unity菜单栏的Window &gt; Animator打开Animator窗口，可以看到Parameters下有一个openChest，右边的转变图里，选中Idle_State，我们看到Transition下有一个转变情况：Idle_State -&gt; ChestOpen。点击，下方出现转变条件（Conditions）——openChest的值为true（默认）。因此我们在Update方法里可以写上，当开箱按键（这里设为空格）按下后，动画设置openChest为true。</p><p>编辑后的TreasureChest.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TreasureChest</span> : <span class="title">MonoBehaviour</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">bool</span> interactable = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> Animator anim;</span><br><span class="line">    <span class="comment">// Use this for initialization</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span> (<span class="params"></span>)</span> &#123;</span><br><span class="line">        anim = GetComponent&lt;Animator&gt;();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Update is called once per frame</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span> (<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(interactable &amp;&amp; Input.GetKeyDown(KeyCode.Space))</span><br><span class="line">        &#123;</span><br><span class="line">            anim.SetBool(<span class="string">"openChest"</span>, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnTriggerEnter</span>(<span class="params">Collider other</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span>(other.gameObject.tag == <span class="string">"Player"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            interactable = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerExit</span>(<span class="params">Collider other</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span>(other.gameObject.tag == <span class="string">"Player"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            interactable = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>播放游戏，当角色靠近Chest按下空格键，播放箱子打开动画。</p><p><img src="/2020/01/18/Unity%20C%20Sharp%E8%84%9A%E6%9C%AC%E5%9F%BA%E7%A1%80/image-20200223174012993.png" alt="image-20200223174012993"></p><h2 id="4-射线侦测（Raycasting）"><a href="#4-射线侦测（Raycasting）" class="headerlink" title="4. 射线侦测（Raycasting）"></a>4. 射线侦测（Raycasting）</h2><p>射线的一个应用时侦测角色周围是否有敌人。</p><p>回到Player.cs，我们给类Player添加以下3个变量：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> RaycastHit hit;</span><br><span class="line"><span class="keyword">private</span> Ray ray;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">float</span> rayDistance = <span class="number">4f</span>;</span><br></pre></td></tr></table></figure><p>在Update方法做如下应用：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ray = <span class="keyword">new</span> Ray(transform.position, transform.forward);</span><br><span class="line">Debug.DrawRay(ray.origin, ray.direction * rayDistance, Color.red);</span><br></pre></td></tr></table></figure><p>回到Unity播放游戏，点击Scene窗口，我们发现角色脚下正前方（Z轴正方向）出现一条4格长度的红线。</p><p><img src="/2020/01/18/Unity%20C%20Sharp%E8%84%9A%E6%9C%AC%E5%9F%BA%E7%A1%80/image-20200223202521447.png" alt="image-20200223202521447"></p><p>要把红线上移到角色重新，我们可以对上边两行代码的第一行修改成如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ray = <span class="keyword">new</span> Ray(transform.position + <span class="keyword">new</span> Vector3(<span class="number">0f</span>,playerCollider.center.y,<span class="number">0f</span>), transform.forward);</span><br></pre></td></tr></table></figure><p>接下来实现射线反馈，在Update方法里继续编写如下代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(Physics.Raycast(ray, <span class="keyword">out</span> hit))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(hit.distance &lt; rayDistance)</span><br><span class="line">    &#123;</span><br><span class="line">        print(<span class="string">"We hit something!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>播放游戏，移动角色，当红线触及Battle_Dummy或Chest时（其实时触及它们的碰撞体），控制台持续打印消息“We hit something!”。</p><p>接下来修改执行反馈的代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(Physics.Raycast(ray, <span class="keyword">out</span> hit))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(hit.distance &lt; rayDistance)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(hit.collider.gameObject.tag == <span class="string">"Enemy"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            print(<span class="string">"There is an enemy ahead!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>播放游戏，当角色移动到Chest前边时，反馈但没有打印消息，当角色移动到Battle_Dummy前边时，控制台持续打印消息“There is an enemy ahead!”</p><p>至此，Player.cs完整代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">MonoBehaviour</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> CapsuleCollider playerCollider;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">float</span> moveSpeed = <span class="number">5f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Enemy enemyScript;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RaycastHit hit;</span><br><span class="line">    <span class="keyword">private</span> Ray ray;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">float</span> rayDistance = <span class="number">4f</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Use this for initialization</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        playerCollider = GetComponent&lt;CapsuleCollider&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Update is called once per frame</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">float</span> moveHorizontal = Input.GetAxis(<span class="string">"Horizontal"</span>);</span><br><span class="line">        <span class="keyword">float</span> moveVertical = Input.GetAxis(<span class="string">"Vertical"</span>);</span><br><span class="line"></span><br><span class="line">        Vector3 movement = <span class="keyword">new</span> Vector3(moveHorizontal, <span class="number">0f</span>, moveVertical);</span><br><span class="line">        <span class="comment">//角色移动</span></span><br><span class="line">        transform.Translate(movement * Time.deltaTime * moveSpeed);</span><br><span class="line"></span><br><span class="line">        ray = <span class="keyword">new</span> Ray(transform.position + <span class="keyword">new</span> Vector3(<span class="number">0f</span>,playerCollider.center.y,<span class="number">0f</span>), transform.forward);</span><br><span class="line">        Debug.DrawRay(ray.origin, ray.direction * rayDistance, Color.red);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(Physics.Raycast(ray, <span class="keyword">out</span> hit))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(hit.distance &lt; rayDistance)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(hit.collider.gameObject.tag == <span class="string">"Enemy"</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    print(<span class="string">"There is an enemy ahead!"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnCollisionEnter</span>(<span class="params">Collision collision</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span>(collision.gameObject.tag == <span class="string">"Enemy"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            enemyScript = collision.gameObject.GetComponent&lt;Enemy&gt;();</span><br><span class="line">            enemyScript.enemyHealth--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-实例化（Instantiate）和销毁"><a href="#5-实例化（Instantiate）和销毁" class="headerlink" title="5. 实例化（Instantiate）和销毁"></a>5. 实例化（Instantiate）和销毁</h2><p>打开TreasureChest.cs，为将要实例化的预制体创建供存储的变量。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Rigidbody coinPrefab;</span><br><span class="line"><span class="keyword">public</span> Transform spawner;</span><br></pre></td></tr></table></figure><p>编辑Update函数如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span> (<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(interactable &amp;&amp; Input.GetKeyDown(KeyCode.Space))</span><br><span class="line">    &#123;</span><br><span class="line">        anim.SetBool(<span class="string">"openChest"</span>, <span class="literal">true</span>);</span><br><span class="line">        Rigidbody coinInstance;</span><br><span class="line">        coinInstance = Instantiate(coinPrefab, spawner.position, spawner.rotation) <span class="keyword">as</span> Rigidbody;<span class="comment">//将实例化结果由Object类型强转成Rigidbody类型</span></span><br><span class="line">        coinInstance.AddForce(spawner.up * <span class="number">100</span>);<span class="comment">//给coinInstance在Y轴正方向上添加受力</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>回到Unity，我们看到Chest的Treasure Chest(Script)组件下多了两个属性Coin Prefabs和Spawner。从Assets/Prefabs拖拽Coin到Coin Prefabs，注意到我们的预制体Coin也具备Rigidbody组件，因此可以放入要求Rigidbody类型的Coin Prefabs。</p><p>选中Chest新建一个空的子Object，命名为spawner，将其拖拽到Chest的TreasureChest组件下Spawner属性。</p><p>选中spawner，将其往Y轴正方向移动到Chest上方（此处移动了0.86）。</p><p>播放游戏，当角色移动到Chest前，按一次空格键，Chest打开并弹起一个Coin然后垂直落回原位，Hierarchy窗口也会生成一个Coin(Clone)。</p><p>如果此时再按空格，则Coin继续弹出，并叠在之前的Coin上。</p><p><img src="/2020/01/18/Unity%20C%20Sharp%E8%84%9A%E6%9C%AC%E5%9F%BA%E7%A1%80/image-20200223221512891.png" alt="image-20200223221512891"></p><p>接下来我们实现Coin实例的销毁。</p><p>在Assets/Scripts下新建Coin.cs并在Visual Studio打开，在Start方法里添加语句：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Destroy(gameObject, <span class="number">2.0f</span>); <span class="comment">//两秒后销毁gameObject</span></span><br></pre></td></tr></table></figure><p>给Assets/Prefabs下的预制体Coin添加组件Coin(Script)</p><p>再次播放游戏，当我们每按一次空格，箱子里弹出的硬币均仅仅存在2秒。</p><p>Coin.cs完整代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Coin</span> : <span class="title">MonoBehaviour</span> &#123;</span><br><span class="line"><span class="comment">// Use this for initialization</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span> (<span class="params"></span>)</span> &#123;</span><br><span class="line">        Destroy(gameObject, <span class="number">2.0f</span>); <span class="comment">//两秒后销毁gameObject</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Update is called once per frame</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span> (<span class="params"></span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TreasureChest.cs最终代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TreasureChest</span> : <span class="title">MonoBehaviour</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">bool</span> interactable = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> Animator anim;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Rigidbody coinPrefab;</span><br><span class="line">    <span class="keyword">public</span> Transform spawner;</span><br><span class="line">    <span class="comment">// Use this for initialization</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span> (<span class="params"></span>)</span> &#123;</span><br><span class="line">        anim = GetComponent&lt;Animator&gt;();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Update is called once per frame</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span> (<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(interactable &amp;&amp; Input.GetKeyDown(KeyCode.Space))</span><br><span class="line">        &#123;</span><br><span class="line">            anim.SetBool(<span class="string">"openChest"</span>, <span class="literal">true</span>);</span><br><span class="line">            Rigidbody coinInstance;</span><br><span class="line">            coinInstance = Instantiate(coinPrefab, spawner.position, spawner.rotation) <span class="keyword">as</span> Rigidbody;<span class="comment">//将实例化结果由Object类型强转成Rigidbody类型</span></span><br><span class="line">            coinInstance.AddForce(spawner.up * <span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnTriggerEnter</span>(<span class="params">Collider other</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span>(other.gameObject.tag == <span class="string">"Player"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            interactable = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerExit</span>(<span class="params">Collider other</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span>(other.gameObject.tag == <span class="string">"Player"</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            interactable = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#脚本基础</title>
      <link href="/2020/01/17/C%20Sharp%E8%84%9A%E6%9C%AC%E5%9F%BA%E7%A1%80/"/>
      <url>/2020/01/17/C%20Sharp%E8%84%9A%E6%9C%AC%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<p>脚本结构、基础语法、数据类型</p><a id="more"></a><h1 id="一、开发环境"><a href="#一、开发环境" class="headerlink" title="一、开发环境"></a>一、开发环境</h1><p>IDE：Visual Studio 2017</p><p>新建项目途径：</p><p>​    其他语言 &gt; Visual C# &gt; Windows桌面 &gt; 空项目(.NET Framework)或者控制台应用。</p><p><img src="/2020/01/17/C%20Sharp%E8%84%9A%E6%9C%AC%E5%9F%BA%E7%A1%80/image-20200219123758165.png" alt="image-20200219123758165"></p><h1 id="二、脚本结构"><a href="#二、脚本结构" class="headerlink" title="二、脚本结构"></a>二、脚本结构</h1><p>一个C#脚本文件包含以下部分：</p><ul><li>命名空间声明（Namespace declaration）</li><li>一个类（Class）</li><li>类方法</li><li>类属性</li><li>一个Main方法</li><li>语句（Statements）、表达式（Expressions）</li><li>注释</li></ul><p>在解决方案资源管理器窗口中右键项目名称”CSProject1“，点击“添加“ &gt; ”新建项“，选择“类” &gt; 修改默认类名为”HelloWorld“，点击”添加“按钮。至此，我们创建了一个名叫”HelloWorld“的类，即HelloWorld.cs文件。</p><p>在代码编辑器中编写代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSProject1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">HelloWorld</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">/*My first C Sharp Script.*/</span></span><br><span class="line">            Console.WriteLine(<span class="string">"Hello World !"</span>);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行后：</p><p>Hello World !</p><p>解释：</p><p><strong>using</strong> 关键字用于在程序中包含命名空间。 一个程序可以包含多个 <strong>using</strong> 语句。</p><p>下一行是 <strong>namespace</strong> 声明。一个 <strong>namespace</strong> 里包含了一系列的类。<em>CSProject1</em>命名空间包含了类 <em>HelloWorld</em>。</p><p>下一行是 <strong>class</strong> 声明。类 <em>HelloWorld</em> 包含程序使用的<strong>数据</strong>和<strong>方法声明</strong>。类一般包含多个方法。方法定义了类的行为。在这里，<em>HelloWorld</em> 类只有一个 <strong>Main</strong> 方法。</p><p>下一行定义了 <strong>Main</strong> 方法，是所有 C# 程序的 <strong>入口点</strong>。<strong>Main</strong> 方法说明当执行时，类将做什么动作。</p><p>下一行 /*…*/ 将会被编译器忽略，且它会在程序中添加额外的<strong>注释</strong>。</p><p>Main 方法通过语句*<em>Console.WriteLine(“Hello World”); *</em>指定它的行为。</p><p><em>WriteLine</em> 是一个定义在 <em>System</em> 命名空间中的 <em>Console</em> 类的一个方法。该语句将消息 “Hello, World!”显示在命令提示符窗口上。</p><p>最后一行 <strong>Console.ReadKey();</strong> 是针对 VS.NET 用户的。这使得程序会等待一个按键的动作，防止程序从 Visual Studio .NET 启动时屏幕会快速运行并关闭。</p><p>以下几点值得注意：</p><ul><li>C# 对英文字母大小写敏感。</li><li>所有的语句和表达式必须以分号（;）结尾。</li><li>程序的执行从 Main 方法开始。</li><li>与 Java 不同的是，文件名可以不同于类的名称。</li></ul><p>另一种编译执行C#程序的方式：</p><ul><li>打开一个文本编辑器，添加上面提到的代码。</li><li>保存文件为 <strong>helloworld.cs</strong>。</li><li>打开命令提示符工具，定位到文件所保存的目录。</li><li>键入 <strong>csc helloworld.cs</strong> 并按下 enter 键来编译代码。</li><li>如果代码没有错误，命令提示符会进入下一行，并生成 <strong>helloworld.exe</strong> 可执行文件。</li><li>接下来，键入 <strong>helloworld</strong> 来执行程序。</li></ul><p>若提示无法识别 <strong>csc</strong> 命令，需配置环境变量（Window10)</p><p>找到桌面上的“此电脑”图标，右键单击，并在弹出的菜单中点击 “属性” –”高级系统设置”–”环境变量”–”系统变量”，找到变量 <strong>Path</strong>， 添加一个路径 <strong>C:\Windows\Microsoft.NET\Framework64\v4.0.30319\</strong></p><p>注意：多个路径使用分号(;)隔开，Windows其他版本追加在后面即可。</p><h1 id="三、基本语法"><a href="#三、基本语法" class="headerlink" title="三、基本语法"></a>三、基本语法</h1><p>先上例子：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">RectangleApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Rectangle</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">double</span> length;<span class="comment">// 成员变量</span></span><br><span class="line">        <span class="keyword">double</span> width;<span class="comment">// 成员变量</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Acceptdetails</span>(<span class="params"></span>)<span class="comment">//成员函数</span></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            length = <span class="number">4.5</span>;    </span><br><span class="line">            width = <span class="number">3.5</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">GetArea</span>(<span class="params"></span>)<span class="comment">//成员函数</span></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> length * width;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Display</span>(<span class="params"></span>)<span class="comment">//成员函数</span></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"Length: &#123;0&#125;"</span>, length);</span><br><span class="line">            Console.WriteLine(<span class="string">"Width: &#123;0&#125;"</span>, width);</span><br><span class="line">            Console.WriteLine(<span class="string">"Area: &#123;0&#125;"</span>, GetArea());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">class</span> <span class="title">ExecuteRectangle</span><span class="comment">//实例化Retangle类的类，它包含Main方法</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Rectangle r = <span class="keyword">new</span> Rectangle();</span><br><span class="line">            r.Acceptdetails();</span><br><span class="line">            r.Display();</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译并执行后，结果如下：</p><blockquote><p>Length: 4.5<br>Width: 3.5<br>Area: 15.75</p></blockquote><ol><li><p>using关键字：用于在程序中包含命名空间，一个程序可以包含多个using语句。</p><p>在任何C#程序中的第一条语句都是：<strong>using System;</strong></p></li><li><p>class关键字：用于声明一个类。</p></li><li><p>注释：用于解释代码，编译器会忽略被注释的条目。单行注释用 <strong>//</strong> ，多行注释用 <strong>/*</strong>开始，<strong>/*</strong>结束。</p></li><li><p>成员变量：变量的类的属性或数据成员，用于存储数据。</p></li><li><p>成员函数：在类内声明的函数。函数使一系列执行指定任务的语句。</p></li><li><p>实例化一个类：上边例子中的类ExecuteRectangle。</p></li><li><p>标识符：用于来识别类、变量、函数或任何其它用户定义的项目。</p><p>在 C# 中，<strong>类的命名必须遵循如下基本规则：</strong></p><ul><li>标识符必须以<strong>字母</strong>、<strong>下划线</strong>或 <strong>@</strong> 开头，后面可以跟一系列的字母、数字、下划线、@。</li><li>标识符中的第一个字符不能是数字。</li><li>标识符必须不包含任何嵌入的空格或符号，比如 ? - +! # % ^ &amp; * ( ) [ ] { } . ; : “ ‘ / \。</li><li>标识符不能是 C# 关键字。除非它们有一个 @ 前缀。 例如，@if 是有效的标识符，但 if 不是，因为 if 是关键字。</li><li>标识符必须区分大小写。大写字母和小写字母被认为是不同的字母。</li><li>不能与C#的类库名称相同。</li></ul></li><li><p>C#关键字：C# 编译器预定义的保留字。</p><p>这些关键字不能用作标识符，但是，如果您想使用这些关键字作为标识符，可以在关键字前面加上 @ 字符作为前缀。</p><p>在 C# 中，有些关键字在代码的上下文中有特殊的意义，如 get 和 set，这些被称为上下文关键字（contextual keywords）。</p><p>下表列出了 C# 中的保留关键字（Reserved Keywords）和上下文关键字（Contextual Keywords）：</p></li></ol><table><thead><tr><th><strong>保留关键字</strong></th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>abstract</td><td>as</td><td>base</td><td>bool</td><td>break</td><td>byte</td><td>case</td></tr><tr><td>catch</td><td>char</td><td>checked</td><td>class</td><td>const</td><td>continue</td><td>decimal</td></tr><tr><td>default</td><td>delegate</td><td>do</td><td>double</td><td>else</td><td>enum</td><td>event</td></tr><tr><td>explicit</td><td>extern</td><td>false</td><td>finally</td><td>fixed</td><td>float</td><td>for</td></tr><tr><td>foreach</td><td>goto</td><td>if</td><td>implicit</td><td>in</td><td>in (generic modifier)</td><td>int</td></tr><tr><td>interface</td><td>internal</td><td>is</td><td>lock</td><td>long</td><td>namespace</td><td>new</td></tr><tr><td>null</td><td>object</td><td>operator</td><td>ou</td><td>out (generic modifier)</td><td>override</td><td>params</td></tr><tr><td>private</td><td>protected</td><td>public</td><td>readonly</td><td>ref</td><td>return</td><td>sbyte</td></tr><tr><td>sealed</td><td>short</td><td>sizeof</td><td>stackalloc</td><td>static</td><td>string</td><td>struct</td></tr><tr><td>switch</td><td>this</td><td>throw</td><td>true</td><td>try</td><td>typeof</td><td>uint</td></tr><tr><td>ulong</td><td>unchecked</td><td>unsafe</td><td>ushort</td><td>using</td><td>virtual</td><td>void</td></tr><tr><td>volatile</td><td>while</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td><strong>上下文关键字</strong></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>add</td><td>alias</td><td>ascending</td><td>descending</td><td>dynamic</td><td>from</td><td>get</td></tr><tr><td>global</td><td>group</td><td>into</td><td>join</td><td>let</td><td>orderby</td><td>partial (type)</td></tr><tr><td>partial (method)</td><td>remove</td><td>select</td><td>set</td><td></td><td></td><td></td></tr></tbody></table><h1 id="四、数据类型"><a href="#四、数据类型" class="headerlink" title="四、数据类型"></a>四、数据类型</h1><p>在 C# 中，变量分为以下几种类型：</p><ul><li>值类型（Value types）</li><li>引用类型（Reference types）</li><li>指针类型（Pointer types）</li></ul><ol><li><p>值类型</p><p>值类型变量可以直接分配给一个值。它们是从类 <strong>System.ValueType</strong> 中派生的。</p><p>值类型直接包含数据。比如 <strong>int、char、float</strong>。</p><p>如需得到一个类型或一个变量在特定平台上的准确尺寸，可以使用 <strong>sizeof</strong> 方法。表达式 <em>sizeof(type)</em> 产生以字节为单位存储对象或类型的存储尺寸。</p></li><li><p>引用类型</p><p>引用类型不包含存储在变量中的实际数据，但它们包含对变量的引用。</p><p>换句话说，它们指的是一个内存位置。使用多个变量时，引用类型可以指向一个内存位置。如果内存位置的数据是由一个变量改变的，其他变量会自动反映这种值的变化。<strong>内置的</strong>引用类型有：<strong>object</strong>、<strong>dynamic</strong> 和 <strong>string</strong>。</p><p><strong>对象（Object）类型</strong> 是 C# 通用类型系统（Common Type System - CTS）中所有数据类型的终极基类。Object 是 System.Object 类的别名。所以对象（Object）类型可以被分配任何其他类型（值类型、引用类型、预定义类型或用户自定义类型）的值。但是，在分配值之前，需要先进行类型转换。</p><p>当一个值类型转换为对象类型时，称为 <strong>装箱</strong>；当一个对象类型转换为值类型时，称为 <strong>拆箱</strong>。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> num1 = <span class="number">2019</span>;</span><br><span class="line"><span class="keyword">object</span> obj = num1;<span class="comment">//整型数据转换为了对象类型（装箱）</span></span><br><span class="line"><span class="comment">//拆箱：之前由值类型转换而来的对象类型再转回值类型。</span></span><br><span class="line"><span class="keyword">int</span> num2 = <span class="number">2018</span>;</span><br><span class="line"><span class="keyword">object</span> obj = num2;<span class="comment">//先装箱,只有装过箱的数据才能拆箱</span></span><br><span class="line"><span class="keyword">int</span> num3 = （<span class="keyword">int</span>）obj;<span class="comment">//再拆箱</span></span><br></pre></td></tr></table></figure><p><strong>动态（Dynamic）类型</strong>变量可以存储任何类型的值。这些变量的类型检查是在运行时发生的。</p><p>声明动态类型的语法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dynamic</span> &lt;variable_name&gt; = <span class="keyword">value</span>;</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dynamic</span> d = <span class="number">20</span>;</span><br></pre></td></tr></table></figure><p>动态类型与对象类型相似，但是对象类型变量的类型检查是在编译时发生的，而动态类型变量的类型检查是在运行时发生的。</p><p><strong>字符串（String）类型</strong> 允许您给变量分配任何字符串值。字符串类型是 System.String 类的别名。它是从对象（Object）类型派生的。字符串类型的值可以通过两种形式进行分配：引号和 @引号。</p><p>例如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String str = <span class="string">"baidu.com"</span>;</span><br></pre></td></tr></table></figure><p>一个 @引号字符串：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">@"baidu.com"</span>;</span><br></pre></td></tr></table></figure><p>C# string 字符串的前面可以加 @（称作”逐字字符串”）将转义字符（\）当作普通字符对待，比如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> str = <span class="string">@"C:\Windows"</span>;</span><br></pre></td></tr></table></figure><p>等价于：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> str = <span class="string">"C:\\Windows"</span>;</span><br></pre></td></tr></table></figure><p>@ 字符串中可以任意换行，换行符以及缩进空格都计算在字符串长度之内。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> str = <span class="string">@"&lt;script type=""text/javascript""&gt;</span></span><br><span class="line"><span class="string">    &lt;!--</span></span><br><span class="line"><span class="string">    --&gt;</span></span><br><span class="line"><span class="string">&lt;/script&gt;"</span>;</span><br></pre></td></tr></table></figure><p>用户自定义引用类型有：class、interface 或 delegate。</p></li><li><p>指针类型</p><p>C# 中的指针与 C 或 C++ 中的指针有相同的功能。</p><p>声明指针类型的语法例如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span>* cptr;</span><br><span class="line"><span class="keyword">int</span>* iptr;</span><br></pre></td></tr></table></figure></li></ol><h1 id="五、C-类型转换"><a href="#五、C-类型转换" class="headerlink" title="五、C#类型转换"></a>五、C#类型转换</h1><p>显式类型转换：即强制类型转换，需要强制转换运算符，会导致数据丢失。</p><p>隐式类型转换：C#默认的以安全的方式进行的转换，不会导致数据丢失。</p><p>显示类型转换例子：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">TypeConversionApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">ExplicitConversion</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">double</span> d = <span class="number">2345.6789</span>;</span><br><span class="line">            <span class="keyword">int</span> i;</span><br><span class="line">            i = (<span class="keyword">int</span>)d;</span><br><span class="line">            Console.WriteLine(d);</span><br><span class="line">            Console.Readkey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><blockquote><p>2345</p></blockquote><p>C# 提供的内置类型转换方法：</p><table><thead><tr><th align="center">方法名</th><th align="left">转换类型后的类型</th></tr></thead><tbody><tr><td align="center"><strong>ToBoolean</strong></td><td align="left">布尔型</td></tr><tr><td align="center"><strong>ToByte</strong></td><td align="left">字节类型</td></tr><tr><td align="center"><strong>ToChar</strong></td><td align="left">单个 Unicode 字符类型</td></tr><tr><td align="center"><strong>ToDateTime</strong></td><td align="left">把类型（整数或字符串类型）转换为 日期-时间 结构</td></tr><tr><td align="center"><strong>ToDecimal</strong></td><td align="left">把浮点型或整数类型转换为十进制类型</td></tr><tr><td align="center"><strong>ToDouble</strong></td><td align="left">双精度浮点型</td></tr><tr><td align="center"><strong>ToInt16</strong></td><td align="left">16 位整数类型</td></tr><tr><td align="center"><strong>ToInt32</strong></td><td align="left">32 位整数类型</td></tr><tr><td align="center"><strong>ToInt64</strong></td><td align="left">64 位整数类型</td></tr><tr><td align="center"><strong>ToSbyte</strong></td><td align="left">有符号字节类型</td></tr><tr><td align="center"><strong>ToSingle</strong></td><td align="left">小浮点数类型</td></tr><tr><td align="center"><strong>ToString</strong></td><td align="left">字符串类型</td></tr><tr><td align="center"><strong>ToType</strong></td><td align="left">指定类型</td></tr><tr><td align="center"><strong>ToUInt16</strong></td><td align="left">16 位无符号整数类型</td></tr><tr><td align="center"><strong>ToUInt32</strong></td><td align="left">32 位无符号整数类型</td></tr><tr><td align="center"><strong>ToUInt64</strong></td><td align="left">64 位无符号整数类型</td></tr></tbody></table><p>不同类型转换为字符串类型的例子：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">TypeConversionApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">StringConversion</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span> i = <span class="number">75</span>;</span><br><span class="line">            <span class="keyword">float</span> f = <span class="number">53.005f</span>;</span><br><span class="line">            <span class="keyword">double</span> d = <span class="number">2345.6789</span>;</span><br><span class="line">            <span class="keyword">bool</span> b = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            Console.WriteLine(i.ToString());</span><br><span class="line">            Console.WriteLine(f.ToString());</span><br><span class="line">            Console.WriteLine(d.ToString());</span><br><span class="line">            Console.WriteLine(b.ToString());</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="六、C-基本变量类型"><a href="#六、C-基本变量类型" class="headerlink" title="六、C#基本变量类型"></a>六、C#基本变量类型</h1><p>一个变量只不过是一个供程序操作的存储区的名字，变量类型决定了变量的内存大小和布局。</p><p>C# 中提供的基本的值类型大致可以分为以下几类：</p><table><thead><tr><th align="left">类型</th><th align="left">举例</th></tr></thead><tbody><tr><td align="left">整数类型</td><td align="left">sbyte、byte、short、ushort、int、uint、long、ulong 和 char</td></tr><tr><td align="left">浮点型</td><td align="left">float 和 double</td></tr><tr><td align="left">十进制类型</td><td align="left">decimal</td></tr><tr><td align="left">布尔类型</td><td align="left">true 或 false 值，指定的值</td></tr><tr><td align="left">空类型</td><td align="left">可为空值的数据类型</td></tr></tbody></table><p>C# 允许定义其他值类型的变量，比如 <strong>enum</strong>，也允许定义引用类型变量，比如 <strong>class</strong>。</p><p><strong>System</strong> 命名空间中的 <strong>Console</strong> 类提供了一个函数 <strong>ReadLine()</strong>，用于接收来自用户的输入，并把它存储到一个变量中。</p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int num;</span><br><span class="line">num &#x3D; Convert.ToInt32(Console.ReadLine());</span><br></pre></td></tr></table></figure><p>函数 <strong>Convert.ToInt32()</strong> 把用户输入的数据转换为 int 数据类型，因为 <strong>Console.ReadLine()</strong> 只接受字符串格式的数据。</p><h1 id="七、C-常量"><a href="#七、C-常量" class="headerlink" title="七、C#常量"></a>七、C#常量</h1><p><strong>整数常量</strong>可以是十进制、八进制或十六进制的常量。前缀指定基数：0x 或 0X 表示十六进制，0 表示八进制，没有前缀则表示十进制。</p><p>整数常量也可以有后缀，可以是 U 和 L 的组合，其中，U 和 L 分别表示 unsigned 和 long。后缀可以是大写或者小写，多个后缀以任意顺序进行组合。</p><p>这里有一些整数常量的实例：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">212</span>         <span class="comment">/* 合法 */</span></span><br><span class="line"><span class="number">215u</span>        <span class="comment">/* 合法 */</span></span><br><span class="line"><span class="number">0xFee</span>L      <span class="comment">/* 合法 */</span></span><br><span class="line"><span class="number">078</span>         <span class="comment">/* 非法：8 不是一个八进制数字 */</span></span><br><span class="line"><span class="number">032U</span>U       <span class="comment">/* 非法：不能重复后缀 */</span></span><br></pre></td></tr></table></figure><p>以下是各种类型的整数常量的实例：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">85</span>         <span class="comment">/* 十进制 */</span></span><br><span class="line"><span class="number">0213</span>       <span class="comment">/* 八进制 */</span></span><br><span class="line"><span class="number">0x4b</span>       <span class="comment">/* 十六进制 */</span></span><br><span class="line"><span class="number">30</span>         <span class="comment">/* int */</span></span><br><span class="line"><span class="number">30u</span>        <span class="comment">/* 无符号 int */</span></span><br><span class="line"><span class="number">30l</span>        <span class="comment">/* long */</span></span><br><span class="line"><span class="number">30u</span>l       <span class="comment">/* 无符号 long */</span></span><br></pre></td></tr></table></figure><p><strong>浮点常量</strong>是由整数部分、小数点、小数部分和指数部分组成。您可以使用小数形式或者指数形式来表示浮点常量。</p><p>这里有一些浮点常量的实例：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3.14159</span>       <span class="comment">/* 合法 */</span></span><br><span class="line"><span class="number">314159E-5</span>L    <span class="comment">/* 合法 */</span></span><br><span class="line"><span class="number">510</span>E          <span class="comment">/* 非法：不完全指数 */</span></span><br><span class="line"><span class="number">210f</span>          <span class="comment">/* 非法：没有小数或指数 */</span></span><br><span class="line">.e55          <span class="comment">/* 非法：缺少整数或小数 */</span></span><br></pre></td></tr></table></figure><p>使用小数形式表示时，必须包含小数点、指数或同时包含两者。使用指数形式表示时，必须包含整数部分、小数部分或同时包含两者。有符号的指数是用 e 或 E 表示的。</p><p><strong>字符串常量</strong>是括在双引号 <strong>“”</strong> 里，或者是括在 <strong>@””</strong> 里。字符串常量包含的字符与字符常量相似，可以是：普通字符、转义序列和通用字符</p><p>使用字符串常量时，可以把一个很长的行拆成多个行，可以使用空格分隔各个部分。</p><p>这里是一些字符串常量的实例。下面所列的各种形式表示相同的字符串。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> a = <span class="string">"hello, world"</span>;                  <span class="comment">// hello, world</span></span><br><span class="line"><span class="keyword">string</span> b = <span class="string">@"hello, world"</span>;               <span class="comment">// hello, world</span></span><br><span class="line"><span class="keyword">string</span> c = <span class="string">"hello \t world"</span>;               <span class="comment">// hello     world</span></span><br><span class="line"><span class="keyword">string</span> d = <span class="string">@"hello \t world"</span>;               <span class="comment">// hello \t world</span></span><br><span class="line"><span class="keyword">string</span> e = <span class="string">"Joe said \"Hello\" to me"</span>;      <span class="comment">// Joe said "Hello" to me</span></span><br><span class="line"><span class="keyword">string</span> f = <span class="string">@"Joe said ""Hello"" to me"</span>;   <span class="comment">// Joe said "Hello" to me</span></span><br><span class="line"><span class="keyword">string</span> g = <span class="string">"\\\\server\\share\\file.txt"</span>;   <span class="comment">// \\server\share\file.txt</span></span><br><span class="line"><span class="keyword">string</span> h = <span class="string">@"\\server\share\file.txt"</span>;      <span class="comment">// \\server\share\file.txt</span></span><br><span class="line"><span class="keyword">string</span> i = <span class="string">"one\r\ntwo\r\nthree"</span>;</span><br><span class="line"><span class="keyword">string</span> j = <span class="string">@"one</span></span><br><span class="line"><span class="string">two</span></span><br><span class="line"><span class="string">three"</span>;</span><br></pre></td></tr></table></figure><p>常量是使用 <strong>const</strong> 关键字来定义的 。定义一个常量的语法如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &lt;data_type&gt; &lt;constant_name&gt; = <span class="keyword">value</span>;</span><br></pre></td></tr></table></figure><p>下面的代码演示了如何在程序中定义和使用常量：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ConstTest</span> &#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">SampleClass</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> x;<span class="comment">//属性变量</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> y;<span class="comment">//属性变量</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">const</span> <span class="keyword">int</span> c1 = <span class="number">5</span>;<span class="comment">//属性常量</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">const</span> <span class="keyword">int</span> c2 = c1 + <span class="number">5</span>;<span class="comment">//属性常量</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">SampleClass</span>(<span class="params"><span class="keyword">int</span> p1,<span class="keyword">int</span> p2</span>)<span class="comment">//构造方法</span></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            x = p1;</span><br><span class="line">            y = p2;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        SampleClass mC = <span class="keyword">new</span> SampleClass(<span class="number">11</span>, <span class="number">22</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">"x = &#123;0&#125;, y = &#123;1&#125;"</span>, mC.x, mC.y);</span><br><span class="line">        Console.WriteLine(<span class="string">"c1 = &#123;0&#125;, c2 = &#123;1&#125;"</span>, SampleClass.c1, SampleClass.c2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><blockquote><p>x = 11, y = 22<br>c1 = 5, c2 = 10</p></blockquote><h1 id="八、运算符"><a href="#八、运算符" class="headerlink" title="八、运算符"></a>八、运算符</h1><ul><li>算术运算符：+、-、*、/、%、++、–</li><li>关系运算符：==、!=、&gt;、&lt;、&gt;=、&lt;=</li><li>逻辑运算符：&amp;&amp;、||、!</li><li>位运算符：&amp;、|、^(异或)、~(非)</li><li>赋值运算符：=、+=、-=、*=、/=、%=、&lt;&lt;=(左移且赋值)、&gt;&gt;=、&amp;=、^=、|=</li></ul><p>其他一些重要的运算符。</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">sizeof()</td><td align="left">返回数据类型的大小。</td><td align="left">sizeof(int)，将返回 4.</td></tr><tr><td align="left">typeof()</td><td align="left">返回 class 的类型。</td><td align="left">typeof(StreamReader);</td></tr><tr><td align="left">&amp;</td><td align="left">返回变量的地址。</td><td align="left">&a; 将得到变量的实际地址。</td></tr><tr><td align="left">*</td><td align="left">变量的指针。</td><td align="left">*a; 将指向一个变量。</td></tr><tr><td align="left">? :</td><td align="left">条件表达式</td><td align="left">如果条件为真 ? 则为 X : 否则为 Y</td></tr><tr><td align="left">is</td><td align="left">判断对象是否为某一类型。</td><td align="left">If( Ford is Car) // 检查 Ford 是否是 Car 类的一个对象。</td></tr><tr><td align="left">as</td><td align="left">强制转换，即使转换失败也不会抛出异常。</td><td align="left">Object obj = new StringReader(“Hello”); StringReader r = obj as StringReader;</td></tr></tbody></table><p>下表将按<strong>运算符优先级</strong>从高到低列出各个运算符，具有较高优先级的运算符出现在表格的上面，具有较低优先级的运算符出现在表格的下面。在表达式中，较高优先级的运算符会优先被计算。</p><table><thead><tr><th align="left">类别</th><th align="left">运算符</th><th align="left">结合性</th></tr></thead><tbody><tr><td align="left">后缀</td><td align="left">() [] -&gt; . ++ - -</td><td align="left">从左到右</td></tr><tr><td align="left">一元</td><td align="left">+ - ! ~ ++ - - (type)* &amp; sizeof</td><td align="left">从右到左</td></tr><tr><td align="left">乘除</td><td align="left">* / %</td><td align="left">从左到右</td></tr><tr><td align="left">加减</td><td align="left">+ -</td><td align="left">从左到右</td></tr><tr><td align="left">移位</td><td align="left">&lt;&lt; &gt;&gt;</td><td align="left">从左到右</td></tr><tr><td align="left">关系</td><td align="left">&lt; &lt;= &gt; &gt;=</td><td align="left">从左到右</td></tr><tr><td align="left">相等</td><td align="left">== !=</td><td align="left">从左到右</td></tr><tr><td align="left">位与 AND</td><td align="left">&amp;</td><td align="left">从左到右</td></tr><tr><td align="left">位异或 XOR</td><td align="left">^</td><td align="left">从左到右</td></tr><tr><td align="left">位或 OR</td><td align="left">|</td><td align="left">从左到右</td></tr><tr><td align="left">逻辑与 AND</td><td align="left">&amp;&amp;</td><td align="left">从左到右</td></tr><tr><td align="left">逻辑或 OR</td><td align="left">||</td><td align="left">从左到右</td></tr><tr><td align="left">条件</td><td align="left">?:</td><td align="left">从右到左</td></tr><tr><td align="left">赋值</td><td align="left">= += -= *= /= %=&gt;&gt;= &lt;&lt;= &amp;= ^= |=</td><td align="left">从右到左</td></tr><tr><td align="left">逗号</td><td align="left">,</td><td align="left">从左到右</td></tr></tbody></table><h1 id="九、C-判断、循环"><a href="#九、C-判断、循环" class="headerlink" title="九、C# 判断、循环"></a>九、C# 判断、循环</h1><p>判断语句</p><table><thead><tr><th align="left">语句</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">if 语句</td><td align="left">一个 <strong>if 语句</strong> 由一个布尔表达式后跟一个或多个语句组成。</td></tr><tr><td align="left">if…else 语句</td><td align="left">一个 <strong>if 语句</strong> 后可跟一个可选的 <strong>else 语句</strong>，else 语句在布尔表达式为假时执行。</td></tr><tr><td align="left">嵌套 if 语句</td><td align="left">您可以在一个 <strong>if</strong> 或 <strong>else if</strong> 语句内使用另一个 <strong>if</strong> 或 <strong>else if</strong> 语句。</td></tr><tr><td align="left">switch 语句</td><td align="left">一个 <strong>switch</strong> 语句允许测试一个变量等于多个值时的情况。</td></tr><tr><td align="left">嵌套 switch 语句</td><td align="left">您可以在一个 <strong>switch</strong> 语句内使用另一个 <strong>switch</strong> 语句。</td></tr></tbody></table><p> <strong>条件运算符 ? :</strong>，可以用来替代 <strong>if…else</strong> 语句。它的一般形式如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Exp1 ? Exp2 : Exp3;</span><br></pre></td></tr></table></figure><p>其中，Exp1、Exp2 和 Exp3 是表达式。请注意，冒号的使用和位置。</p><p>? 表达式的值是由 Exp1 决定的。如果 Exp1 为真，则计算 Exp2 的值，结果即为整个 ? 表达式的值。如果 Exp1 为假，则计算 Exp3 的值，结果即为整个 ? 表达式的值。</p><p><strong>循环类型</strong></p><table><thead><tr><th align="left">循环类型</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">while 循环</td><td align="left">当给定条件为真时，重复语句或语句组。它会在执行循环主体之前测试条件。</td></tr><tr><td align="left">for或foreach 循环</td><td align="left">多次执行一个语句序列，简化管理循环变量的代码。</td></tr><tr><td align="left">do…while 循环</td><td align="left">除了它是在循环主体结尾测试条件外，其他与 while 语句类似。</td></tr><tr><td align="left">嵌套循环</td><td align="left">您可以在 while、for 或 do..while 循环内使用一个或多个循环。</td></tr></tbody></table><p>foreach循环例子：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ForeachTestApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ForeachTest</span> &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params">String[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span>[] array = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">2080</span>, <span class="number">2070</span>, <span class="number">2060</span>, <span class="number">1660</span>, <span class="number">1650</span>&#125;;</span><br><span class="line">            <span class="keyword">foreach</span> ( <span class="keyword">int</span> element <span class="keyword">in</span> array)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(element);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//原理类似foreach的for循环</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i &lt; array.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(array[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine();</span><br><span class="line">            <span class="comment">//加入计数器</span></span><br><span class="line">            <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">int</span> item <span class="keyword">in</span> array)</span><br><span class="line">            &#123;</span><br><span class="line">                count++;</span><br><span class="line">                Console.WriteLine(count+<span class="string">" : "</span>+item);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="string">"The length of this array is "</span>+count);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序输出结果：</p><p>2080<br>2070<br>2060<br>1660<br>1650</p><p>2080<br>2070<br>2060<br>1660<br>1650</p><p>1 : 2080<br>2 : 2070<br>3 : 2060<br>4 : 1660<br>5 : 1650<br>The length of this array is 5</p><h1 id="十、封装"><a href="#十、封装" class="headerlink" title="十、封装"></a>十、封装</h1><p><strong>封装</strong> 被定义为”把一个或多个项目封闭在一个物理的或者逻辑的包中”。在面向对象程序设计方法论中，封装是为了防止对实现细节的访问。</p><p>抽象和封装是面向对象程序设计的相关特性。抽象允许相关信息可视化，封装则使开发者<em>实现所需级别的抽象</em>。</p><p>C# 封装根据具体的需要，设置使用者的访问权限，并通过 <strong>访问修饰符</strong> 来实现。</p><p>一个 <strong>访问修饰符</strong> 定义了一个类成员的范围和可见性。C# 支持的访问修饰符如下所示：</p><ul><li>public：所有对象都可以访问；</li><li>private：对象本身在对象内部可以访问；</li><li>protected：只有该类对象及其子类对象可以访问</li><li>internal：同一个程序集的对象可以访问；</li><li>protected internal：访问限于当前程序集或派生自包含类的类型。</li></ul><h1 id="十一、C-方法"><a href="#十一、C-方法" class="headerlink" title="十一、C#方法"></a>十一、C#方法</h1><p>当定义一个方法时，从根本上说是在声明它的结构的元素。在 C# 中，定义方法的语法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Access Specifier&gt; &lt;Return Type&gt; &lt;Method Name&gt;(Parameter List)</span><br><span class="line">&#123;</span><br><span class="line">   Method Body</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是方法的各个元素：</p><ul><li><strong>Access Specifier</strong>：访问修饰符，这个决定了变量或方法对于另一个类的可见性。</li><li><strong>Return type</strong>：返回类型，一个方法可以返回一个值。返回类型是方法返回的值的数据类型。如果方法不返回任何值，则返回类型为 <strong>void</strong>。</li><li><strong>Method name</strong>：方法名称，是一个唯一的标识符，且是大小写敏感的。它不能与类中声明的其他标识符相同。</li><li><strong>Parameter list</strong>：参数列表，使用圆括号括起来，该参数是用来传递和接收方法的数据。参数列表是指方法的参数类型、顺序和数量。参数是可选的，也就是说，一个方法可能不包含参数。</li><li><strong>Method body</strong>：方法主体，包含了完成任务所需的指令集。</li></ul><p><strong>按引用传递参数</strong></p><p>引用参数是一个对变量的<strong>内存位置的引用</strong>。当按引用传递参数时，与值参数不同的是，它不会为这些参数创建一个新的存储位置。引用参数表示与提供给方法的实际参数具有相同的内存位置。</p><p>在 C# 中，使用 <strong>ref</strong> 关键字声明引用参数。下面的实例演示了这点：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CalculatorApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">NumberManipulator</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">swap</span>(<span class="params"><span class="keyword">ref</span> <span class="keyword">int</span> x, <span class="keyword">ref</span> <span class="keyword">int</span> y</span>)</span></span><br><span class="line"><span class="function"></span>      &#123;</span><br><span class="line">         <span class="keyword">int</span> temp;</span><br><span class="line"></span><br><span class="line">         temp = x; <span class="comment">/* 保存 x 的值 */</span></span><br><span class="line">         x = y;    <span class="comment">/* 把 y 赋值给 x */</span></span><br><span class="line">         y = temp; <span class="comment">/* 把 temp 赋值给 y */</span></span><br><span class="line">       &#125;</span><br><span class="line">   </span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>      &#123;</span><br><span class="line">         NumberManipulator n = <span class="keyword">new</span> NumberManipulator();</span><br><span class="line">         <span class="comment">/* 局部变量定义 */</span></span><br><span class="line">         <span class="keyword">int</span> a = <span class="number">100</span>;</span><br><span class="line">         <span class="keyword">int</span> b = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line">         Console.WriteLine(<span class="string">"在交换之前，a 的值： &#123;0&#125;"</span>, a);</span><br><span class="line">         Console.WriteLine(<span class="string">"在交换之前，b 的值： &#123;0&#125;"</span>, b);</span><br><span class="line"></span><br><span class="line">         <span class="comment">/* 调用函数来交换值 */</span></span><br><span class="line">         n.swap(<span class="keyword">ref</span> a, <span class="keyword">ref</span> b);</span><br><span class="line"></span><br><span class="line">         Console.WriteLine(<span class="string">"在交换之后，a 的值： &#123;0&#125;"</span>, a);</span><br><span class="line">         Console.WriteLine(<span class="string">"在交换之后，b 的值： &#123;0&#125;"</span>, b);</span><br><span class="line"> </span><br><span class="line">         Console.ReadLine();</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><blockquote><p>在交换之前，a 的值：100<br>在交换之前，b 的值：200<br>在交换之后，a 的值：200<br>在交换之后，b 的值：100</p></blockquote><p><strong>按输出传递参数</strong></p><p>return 语句可用于只从函数中返回一个值。但是，可以使用 <strong>输出参数</strong> 来从函数中返回两个值。输出参数会把方法输出的数据赋给自己，其他方面与引用参数相似。</p><p>下面的实例演示了这点：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CalculatorApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">NumberManipulator</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getValue</span>(<span class="params"><span class="keyword">out</span> <span class="keyword">int</span> x </span>)</span></span><br><span class="line"><span class="function"></span>      &#123;</span><br><span class="line">         <span class="keyword">int</span> temp = <span class="number">5</span>;</span><br><span class="line">         x = temp;</span><br><span class="line">      &#125;</span><br><span class="line">   </span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>      &#123;</span><br><span class="line">         NumberManipulator n = <span class="keyword">new</span> NumberManipulator();</span><br><span class="line">         <span class="comment">/* 局部变量定义 */</span></span><br><span class="line">         <span class="keyword">int</span> a = <span class="number">100</span>;</span><br><span class="line">         </span><br><span class="line">         Console.WriteLine(<span class="string">"在方法调用之前，a 的值： &#123;0&#125;"</span>, a);</span><br><span class="line">         </span><br><span class="line">         <span class="comment">/* 调用函数来获取值 */</span></span><br><span class="line">         n.getValue(<span class="keyword">out</span> a);</span><br><span class="line"></span><br><span class="line">         Console.WriteLine(<span class="string">"在方法调用之后，a 的值： &#123;0&#125;"</span>, a);</span><br><span class="line">         Console.ReadLine();</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><blockquote><p>在方法调用之前，a 的值： 100<br>在方法调用之后，a 的值： 5</p></blockquote><p>提供给输出参数的变量不需要赋值。当需要从一个参数没有指定初始值的方法中返回值时，输出参数特别有用。请看下面的实例，来理解这一点：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CalculatorApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">NumberManipulator</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getValues</span>(<span class="params"><span class="keyword">out</span> <span class="keyword">int</span> x, <span class="keyword">out</span> <span class="keyword">int</span> y </span>)</span></span><br><span class="line"><span class="function"></span>      &#123;</span><br><span class="line">          Console.WriteLine(<span class="string">"请输入第一个值： "</span>);</span><br><span class="line">          x = Convert.ToInt32(Console.ReadLine());</span><br><span class="line">          Console.WriteLine(<span class="string">"请输入第二个值： "</span>);</span><br><span class="line">          y = Convert.ToInt32(Console.ReadLine());</span><br><span class="line">      &#125;</span><br><span class="line">   </span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>      &#123;</span><br><span class="line">         NumberManipulator n = <span class="keyword">new</span> NumberManipulator();</span><br><span class="line">         <span class="comment">/* 局部变量定义 */</span></span><br><span class="line">         <span class="keyword">int</span> a , b;</span><br><span class="line">         </span><br><span class="line">         <span class="comment">/* 调用函数来获取值 */</span></span><br><span class="line">         n.getValues(<span class="keyword">out</span> a, <span class="keyword">out</span> b);</span><br><span class="line"></span><br><span class="line">         Console.WriteLine(<span class="string">"在方法调用之后，a 的值： &#123;0&#125;"</span>, a);</span><br><span class="line">         Console.WriteLine(<span class="string">"在方法调用之后，b 的值： &#123;0&#125;"</span>, b);</span><br><span class="line">         Console.ReadLine();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果（取决于用户输入）：</p><blockquote><p>请输入第一个值：<br>7<br>请输入第二个值：<br>8<br>在方法调用之后，a 的值： 7<br>在方法调用之后，b 的值： 8</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> C&amp;#35 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity基本操作</title>
      <link href="/2020/01/16/Unity%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
      <url>/2020/01/16/Unity%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>基本操作</p><a id="more"></a><ol><li><p>新建场景</p><p>File&gt;New Scene（或快捷键Ctrl+N）, 默认名“Untitled”, Ctrl+S保存到Yourproject/Assets/Scenes下(没有Scenes就新建一个)</p></li><li><p>基于3D物体的创建</p><ol><li><p>Hierachy面板：层级面板，用于显示当前场景中有哪些资源。在这些面板中可以往场景中添加资源。</p><p>在该面板右键创建物体</p><p>操作物体的快捷键：</p><p>Q：切换到视角拖拽</p><p>W：切换到物体平移</p><p>E：切换到物体旋转</p><p>R：切换到物体缩放</p></li><li><p>Project/Console面板：Project选项卡可以管理Assets、Packages；Console选项卡可以查看控制台信息</p></li></ol></li><li><p>Assets下导入素材</p><p>在Project&gt;Assets下右键，Import Packages&gt;Custom Packages，素材可以从官网（<a href="https://assetstore.unity.com" target="_blank" rel="noopener">https://assetstore.unity.com</a> ）搜索下载（官方免费素材例子：Free Rocks、Standard Assets）</p><p>导入后，选择需要的文件，拖拽到Hierachy面板即可加入场景</p></li><li><p>游戏导出</p><p>File&gt;Build Settings, 在弹出的窗口里点击【Add Open Scenes】添加场景</p><p>点击【Build】，选择导出路径并确认即可</p></li><li><p>项目目录结构</p><ul><li>Assets：资源文件夹</li><li>Library：库文件夹</li><li>Logs</li><li>Packages</li><li>ProjectSettings：存放项目设置文件</li><li>Temp：存放临时文件</li></ul></li><li><p>鼠标功能</p><p>鼠标左键：选中场景中的物体</p><p>鼠标中键：单击，视野聚焦到选中物体；拖拽，平移场景的观察角度；滚动，拉远拉近</p><p>鼠标右键：旋转场景的观察角度</p><p>Alt + 鼠标左键：旋转观察角度</p><p>Alt + 鼠标右键：拉远拉近</p><p>双击Hierachy面板中的物体：视野聚焦到双击选中的物体</p></li><li><p>Inspector面板</p><ol><li><p>Transform组件(变换组件)</p><p>Position：物体在直角坐标系中的位置，默认（0,0,0）</p><p>Rotation：物体的旋转角度</p><p>Scale：物体的缩放，默认（1,1,1）</p><p>点击小齿轮&gt;Reset：归零</p><p>坐标系切换按钮：</p><p><img src="/2020/01/16/Unity%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/image-20200116150251601.png" alt="image-20200116150251601"></p><ul><li>自身坐标系：Local</li><li>世界坐标系：Global</li></ul><p>摄像机两种模式切换：</p><p><img src="/2020/01/16/Unity%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/image-20200116151440021.png" alt="image-20200116151440021"></p><p>Persp：透视模式，近大远小</p><p>ISO：正交模式，远近一样大（多用于2D模型）</p></li><li><p>Mesh Filter组件（网格过滤器）：指定mesh（物体的几何形状），物体的形状由网格决定</p><p><img src="/2020/01/16/Unity%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/image-20200116152627574.png" alt="image-20200116152627574"></p></li><li><p>Mesh Renderer组件（网格渲染器）：从网格过滤器中获得几何体的形状然后进行渲染</p></li></ol></li><li><p>Prefab预制体</p><ol><li><p>父子关系：移动父物体，子物体会跟着移动</p><p>在Hierarchy面板中，任意两个物体都可以建立父子关系</p></li><li><p>预制体：Prefab，预先准备好的物体，可以重复使用和利用，例如手枪中的子弹</p></li><li><p>管理预制体：在Assets中建立“Prefabs”文件夹，用于管理预制体</p></li><li><p>创建预制体：直接将Hierarchy面板中的物体拖拽到Project面板的Assets中，即可创建一个预制体。预制体文件的后缀是”.prefab”</p></li><li><p>使用预制体：将预制体直接拖拽到Hierarchy面板或Scene面板，都可以在场景中创建一个相应的物体</p></li><li><p>预制体与非预制体的区别：</p><ol><li><p>在Hierarchy面板中，非预制体颜色是白色，预制体颜色是蓝色</p></li><li><p>在Inspector面板中，预制体比非预制体多了一个“Prefab”选项</p><p><img src="/2020/01/16/Unity%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/image-20200116155034563.png" alt="image-20200116155034563"></p></li></ol></li><li><p>预制体的好处：编辑其中一个，在Inspector&gt;Prefab，“Apply”一下，所有的全部改变</p></li></ol></li><li><p>Material(材质)：用来更改物体的颜色质地等属性</p><p>新建材质：在Assets文件夹下创建Materials文件夹，在Materials文件夹下右键&gt;Create&gt;Material</p><p>运用举例：</p><ol><li>创建3个Cube预制体，在Materials文件夹下新建一个叫“Black”的材质，在Inspector&gt;Main Maps设置颜色成黑色</li></ol><p><img src="/2020/01/16/Unity%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/image-20200116160725130.png" alt="image-20200116160725130"></p><ol start="2"><li><p>在Hierarchy面板选中其中一个Cube预制体，将”Black”材质拖拽到Inspector&gt;Mesh Renderer&gt;Materials&gt;Element 0，Cube的颜色变为黑色。</p></li><li><p>如果要把其他两个Cube预制体也变成黑色，则在Inspector&gt;Prefabs下点击Overrides旁的小三角，选择Apply All即可</p><p><img src="/2020/01/16/Unity%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/image-20200116161610854.png" alt="image-20200116161610854"></p></li><li><p>如果此时在改变其中一个Cube预制体的材质，其他两个也会跟着一起改变</p></li></ol></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#入坑与VS的使用</title>
      <link href="/2020/01/14/C%20Sharp%E5%85%A5%E5%9D%91%E4%B8%8EVS%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/01/14/C%20Sharp%E5%85%A5%E5%9D%91%E4%B8%8EVS%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>《Professional C# 7 and .NET Core 2.0》、《C#高级编程（第7版）》笔记</p><a id="more"></a><h1 id="一、C-与-net"><a href="#一、C-与-net" class="headerlink" title="一、C#与.net"></a>一、C#与.net</h1><p>C#: 一种编程语言，可以开发基于.net平台的应用</p><p>.net能干啥？</p><ol><li><p>桌面应用程序：C/S程序，比如QQ，办公软件等（Winform应用程序）</p></li><li><p>Internet应用程序：B/S程序，即网站</p></li></ol><h1 id="二、入坑编程语言国际惯例——Hello-World！"><a href="#二、入坑编程语言国际惯例——Hello-World！" class="headerlink" title="二、入坑编程语言国际惯例——Hello World！"></a>二、入坑编程语言国际惯例——Hello World！</h1><p>开发IDE：Visual Studio 2019</p><p>创建项目步骤：</p><p>打开VS2019 &gt; 创建新项目 &gt;  平台选择Windows &gt; 语言选择C# &gt; 项目类型选择控制台 &gt; 自定义项目名、路径，选.Net框架4.7.2 &gt; 完成</p><p>此时模板生成：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ConsoleApp1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>于是我在Main函数下添加了两句</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Console.WriteLine(<span class="string">"Long may the sun shine!"</span>);  <span class="comment">//控制台打印"Long may the sun shine!"</span></span><br><span class="line">Console.ReadKey();  <span class="comment">//等待任意键继续</span></span><br></pre></td></tr></table></figure><p>Ctrl + S 保存，点击功能栏的【启动】，运行程序</p><p><img src="/2020/01/14/C%20Sharp%E5%85%A5%E5%9D%91%E4%B8%8EVS%E7%9A%84%E4%BD%BF%E7%94%A8/image_1.png" alt="image_1"></p><h1 id="三、VS中常用快捷键"><a href="#三、VS中常用快捷键" class="headerlink" title="三、VS中常用快捷键"></a>三、VS中常用快捷键</h1><ul><li>Ctrl + D：拷贝一行</li><li>Ctrl + K + C : 注释选中代码</li><li>Ctrl + K + U : 取消对所选代码的注释</li><li>折叠冗余代码：#region 和 #endregion</li><li>///：方法描述注释</li><li>输入try后按Tab键：快速生成try catch语句</li></ul><h1 id="四、VS界面各部分讲解"><a href="#四、VS界面各部分讲解" class="headerlink" title="四、VS界面各部分讲解"></a>四、VS界面各部分讲解</h1><p><img src="/2020/01/14/C%20Sharp%E5%85%A5%E5%9D%91%E4%B8%8EVS%E7%9A%84%E4%BD%BF%E7%94%A8/image_2.png" alt="image_2"></p><ul><li><p>解决方案、项目、类之间的关系</p><p>解决方案包含项目，一个解决方案可以有多个项目。</p><p>项目包含类，一个项目可以包含多个类。</p></li><li><p>Properties: 属性</p><p>App.config: 配置文件</p><p>Program.cs: 类文件</p></li></ul><p><img src="/2020/01/14/C%20Sharp%E5%85%A5%E5%9D%91%E4%B8%8EVS%E7%9A%84%E4%BD%BF%E7%94%A8/image_3.png" alt="image_3"></p><ol><li>引用命名空间（地址）</li><li>namespace: 项目名称</li><li>Class Program: Program类</li><li>Main函数：程序主入口</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> C&amp;#35 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【GDC】Designing Unforgettable Titanfall Single Player Levels with Action Blocks</title>
      <link href="/2020/01/08/%E3%80%90GDC%E3%80%91Designing%20Unforgettable%20Titanfall%20Single%20Player%20Levels%20with%20Action%20Blocks/"/>
      <url>/2020/01/08/%E3%80%90GDC%E3%80%91Designing%20Unforgettable%20Titanfall%20Single%20Player%20Levels%20with%20Action%20Blocks/</url>
      
        <content type="html"><![CDATA[<h1 id="How-to-Action-Blocks"><a href="#How-to-Action-Blocks" class="headerlink" title="How to Action Blocks"></a>How to Action Blocks</h1><h2 id="Action-Block"><a href="#Action-Block" class="headerlink" title="Action Block"></a>Action Block</h2><p>noun</p><ol><li>A form of rapid prototyping used to encourage creative play</li><li>‘Game jam’ style design sprints used throughout development to explore gameplay</li><li>Common slang for reaching the highest level in Tetris</li></ol><ul><li>One Week (or less) - Mostly</li><li>Single Designer - Mostly</li><li>Must Have a Skill Test<ul><li>No Skits or Cool Moments</li></ul></li><li>No Context Necessary - But not discourage</li><li>Make it Playable - Mostly</li><li>Show &amp; Tell</li></ul><p>Freeform Exploration!</p><ul><li>Make a Roadmap</li><li>Create a Library</li><li>Set Boundaries</li><li>Defining Moment</li></ul><p>Going Deep Into the Abyss</p><ul><li>Abstract</li><li>Thematic Exploration</li><li>Kill Your (metaphorical) Babies</li><li>Quick Mash-ups</li></ul><ul><li>The Grand Rebeal</li><li>One-upmanship</li><li>Production Bloat</li><li>Contextualization</li><li>Action Blocks are not Level Design</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何用Markdown画流程图</title>
      <link href="/2020/01/08/%E5%A6%82%E4%BD%95%E7%94%A8Markdown%E7%94%BB%E6%B5%81%E7%A8%8B%E5%9B%BE/"/>
      <url>/2020/01/08/%E5%A6%82%E4%BD%95%E7%94%A8Markdown%E7%94%BB%E6%B5%81%E7%A8%8B%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<p>用Markdown画流程图可以用mermaid，mermaid支持三种图形的绘制, 分别是流程图, 时序图和甘特图</p><h1 id="一、如何在markdown中使用mermaid"><a href="#一、如何在markdown中使用mermaid" class="headerlink" title="一、如何在markdown中使用mermaid"></a>一、如何在markdown中使用mermaid</h1><blockquote><p>‘’’mermaid<br>        graph 流程图方向<br>        流程图的内容<br>‘’’</p></blockquote><p>流程图方向有以下几个值：</p><ul><li>TB 从上到下</li><li>BT 从下到上</li><li>RL 从右到左</li><li>LR 从左到右</li><li>TD 同TB<h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mermaid</span><br><span class="line">graph TD</span><br><span class="line">A --&gt; B</span><br></pre></td></tr></table></figure><pre class="mermaid">    graph TD    A --> B</pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mermaid</span><br><span class="line">graph LR</span><br><span class="line">A --&gt; B</span><br></pre></td></tr></table></figure><pre class="mermaid">graph LR    A --> B</pre><p>框图的基本边框</p><ul><li>id + [文字描述]矩形</li><li>id + (文字描述)圆角矩形</li><li>id + &gt;文字描述]不对称矩形</li><li>id + {文字描述}菱形</li><li>id + ((文字描述))圆形</li></ul><h2 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mermaid</span><br><span class="line">graph TD</span><br><span class="line">    id[矩形]</span><br><span class="line">    id4(圆角矩形)</span><br><span class="line">    id3&gt;不对称的矩形]</span><br><span class="line">    id1&#123;菱形&#125;</span><br><span class="line">    id2((圆形))</span><br></pre></td></tr></table></figure><pre class="mermaid">    graph TD        id[矩形]        id4(圆角矩形)        id3>不对称的矩形]        id1{菱形}        id2((圆形))</pre>]]></content>
      
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【GDC】Level Design Workshop：Blockmesh and Lighting Tips</title>
      <link href="/2020/01/08/%E3%80%90GDC%E3%80%91Level%20Design%20Workshop%EF%BC%9ABlockmesh%20and%20Lighting%20Tips/"/>
      <url>/2020/01/08/%E3%80%90GDC%E3%80%91Level%20Design%20Workshop%EF%BC%9ABlockmesh%20and%20Lighting%20Tips/</url>
      
        <content type="html"><![CDATA[<h1 id="Invisible-Intuition：Blockmesh-and-Lighting-Tips-to-Guide-Players-and-Set-the-Mood"><a href="#Invisible-Intuition：Blockmesh-and-Lighting-Tips-to-Guide-Players-and-Set-the-Mood" class="headerlink" title="Invisible Intuition：Blockmesh and Lighting Tips to Guide Players and Set the Mood"></a>Invisible Intuition：Blockmesh and Lighting Tips to Guide Players and Set the Mood</h1><h2 id="What-is-“Blockmesh”"><a href="#What-is-“Blockmesh”" class="headerlink" title="What is “Blockmesh” ?"></a>What is “Blockmesh” ?</h2><ul><li>Blockmesh = Greybox = Whitebox, etc.</li><li>Greybox and Whitebox implt a single color - not ideal! 灰盒和白盒一般只有一种颜色，不够理想</li></ul><h2 id="Level-Design-Pipeline"><a href="#Level-Design-Pipeline" class="headerlink" title="Level Design Pipeline"></a>Level Design Pipeline</h2><pre class="mermaid">    graph LR    A(Level Requirements) --> B(Build Blockmesh Layout 搭建Blockmesh布局)    B --> C(Playtest Layout 测试布局)    C --> D(Process Feedback 处理反馈)    D --> B</pre><ul><li>Environment Type 环境需求</li><li>Time of Day 当日时间</li><li>Location in Story 故事地点</li><li>Available Character Abilities 允许玩家使用的能力</li><li>Enemy Type 敌人种类</li><li>etc.</li><li>Gameplay and Narrative Beats 游戏性以及叙事性的节拍</li></ul><h2 id="Affordance-可见性"><a href="#Affordance-可见性" class="headerlink" title="Affordance 可见性"></a>Affordance 可见性</h2><ul><li>Form implies function 形式暗示着功能</li></ul><h3 id="Affordance-…-in-Games"><a href="#Affordance-…-in-Games" class="headerlink" title="Affordance … in Games"></a>Affordance … in Games</h3><ul><li>A way to communicate to the player what to play with or where to go. 一种告诉玩家玩什么或到哪去的方法</li><li>Players learn the affordance rules via consistent color and shape and a trust contract is formed. 玩家通过相同的颜色和形状来学习可见性规则，同时信任该规则</li><li>Ensure affordances work consistently game-wide. 确保可见性规则在游戏内保持一致</li><li>Add to your blockmesh for playtests! 在游戏测试中添加到你的blockmesh中</li></ul><h2 id="Denying-Affordance-拒绝式可见性"><a href="#Denying-Affordance-拒绝式可见性" class="headerlink" title="Denying Affordance 拒绝式可见性"></a>Denying Affordance 拒绝式可见性</h2><ul><li>Communicates to the player where NOT to go. 告诉玩家不能去的地方</li><li>“Uninvites” the player from going there. 不允许玩家去哪</li><li>Contextualize why the player can’t use it/go there! 根据情境告诉玩家为什么不能使用某物或去某地</li><li>Add to your blockmesh for playtests! 在游戏测试中添加到你的blockmesh中</li></ul><h2 id="Visual-Language-Shape"><a href="#Visual-Language-Shape" class="headerlink" title="Visual Language - Shape"></a>Visual Language - Shape</h2><ul><li>绿色圆形代表安全</li><li>黄色矩形代表稳定、实用</li><li>红色三角形代表危险</li></ul><h2 id="Landmarks-aka-weenies-地标"><a href="#Landmarks-aka-weenies-地标" class="headerlink" title="Landmarks (aka weenies) 地标"></a>Landmarks (aka weenies) 地标</h2><ul><li>Orients Players. 引导玩家</li><li>Distant object seen from many vantage points in the level. 从关卡的许多视角都能看到</li><li>A goal to work toward. 一个努力前往的目标</li></ul><h2 id="Openings-Attract-开放式吸引"><a href="#Openings-Attract-开放式吸引" class="headerlink" title="Openings Attract 开放式吸引"></a>Openings Attract 开放式吸引</h2><ul><li>Caves, doors, archways拱门, etc.</li><li>Often leads to a REFUGE SPACE, which psychologically feels safe. 通常导向一个心理上感到安全的避难所</li><li>Mystery神秘感 - “What could be inside?!”</li></ul><h2 id="Gates-amp-Valves"><a href="#Gates-amp-Valves" class="headerlink" title="Gates &amp; Valves"></a>Gates &amp; Valves</h2><ul><li>Gates stop progress until conditions are met. 在满足条件以前，门不会打开</li><li>Valves prevent backtracking.</li><li>Both reduce the possibility space and prevent aimless wandering瞎逛.</li><li>Great for linear games, but can be sprinkled运用 into open worlds too!</li></ul><h2 id="Leading-Lines-引导线"><a href="#Leading-Lines-引导线" class="headerlink" title="Leading Lines 引导线"></a>Leading Lines 引导线</h2><ul><li>Lines that draw your eye to the intended point of interest.</li><li>Roads, pipes, cables, etc.</li></ul><h2 id="Pinching-挤压视线"><a href="#Pinching-挤压视线" class="headerlink" title="Pinching 挤压视线"></a>Pinching 挤压视线</h2><ul><li>Angle shapes to funnel players to a specific spot.利用角度吸引玩家到特定地点</li><li>Good for redirection. 适合重新引导</li><li>Great for setting up a reveal. 非常适合设置展示</li><li>Depends on your mobility mechanics! 根据你的移动机制</li></ul><h2 id="Framing-amp-Composition-框架以及构成"><a href="#Framing-amp-Composition-框架以及构成" class="headerlink" title="Framing &amp; Composition 框架以及构成"></a>Framing &amp; Composition 框架以及构成</h2><ul><li>Draws attention to point of interest by blocking other parts of the image, making it stand out.</li><li>Google photography composition techniques - lots of good websites!</li><li>Great when combined with Pinching!</li></ul><h2 id="Breadcrumbs-面包屑"><a href="#Breadcrumbs-面包屑" class="headerlink" title="Breadcrumbs 面包屑"></a>Breadcrumbs 面包屑</h2><ul><li>Attract/lead the player, a piece at a time, to a goal.一点点引导玩家到目的地，可以是任何能博眼球的东西</li><li>Can be almost anything that draws the eye:<ul><li>Stuff that breaks up the negative space of floor/walls. 打破地板的东西</li><li>Pickups 可以捡起的东西</li><li>Enemies 敌人</li><li>Lit areas 明亮的区域</li></ul></li><li>Usually better to add after early playtests of blockmesh to see if they are even needed. 最好在早期的游戏测试之后，根据需要添加</li></ul><h2 id="Textures-材质"><a href="#Textures-材质" class="headerlink" title="Textures 材质"></a>Textures 材质</h2><ul><li>just point the way to go!</li><li>Examples:<ul><li>Arrows pointing the way.</li><li>Scrapes on the ground/walls. 地上或墙上的抓痕</li><li>Signs 标记</li><li>etc.</li></ul></li></ul><h2 id="Movement"><a href="#Movement" class="headerlink" title="Movement"></a>Movement</h2><ul><li>Use movement to grab the eye.</li><li>Examples:<ul><li>Big scripted moments. 大型脚本</li><li>Birds</li><li>Spark FX 火花特效</li><li>Enemies</li><li>Something flapping in the breeze 微风中漂浮的东西</li></ul></li><li>Directionality guides the eye to where you want players to go or what you want them to see.</li></ul><h2 id="Light-amp-God-Ray-光照以及光线"><a href="#Light-amp-God-Ray-光照以及光线" class="headerlink" title="Light &amp; God Ray 光照以及光线"></a>Light &amp; God Ray 光照以及光线</h2><ul><li>Players are attracted to the light.</li><li>God rays draw attention and a line to the goal.</li><li>Important in blockmesh phase阶段!</li></ul><h2 id="Bonus-Tips！——The-Squint-Test-眯眼测试"><a href="#Bonus-Tips！——The-Squint-Test-眯眼测试" class="headerlink" title="Bonus Tips！——The Squint Test 眯眼测试"></a>Bonus Tips！——The Squint Test 眯眼测试</h2><ul><li>Step 1: Squint眯 your eyes and look at the game.</li><li>Step 2: Everything wil be blurry模糊, but what stands out?</li><li>Step 3: Adjust your layout布局 and lighting光源 to highlight强调 what you want players to focus on.</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UE4蓝图 第2课</title>
      <link href="/2020/01/08/UE4%E8%93%9D%E5%9B%BE%20%E7%AC%AC2%E8%AF%BE/"/>
      <url>/2020/01/08/UE4%E8%93%9D%E5%9B%BE%20%E7%AC%AC2%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<p>主讲人：神经刀游戏工作室<br><a href="https://www.bilibili.com/video/av33992806" target="_blank" rel="noopener">https://www.bilibili.com/video/av33992806</a></p><p>接上一堂课</p><p>接下来给角色赋予其他行动功能</p><ol><li><p>进入【项目设置】的【引擎】【输入】，在Axis Mappings下自定义添加一个“MoveRight”</p><ul><li>添加按键【键盘A】,Scale设置为-1.0</li><li>添加按键【键盘D】,Scale设置为1.0</li></ul></li><li><p>在Axis Mappings下自定义添加一个“Turn”</p><ul><li>添加【鼠标X】,Scale设置为1.0</li></ul></li><li><p>在Axis Mappings下自定义添加一个“LookUp”</p><ul><li>添加【鼠标Y】,Scale设置为-1.0</li></ul></li><li><p>进入“APlayerController”，在事件图表下，添加坐标轴事件“MoveRight”</p></li><li><p>复制粘贴一个“Add Movement Input“</p></li><li><p>添加一个Pawn操作“Get Control Rotation”、一个”Get Right Vectot”</p></li><li><p>添加坐标轴事件”Turn“和”LookUp“</p></li><li><p>添加”Add Yaw Input”、”Add Pitch Input”、”Add Roll Input”</p><ul><li>Pawn控制角色的行动，PlayerController控制控制器的旋转功能</li></ul></li><li><p>连线如图<br> <img src="/2020/01/08/UE4%E8%93%9D%E5%9B%BE%20%E7%AC%AC2%E8%AF%BE/APlayerControllerBP.png" alt="APlayerControllerBP"></p></li><li><p>进入APlayer，选中【SwingArm】，在【细节】【Camera Settings】把【Use Pawn Control Rotation】打勾，编译，保存</p></li><li><p>此时点【播放】，角色可以左右平移，角色正面紧随摄像机视角改变朝向</p></li><li><p>进入APlayer，选中【组件】下的【CharacterMovement】,在【细节】【Character Movement(Rotation Settings)】</p><ul><li>【Rotation Rate】【Z】改成1000。(修改角色转身速率)</li><li>【Orient Rotation to Movement】打勾</li></ul></li><li><p>选中【组件】下的【APlayer(自身)】，在【细节】【Pawn】下把【Use Controller Rotation Yaw】取消打勾，编译，保存。</p></li><li><p>此时点【播放】，角色正面不紧随摄像机视角改变朝向，只有在行动时转身改变朝向</p></li><li><p>怎么给蓝图写注释？</p><ul><li>选中/框选要注释的操作，按【C】产生注释框，注释框可以嵌套</li><li>选中注释框，在右边【细节】【Comment Color】改注释区域的颜色、透明度</li></ul></li><li><p>在APlayer里选中【组件】【Mesh】，在【细节】【Mesh】里可以点击放大镜按钮，可以定位并选中当前使用的模型</p></li></ol><p><img src="/2020/01/08/UE4%E8%93%9D%E5%9B%BE%20%E7%AC%AC2%E8%AF%BE/LocateMeshButton.png" alt="LocateMeshButton"></p><p><img src="/2020/01/08/UE4%E8%93%9D%E5%9B%BE%20%E7%AC%AC2%E8%AF%BE/LocatedMesh.png" alt="LocatedMesh"></p><ol start="17"><li><p>双击”SK_Mannequin“打开模型</p></li><li><p>模型五大部分：骨架、网格体、动画、蓝图、物理</p><p><img src="/2020/01/08/UE4%E8%93%9D%E5%9B%BE%20%E7%AC%AC2%E8%AF%BE/photo_1.png" alt="photo_1"></p></li><li><p>骨架上填满了”肉“就成了网格体，骨骼是根本，一个骨骼对应多个网格体多个动画多个物理多个蓝图（动画蓝图），一个动画仅对应唯一一个骨骼，动画跟着骨骼走。</p></li><li><p>点击【浏览】按钮可以定位选中具体的文件</p><p><img src="/2020/01/08/UE4%E8%93%9D%E5%9B%BE%20%E7%AC%AC2%E8%AF%BE/photo_2.png" alt="photo_2"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Game Develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UE4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UE4蓝图 第1课</title>
      <link href="/2020/01/08/UE4%E8%93%9D%E5%9B%BE%20%E7%AC%AC1%E8%AF%BE/"/>
      <url>/2020/01/08/UE4%E8%93%9D%E5%9B%BE%20%E7%AC%AC1%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<p>主讲人：神经刀游戏工作室<br><a href="https://www.bilibili.com/video/av33932971" target="_blank" rel="noopener">https://www.bilibili.com/video/av33932971</a></p><ol><li><p>创建项目（蓝图、第三人称模板）</p></li><li><p>下方【内容浏览器】右键新建</p><ul><li>“Player”文件夹（存放角色）</li><li>“Map”文件夹（存放关卡）</li><li>“Gameplay”文件夹（存放玩法）</li></ul></li><li><p>Map文件夹下右键新建一个【关卡】</p></li><li><p>左边【模式】下，从【光照】拖拽出：</p><ul><li>一个【定向光源】</li><li>一个【天空光源】</li></ul><p>从【视觉效果】拖拽出一个【大气雾】</p><p>从【基本】拖拽出一个【立方体】</p></li><li><p>右边【细节】里把立方体的位置归零（点击“回车符号按钮”）</p><ul><li>键盘上按【W】切换到调整<strong>位置</strong>坐标系</li><li>按【E】切换到调整旋转<strong>角度</strong>坐标系</li><li>【R】切换到调整<strong>大小</strong>坐标系</li></ul></li><li><p>把立方体调成一个供角色落脚的平台</p></li><li><p>从左边【基本】里拖拽出一个【玩家起始】</p></li><li><p>“GamePlay”文件夹下右键新建一个【蓝图类】，选择【Game Mode Base】</p></li><li><p>Player文件夹下右键新建：</p><ul><li>一个【蓝图类】的【Character】，取名“APlayer”，</li><li>一个【蓝图类】的【Player Controller】，取名“APlayerController”</li></ul></li><li><p>双击进入“APlayer”，</p><ul><li>选中左边【组件】里的【Mesh】，</li><li>右边【细节】中【Mesh】下Skeletal Mesh选择”SK_Mannequin”,</li><li>【细节】中【变换】下的【旋转Z轴】改成“-90°“，【位置Z轴】改成”-92”</li></ul><p>选中左边【组件】里的【CapsuleCoponent】，点击上方【添加组件】按钮，选择【SwingArm】</p><p>在新添加的SwingArm组件下新建一个【Camera】</p><p>把SwingArm垂直调节到与角色肩差不多同高度的位置</p><p>编译，保存</p></li><li><p>点击工具栏的【编辑】，进入【项目设置】，进到左边【引擎】下的【输入】</p></li><li><p>在”Axis Mapping“下自定义添加一个“Moveforward”,</p><ul><li>添加一个按键，选择【键盘W】，”Scale“设置为“1.0”</li><li>添加一个按键，选择【键盘S】，“Scale”设置为“-1.0”</li></ul></li><li><p>进入“APlayerController”，在【事件图表】下，右键添加一个操作【坐标轴事件】“Moveforward”</p><ul><li>【坐标轴事件】“Moveforward”这个操作是玩家的一种输入</li></ul><p>右键添加一个操作【Pawn】“Get Controlled Pawn”</p><ul><li><p>Charactor是一种特殊的Pawn，所以用“Get Controlled Pawn”即可</p><p>APlayerController蓝图：</p></li></ul></li></ol><p><img src="/2020/01/08/UE4%E8%93%9D%E5%9B%BE%20%E7%AC%AC1%E8%AF%BE/APlayerControllerBP.png" alt="APlayerControllerBP"></p><ol start="14"><li><p>进入APlayerMode，选中【工具栏】面板下的【类默认值】，在【细节】里【Classes】下</p><ul><li>把Player Controller Class改成自己建的“APlayerController”</li><li>把Default Pawn Class改成自己建的“APlayer”</li></ul><p>编译，保存</p></li><li><p>回到自己建的关卡，把【细节】旁边的【世界设置】里把GameMode Override默认的“None”改成自己建的“APlayerMode”</p><ul><li>如果【细节】旁边没有【世界设置】，可以编辑器最上方第二栏的【窗口】里调出</li></ul><p>编译、保存</p></li><li><p>此时在自建的关卡里可以点击播放后用W/S操控角色前后平移。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Game Develop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UE4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置Git的SSH Key</title>
      <link href="/2020/01/08/%E9%85%8D%E7%BD%AEGit%E7%9A%84SSH%20Key/"/>
      <url>/2020/01/08/%E9%85%8D%E7%BD%AEGit%E7%9A%84SSH%20Key/</url>
      
        <content type="html"><![CDATA[<h1 id="生成SSH并添加到GitHub"><a href="#生成SSH并添加到GitHub" class="headerlink" title="生成SSH并添加到GitHub"></a>生成SSH并添加到GitHub</h1><p>回到你的git bash中，</p><blockquote><p>git config –global user.name “yourname”<br>git config –global user.email “youremail”</p></blockquote><p>这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。</p><p>可以用以下两条，检查一下是否输对</p><blockquote><p>git config user.name<br>git config user.email</p></blockquote><p>然后创建SSH,一路回车</p><blockquote><p>ssh-keygen -t rsa -C “youremail”</p></blockquote><p>这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹。</p><p>ssh，简单来讲，就是一个秘钥，其中，id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。</p><p>而后在GitHub的setting中，找到SSH keys的设置选项，点击New SSH key<br>把你的id_rsa.pub里面的信息复制进去</p><p>作者：程序员黄小斜<br>链接：<a href="https://www.jianshu.com/p/5efd8c6eb3e9" target="_blank" rel="noopener">https://www.jianshu.com/p/5efd8c6eb3e9</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【GDC】Platinum Games：Action Without Borders</title>
      <link href="/2020/01/08/%E3%80%90GDC%E3%80%91Platinum%20Games%EF%BC%9AAction%20Without%20Borders/"/>
      <url>/2020/01/08/%E3%80%90GDC%E3%80%91Platinum%20Games%EF%BC%9AAction%20Without%20Borders/</url>
      
        <content type="html"><![CDATA[<h2 id="What-is-an-Action-Game"><a href="#What-is-an-Action-Game" class="headerlink" title="What is an Action Game?"></a>What is an Action Game?</h2><ul><li><p>A set of actions responding to output 一系列针对输出的动作</p><ul><li>Passive activity 被动行为<ul><li>This sounds like the exact opposite of action</li></ul></li></ul></li><li><p>Activity based on prior (active) input</p><ul><li>Adventure/Horror games<ul><li>This is opposite to the impression horror games give off</li></ul></li></ul></li><li><p>What are “action skills”?</p><ul><li>The player’s ability to deal with a given situation</li></ul></li></ul><h2 id="Gameplay-Systems"><a href="#Gameplay-Systems" class="headerlink" title="Gameplay Systems"></a>Gameplay Systems</h2><ul><li>What are gameplay systems?<ul><li>The selling point of a game<ul><li>The unique elements that define a game</li></ul></li><li>Expanding features<ul><li>Lateral expansion to prevent games from becoming too linear</li></ul></li><li>Depth</li></ul></li><li>If a game has selling points A/B/C, expanding features D/E, and depth elements F/G:<ul><li>Players complete the game having experienced A and B<ul><li>They’ve completed and enjoyed the game</li></ul></li><li>Players complete the game having experienced A,B, and C<ul><li>They’ve completed the game and feel like they got a lot of it</li></ul></li><li>Players complete the game having experienced A,B,C and D<ul><li>They’ve complete the game, and become good at it in a variety of ways</li></ul></li><li>Players complete the game having experienced A,B,C,D and E<ul><li>“Wow! I didn’t know you could do that! This game is awesome!!”</li></ul></li><li>Players complete the game having experienced A,B,C,D,E and F<ul><li>“I am a god among mortals!”</li></ul></li></ul></li><li>How to approach the selling points of an action game<ul><li>It’s not about functional design<ul><li>The question “What abilities shall we give the player?” never comes first</li></ul></li><li>It’s about situational design<ul><li>The first thing to figure out is: “What kind of situations do we put the player in, and what are we going to make them do?”</li></ul></li></ul></li><li>One more important things about the design of selling points:<ul><li>When creating a game in a series, you already have an existing ability set to work with ,so:<ul><li>It’s easy to fall into the trap of changing A to A’ or A+B, but this is a mistake</li><li>Always give top priority to situational design</li></ul></li></ul></li></ul><h2 id="Replay-Value"><a href="#Replay-Value" class="headerlink" title="Replay Value"></a>Replay Value</h2><ul><li>What is replay value?<ul><li>The point is not to force the player to keep playing</li><li>Replay value has to be linked to fun activities</li><li>It’s essential that the player get to imrove their skills<ul><li>This requires a structure that lets the player enjoy all of elements A,B,C,D,E, and F</li><li>Make the game feel like it was tailor-made for the player 让游戏感觉像是为玩家量身定做的</li></ul></li></ul></li></ul><h2 id="Characters"><a href="#Characters" class="headerlink" title="Characters"></a>Characters</h2><ul><li>Action games let players enjoy a character’s superpowers<ul><li>Fulfilling the desire to transform<ul><li>This requires main characters with rich personalities</li></ul></li><li>Fight your way through any situation</li></ul></li><li>The order of designing unique characters with superpowers<ul><li>Imagine the situation<ul><li>Create an image board</li></ul></li><li>Design the game’s selling points<ul><li>Functional design</li></ul></li><li>Start designing the characters</li></ul></li><li>Character art design directly and strongly affects the user experience</li></ul><h2 id="Story"><a href="#Story" class="headerlink" title="Story"></a>Story</h2><ul><li>What purpose does story have in an action game?<ul><li>The most important purpose is “Motivation”</li><li>Deep stories with lots of twists are not required 不需要有很多曲折的故事</li><li>The story should turn the designed situation into motivation in a natural way 故事应该以自然的方式将设计好的情境转化为动机</li></ul></li></ul><h2 id="High-level-Design"><a href="#High-level-Design" class="headerlink" title="High-level Design"></a>High-level Design</h2><ul><li><p>Not the same as level design</p><ul><li>Considering the game flow in the largest possible unit 思考可能最大的游戏流程单位</li></ul></li><li><p>Simply bombarding players with constant excitement become numbing after a while 仅仅持续性使玩家兴奋，会使玩家过一会儿就对兴奋点麻木</p></li><li><p>Create a tempo per stage 每个关卡制造一个节奏</p><ul><li>Pacing is very important 节奏很重要</li></ul></li><li><p>Stage “Strength” 关卡强度</p><p>关卡序号    设置强度（1-10）    玩家感受</p><p>St. 1:                    6                            7</p><p>St. 2:                    4                            4</p><p>St. 3:                    6                            5</p><p>St. 4:                    7                            8</p><p>制作成本：6+4+6+7=23    制作效果：7+4+5+8=24</p></li><li><p>Stage “Strength”(example of failed build-up)</p><p>St. 1:    5    6    4</p><p>St. 2:    6    5    5</p><p>St. 3:    7    5    5</p><p>St. 4:    8    6    4</p><p>5+6+7+8=26    4+5+5+4=18</p></li><li><p>With Transformers we focused on density</p><ul><li>We didn’t want players to put down the controller</li></ul></li></ul><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2>]]></content>
      
      
      
        <tags>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【知乎Live】欧美3A游戏公司的游戏设计与制作</title>
      <link href="/2020/01/08/%E3%80%90%E7%9F%A5%E4%B9%8ELive%E3%80%91%E6%AC%A7%E7%BE%8E3A%E6%B8%B8%E6%88%8F%E5%85%AC%E5%8F%B8%E7%9A%84%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%B6%E4%BD%9C/"/>
      <url>/2020/01/08/%E3%80%90%E7%9F%A5%E4%B9%8ELive%E3%80%91%E6%AC%A7%E7%BE%8E3A%E6%B8%B8%E6%88%8F%E5%85%AC%E5%8F%B8%E7%9A%84%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%B6%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p><strong>主讲人：Clark 杨佳阳</strong></p><p><a href="https://www.zhihu.com/lives/787986309099560960" target="_blank" rel="noopener">https://www.zhihu.com/lives/787986309099560960</a></p><ul><li>AAA项目的团队组成是什么样子？</li><li>团队之间的职能细化如何？</li><li>AAA游戏的制作过程是什么样子？</li><li>不同公司团队之间的开发流程，组别在哪里？</li><li>行业前景如何？</li><li>问答环节</li></ul><h2 id="一、关于设计的问题"><a href="#一、关于设计的问题" class="headerlink" title="一、关于设计的问题"></a>一、关于设计的问题</h2><h3 id="1-立项前要进行很详细的市场调查"><a href="#1-立项前要进行很详细的市场调查" class="headerlink" title="1. 立项前要进行很详细的市场调查"></a>1. 立项前要进行很详细的市场调查</h3><p>什么样的游戏可以赚钱？什么样的游戏更容易打开市场？什么样新的IP可以立足于市场？总部、市场部、总部设计主管、团队设计主管进行大量的讨论、分析，然后做出一个详细的大框架（PPT一页纸概括）。比如说，我们要做一个游戏有40个小时的游戏时长，不希望这个游戏一个周末就可以打完。游戏的历史背景，我们要做第三人称，我们是否要做射击、格斗？必须要有RPG养成要素？</p><h3 id="2-做一个highlevel的宏观的设计方向（做target-footage）"><a href="#2-做一个highlevel的宏观的设计方向（做target-footage）" class="headerlink" title="2.做一个highlevel的宏观的设计方向（做target footage）"></a>2.做一个highlevel的宏观的设计方向（做target footage）</h3><p>用3DMax/Maya做一个假的游戏设想的视频，要透露出游戏的玩法、美术风格、整个游戏格调。视频要在5~10分钟把这个游戏讲得很明白。</p><p>回到总部，与市场部协调，看看这个假的游戏是否符合初衷。如果市场稳定，这个游戏有前景，基本可以协调通过且拿到后续的资金。如果这时候市场有变动就需要调整，即回炉重来。如果这一阶段有问题，说明初衷是错误的。</p><h3 id="3-pre-production阶段"><a href="#3-pre-production阶段" class="headerlink" title="3. pre-production阶段"></a>3. pre-production阶段</h3><p>进行大量的原型设计（prototype），占80%~90%的时间，最有趣，最困难的时期。每个人都有很多想法，比如说我想做成实时加载，每一个NPC都会有介绍等，完全天马行空，但由于时间问题技术问题，很多东西做不出来，因为需要大量的程序资源和大量的美术资源加进去。对于设计来说，这个阶段最自由，可以把很多想法比如5年前10年前的想法用最快的方法做出来。在这个阶段，每个项目的总监（创意总监、游戏性总监）需要承担很大的责任，因为不可能让所有人都去随便做自己想做的东西，这很浪费时间。因此，需要反复看原型，看是否会做成最终成品。原型阶段没有大量资源，这个雏形一定非常丑，达不到可以发售的质量。我们必须分析出哪些丑陋的“小孩”（原型）以后可以长成“大美女”（高质量成品）。这很关键，如果我们能选择出真正有潜力的feature（特征）、功能，这对后边的production有很大帮助。</p><p>花一年时间都不算长，因为很多尝试性的东西，不仅是设计上的尝试，还有技术上比如引擎需要完善，美术的一整套要完善，动画甚至最基本的面部表情技术也要达到很稳定阶段。否则后边production阶段会非常头疼。</p><p>在pre-production结束时把假的游戏做成真正可以玩的2示（demo），把演示拿给市场部、宣传部、给公司大佬们看，然后重新从方向上从底层设计上是否合格，最初的设计可能因为市场变化变成错误的，这个阶段需要决定什么需要改，什么可以继续往下做。如果演示大家都很认可，就可以进入Production。</p><p>这个演示可能只有20分钟到1个小时的gameplay。在进入Production阶段前，其他部门也要做好准备，比如：第一，在设计上在这一阶段最好的情况是所有的细节所有的功能至少在纸面上都已经设计好了；第二，引擎逐渐完善，如何动态加载，如何管理这些内存，一系列type上的东西都需要准备好。美术上，我们要做多大的地图，能够做多大的地图，团队应该如何分配，这一系列问题，都需要准备好。实际中很普遍地是，很多项目的准备都没来得及做好。很多东西在production开始之前没有答案，因此production时需要冒一些风险,在production中把一些东西完善掉。虽然这种情况经常出现，但因为我们知道游戏要往哪里走，知道要做些什么，风险可以控制。</p><h3 id="4-Production（半年到一年之内全部完成）"><a href="#4-Production（半年到一年之内全部完成）" class="headerlink" title="4. Production（半年到一年之内全部完成）"></a>4. Production（半年到一年之内全部完成）</h3><p>大军推进，美术设计、关卡设计、动画、人物等各部门全部开始大规模production，速度非常快，工作量非常大，非常无趣。游戏的feature（特征）、content（内容）全部做完以后进入alpha阶段。</p><h3 id="5-alpha阶段（花3个月到半年）"><a href="#5-alpha阶段（花3个月到半年）" class="headerlink" title="5. alpha阶段（花3个月到半年）"></a>5. alpha阶段（花3个月到半年）</h3><p>开始debug，QA（游戏测试、质量保证）大面积进入。很多时候还是要修改一些东西，发现当初设计的东西有些事不完善的，需要重新改。因为所有资源都已经存在，改起来更容易。游戏可能会在这个阶段发生翻天覆地的变化。</p><h3 id="6-beta阶段"><a href="#6-beta阶段" class="headerlink" title="6. beta阶段"></a>6. beta阶段</h3><p>大部分团队不再工作，他们可能去休假或者去新的项目。需要一个closing team，完完全全是在修bug，一个一个修。能够留下来去close这个项目的人都非常强</p><h3 id="7-master阶段"><a href="#7-master阶段" class="headerlink" title="7. master阶段"></a>7. master阶段</h3><p>游戏做完，项目结束。</p><h2 id="二、问答环节"><a href="#二、问答环节" class="headerlink" title="二、问答环节"></a>二、问答环节</h2><h3 id="1-AAA团队有哪些人构成？"><a href="#1-AAA团队有哪些人构成？" class="headerlink" title="1. AAA团队有哪些人构成？"></a>1. AAA团队有哪些人构成？</h3><p>市场部、运营部、创意总监、游戏总监、美术总监、技术总监</p><h3 id="2-团队协作方式，怎么管理创意？"><a href="#2-团队协作方式，怎么管理创意？" class="headerlink" title="2. 团队协作方式，怎么管理创意？"></a>2. 团队协作方式，怎么管理创意？</h3><p>每个团队都有自己管理创意的方式，不能一概而论，大部分创意总监会倾向于独裁，只是看独裁到什么程度。</p><p>每一个人都有想法，AAA最头疼的问题是如何让很多人做同一款游戏。太民主永远达不到一个统一的风格，需要一个创意总监拿主意拍板。</p><p>设计上选择千万不要去猜！做决策，管理团队，必须需要有很强大的数据做背景来支持，知道什么样的游戏有前景什么样的游戏赚钱，不能靠拍脑袋决定。</p><p>美术细节需要多个工作组和总监协调出来。</p><p>做游戏，需要沟通，大部分时间都在说话，大部分坐着的都是美工。大方向以及细节需要总监决定。</p><h3 id="3-单机游戏中storytelling和gameplay如何结合？"><a href="#3-单机游戏中storytelling和gameplay如何结合？" class="headerlink" title="3. 单机游戏中storytelling和gameplay如何结合？"></a>3. 单机游戏中storytelling和gameplay如何结合？</h3><p>首先要根据游戏要做成什么样子，顽皮狗工作室的游戏gameplay为story服务，其他一些游戏gameplay比story更注重。在一个游戏在最开始确定方向以后，我们就会知道这个游戏是更注重故事还是游戏性，如果注重游戏性，故事会在开发中进驻很晚。一般在production进行到一半，游戏界面成型的时候，故事才进来把游戏串起来。如果完完全全是一个讲故事的游戏，在production之前没有一个完整的gameplay，但但故事流程从a到z全部都是完善的，然后根据故事需要去设计需要什么样的游戏性。</p><h3 id="4-策划需要的参考大部分来源？"><a href="#4-策划需要的参考大部分来源？" class="headerlink" title="4. 策划需要的参考大部分来源？"></a>4. 策划需要的参考大部分来源？</h3><p>Google、YouTube。如果找不到参考，策划和设计、美术、动画在一个会议室里在一块黑板之前画简笔画，用简单的语句表达你想要的是什么。</p><p>原型快成型的时候撰写文档，把细节让其他部门去做。</p><h3 id="5-关卡设计细节问题"><a href="#5-关卡设计细节问题" class="headerlink" title="5. 关卡设计细节问题"></a>5. 关卡设计细节问题</h3><p>关卡细节问题可大可小。关卡设计很大程度上需要去协调各个部门。把所有零件拼在一起的重要工作。</p><p>一定是先确定核心玩法，谜题机制，再确定关卡设计！</p><p>原型设计阶段需要有一个惯性：每一个人有一个想法时，第一版一定是丑的，有没有动力有没有能力在很快的时间之内（一两天内）找到问题解决问题，把它做得更好，这个原型就有一个惯性，当惯性能够保持住时，这个原型到最后的结果就比其他原型好，要重复验证需要时间，第一版花一到两周，然后在一两天必须看到新的版本。如果在一个月之内看不到这个原型有很强的的生命力，或惯性的话，一般情况下这个原型是失败的。</p><h3 id="6-团队和周期："><a href="#6-团队和周期：" class="headerlink" title="6. 团队和周期："></a>6. 团队和周期：</h3><p>例子：育碧蒙特利尔随随便便一个项目上1000人，要在各个工作室的协调之中完成。</p><p><strong>分工</strong>：从团队机构上：最上头：创意总监，游戏总监、美术总监、技术总监、关卡总监、动画总监</p><p>总监之下：游戏设计师、系统程序员（引擎）、gameplay程序员（gamplay逻辑）、音效程序员、网络程序员、关卡设计、任务设计、世界观设计、动画设计，动画美术、镜头师等</p><p><strong>成本</strong>：很容易上5000W</p><p>国外制作人（producer）只管资金和工作进度，还有管理人员之间沟通问题，不管也不可以插手游戏设计。</p><p>所有的项目都会延期，游戏太庞大，火箭级别的项目。</p><p><strong>周期</strong>：短的2年，长的4~5年（特别是新IP）</p><p><em>延期风险怎么解决？</em></p><p>大的延期，制作人和总监能很早预测到，预测完不成就提前去和团队协调，砍掉一些内容。</p><p>每当遇到危机都需要方向上的调整，需要看制作人和总监的能力力挽狂澜。</p><p><strong>其他</strong>：</p><p>AAA项目非常难做，涉及大量资金大量人员，团队少则一两百人，多则上千人。</p><p>1亿美金的项目，需要卖到500万份才能回本，每份开发者只赚20美金，其他利润归物流，零售商、发行商。</p><p>没见过好的项目不加班的。</p><p>经常加班，每天工作14小时，项目完结有假期，一年三周。</p><p>进入production以后，文档的效率非常低，没有必要改文档，大家没有时间看，要改直接交流沟通。</p><p>设计者只是设计了规则，玩家在规则中达到自己想要的。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Game Design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷《算法笔记》小结习题，写代码常犯的错误</title>
      <link href="/2019/08/23/%E5%88%B7%E3%80%8A%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E3%80%8B%E5%B0%8F%E7%BB%93%E4%B9%A0%E9%A2%98%EF%BC%8C%E5%86%99%E4%BB%A3%E7%A0%81%E5%B8%B8%E7%8A%AF%E7%9A%84%E9%94%99%E8%AF%AF/"/>
      <url>/2019/08/23/%E5%88%B7%E3%80%8A%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E3%80%8B%E5%B0%8F%E7%BB%93%E4%B9%A0%E9%A2%98%EF%BC%8C%E5%86%99%E4%BB%A3%E7%A0%81%E5%B8%B8%E7%8A%AF%E7%9A%84%E9%94%99%E8%AF%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="问题-E-例题3-5-求一元二次方程的根"><a href="#问题-E-例题3-5-求一元二次方程的根" class="headerlink" title="问题 E: 例题3-5 求一元二次方程的根"></a>问题 E: 例题3-5 求一元二次方程的根</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>求一元二次方程ax2+bx+c=0的根，三个系数a, b, c由键盘输入，且a不能为0，且保证b2-4ac&gt;0。</p><p>程序中所涉及的变量均为double类型。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>以空格分隔的一元二次方程的三个系数，双精度double类型</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>分行输出两个根如下（注意末尾的换行）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">r1&#x3D;第一个根</span><br><span class="line"></span><br><span class="line">r2&#x3D;第二个根</span><br></pre></td></tr></table></figure><p>结果输出时，宽度占7位，其中小数部分2位。</p><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 3 2</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r1&#x3D;  -1.00</span><br><span class="line">r2&#x3D;  -2.00</span><br></pre></td></tr></table></figure><h2 id="自写答案："><a href="#自写答案：" class="headerlink" title="自写答案："></a>自写答案：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> a, b, c, r1, r2;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf %lf %lf"</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">    <span class="keyword">if</span>((a != <span class="number">0</span>) &amp;&amp; (<span class="built_in">pow</span>(b,<span class="number">2.0</span>)<span class="number">-4</span>*a*c &gt; <span class="number">0</span>))&#123;</span><br><span class="line">        r1 = ((-b)+<span class="built_in">sqrt</span>(<span class="built_in">pow</span>(b,<span class="number">2.0</span>)<span class="number">-4</span>*a*c))/(<span class="number">2</span>*a);<span class="comment">//注意sqrt()容易写错成sqrt()</span></span><br><span class="line">        r2 = ((-b)-<span class="built_in">sqrt</span>(<span class="built_in">pow</span>(b,<span class="number">2.0</span>)<span class="number">-4</span>*a*c))/(<span class="number">2</span>*a);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"r1=%7.2f\n"</span>, r1);<span class="comment">//打印的结果占7位，其中小数部分占2位</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"r2=%7.2f"</span>, r2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeBlocks的入门操作</title>
      <link href="/2019/07/30/CodeBlocks%E7%9A%84%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/"/>
      <url>/2019/07/30/CodeBlocks%E7%9A%84%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>安装好CodeBlocks 16.0.1后打开软件，新建工程：File -&gt; New -&gt; Project…</p><p>选择“Console application”，一路“Next”来到如下界面：</p><p><img src="/2019/07/30/CodeBlocks%E7%9A%84%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/photo_1.png" alt="photo_1"></p><p>手动选择工程的保存路径，注意第二行新建工程的路径和最后一行保存工程文件的路径要保持一致如下图，否则后续编译运行程序时容易报奇怪的错。</p><p><img src="/2019/07/30/CodeBlocks%E7%9A%84%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/photo_2.png" alt="photo_2"></p><p>设置好以后点击“Next”，编译器设置默认，点击“Finish”</p><p><img src="/2019/07/30/CodeBlocks%E7%9A%84%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/photo_3.png" alt="photo_3"></p><p>新建项目完成后，可以看到source文件夹下有一个自动建好的带主函数的源文件main.cpp。可以把它删掉后另建：单击选中main.cpp，右键调出菜单选择“R二move file from project”</p><p>新建一个.cpp(或.c)文件:File -&gt; New -&gt; File…</p><p>选择“C/C++ source”，一路“Next”，选择源文件保存路径（建好的工程文件夹）并添上文件名“test01.cpp”（看见刚才的“main.cpp”记得删掉）。</p><p>此时，新建的源文件还没有在工程里，需要手动添加进去。选中工程，右键调出菜单，选择“Add files…”。选择“test01.cpp”,点击“打开”源文件就添加好了。</p><p><img src="/2019/07/30/CodeBlocks%E7%9A%84%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/photo_4.png" alt="photo_4"></p><p>在“test01.cpp”写好代码,编译无报错后运行即可。</p><p><img src="/2019/07/30/CodeBlocks%E7%9A%84%E5%85%A5%E9%97%A8%E6%93%8D%E4%BD%9C/photo_5.png" alt="photo_5"></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> CodeBlocks </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Win 10中使用命令行界面编译、运行一个cpp文件</title>
      <link href="/2019/07/05/%E5%9C%A8Win%2010%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%95%8C%E9%9D%A2%E7%BC%96%E8%AF%91%E3%80%81%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AAcpp%E6%96%87%E4%BB%B6/"/>
      <url>/2019/07/05/%E5%9C%A8Win%2010%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%95%8C%E9%9D%A2%E7%BC%96%E8%AF%91%E3%80%81%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AAcpp%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="源文件准备"><a href="#源文件准备" class="headerlink" title="源文件准备"></a>源文件准备</h2><p>新建一个文件取名hello.cpp，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int main()&#123;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编译器准备"><a href="#编译器准备" class="headerlink" title="编译器准备"></a>编译器准备</h2><p>Visual C++组件包含一个C++命令编译器，这个编译器还可用于创建基本的控制台程序、通用Windows平台程序、桌面程序、设备驱动和.NET组建。</p><p>从微软的Visaul Studio官网下载Visual Studio Community 2017。</p><p>安装过程中注意勾选“Desktop development with C++”</p><h2 id="打开开发者命令提示符"><a href="#打开开发者命令提示符" class="headerlink" title="打开开发者命令提示符"></a>打开开发者命令提示符</h2><p>点击“开始”菜单，在程序列表找到并点击Visual Studio 2017文件夹下的“VS 2017的开发人员命令提示符”</p><p>输入如下命令以验证VC++的开发者命令提示符已设置妥当：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cl</span><br></pre></td></tr></table></figure><p>窗口会反馈如下：</p><blockquote><p>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community&gt;cl<br>Microsoft (R) C/C++ Optimizing Compiler Version 19.15.26732.1 for x86<br>Copyright (C) Microsoft Corporation.  All rights reserved.</p><p>usage: cl [ option… ] filename… [ /link linkoption… ]</p></blockquote><h2 id="编译cpp源文件"><a href="#编译cpp源文件" class="headerlink" title="编译cpp源文件"></a>编译cpp源文件</h2><p>安装完编译所需的工具后，在开发者命令提示符界面中输入命令，将当前目录切换到源代码文件所在的目录。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">d:</span><br><span class="line">cd d:\ProgrammingLearning\cpp</span><br></pre></td></tr></table></figure><p>输入以下代码编译源文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cl &#x2F;EHsc hello.cpp</span><br></pre></td></tr></table></figure><p>窗口反馈如下，则表示编译成功：</p><blockquote><p>Microsoft (R) C/C++ Optimizing Compiler Version 19.15.26732.1 for x86<br>Copyright (C) Microsoft Corporation.  All rights reserved.</p><p>hello.cpp<br>Microsoft (R) Incremental Linker Version 14.15.26732.1<br>Copyright (C) Microsoft Corporation.  All rights reserved.</p><p>/out:hello.exe<br>hello-world.obj</p></blockquote><h2 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h2><p>成功编译后在命令行界面执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello</span><br></pre></td></tr></table></figure><p>程序顺利执行，通过echo命令获取main函数的返回值(0)。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo %ERRORLEVEL%</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建个人博客注意事项记录</title>
      <link href="/2019/03/20/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%E8%AE%B0%E5%BD%95/"/>
      <url>/2019/03/20/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="如何插入图片？"><a href="#如何插入图片？" class="headerlink" title="如何插入图片？"></a>如何插入图片？</h1><p>安装<a href="https://github.com/dangxuandev/hexo-asset-image" target="_blank" rel="noopener">hexo-asset-image插件</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>确保Hexo博客总目录下的<code>_config.yml</code>中的<code>post_asset_folder</code>的值为true（默认是false）。</p><p>然后在要插入图片的文章的目录下新建一个同名文件夹，并在其中放入要插入的图片，例子：</p><p>MacGesture2-Publish<br>├── apppicker.jpg<br>├── logo.jpg<br>└── rules.jpg<br>MacGesture2-Publish.md</p><p>直接用语句<code>![logo](logo.jpg)</code>插入图片<code>logo.jpg</code>。</p><p>—2020-01-10 更新—</p><h1 id="邮件链接格式"><a href="#邮件链接格式" class="headerlink" title="邮件链接格式"></a>邮件链接格式</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mailto:xxx@xxx.com</span><br></pre></td></tr></table></figure><p>—2020-01-14 更新—</p><h1 id="md文件名如果包含特殊字符，需要转义"><a href="#md文件名如果包含特殊字符，需要转义" class="headerlink" title=".md文件名如果包含特殊字符，需要转义"></a>.md文件名如果包含特殊字符，需要转义</h1><p>例如，文件名“C#入坑与VS的使用.md”需要改成“C%23入坑与VS的使用.md”。否则点击文章标题进入页面时，发送一个get请求，参数包含“#”，结果无法成功进入文章页面。</p><p>原理：将特殊的字符转换成ASCII码，格式为：%加字符的ASCII码，即一个百分号%，后面跟对应字符的ASCII（16进制）码值。例如 空格的编码值是”%20”。</p><p>URL特殊符号及对应的十六进制值编码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">+   URL中+号表示空格 %2B   </span><br><span class="line">空格    URL中的空格可以用+号或者编码 %20   </span><br><span class="line">&#x2F;   分隔目录和子目录 %2F    </span><br><span class="line">?   分隔实际的 URL 和参数 %3F    </span><br><span class="line">%   指定特殊字符 %25    </span><br><span class="line">#   表示书签 %23    </span><br><span class="line">&amp;   URL中指定的参数间的分隔符 %26    </span><br><span class="line">&#x3D;   URL中指定参数的值 %3D</span><br></pre></td></tr></table></figure><p>参考链接：<a href="https://segmentfault.com/a/1190000010854567" target="_blank" rel="noopener">https://segmentfault.com/a/1190000010854567</a></p><p>尽管这样做可以解决跳转的问题，但文章中的所有图片依旧无法显示，因此给md文件和存图片的文件夹取名应尽力避免夹带特殊符号。</p><h1 id="tags包含特殊字符“-”需要转义"><a href="#tags包含特殊字符“-”需要转义" class="headerlink" title="tags包含特殊字符“#”需要转义"></a>tags包含特殊字符“#”需要转义</h1><p>例如，以“C#”为一个标签名，则应写成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tags: C&amp;#35;</span><br></pre></td></tr></table></figure><p>原理：对特殊符号进行转义，用对应的HTML字符实体进行替换</p><p>各种常用特殊字符对应的HTML字符实体：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">! &amp;#33; — 惊叹号 Exclamation mark</span><br><span class="line">&quot; &amp;#34; &quot; — 双引号 Quotation mark</span><br><span class="line"># &amp;#35; — 数字标志 Number sign</span><br><span class="line">$ &amp;#36; — 美元标志 Dollar sign</span><br><span class="line">% &amp;#37; — 百分号 Percent sign</span><br><span class="line">&amp; &amp;#38; &amp; — 与符号(&amp;) Ampersand</span><br><span class="line">&#39; &#39; — 单引号 Apostrophe</span><br><span class="line">( &amp;#40; — 小括号左边部分 Left parenthesis</span><br><span class="line">) &amp;#41; — 小括号右边部分 Right parenthesis</span><br><span class="line">* &amp;#42; — 星号 Asterisk</span><br><span class="line">+ &amp;#43; — 加号 Plus sign</span><br><span class="line">&lt; &amp;#60; &lt; 小于号 Less than</span><br><span class="line">&#x3D; &amp;#61; — 等于符号 Equals sign</span><br><span class="line">- &amp;#45; &amp;minus; — 减号</span><br><span class="line">&gt; &amp;#62; &gt; — 大于号 Greater than</span><br><span class="line">? &amp;#63; — 问号 Question mark</span><br><span class="line">@ &amp;#64; — Commercial at</span><br><span class="line">[ &amp;#91; — 中括号左边部分 Left square bracket</span><br><span class="line">\ &amp;#92; — 反斜杠 Reverse solidus (backslash)</span><br><span class="line">] &amp;#93; — 中括号右边部分 Right square bracket</span><br><span class="line">&#123; &amp;#123; — 大括号左边部分 Left curly brace</span><br><span class="line">| &amp;#124; — 竖线Vertical bar</span><br><span class="line">&#125; &amp;#125; — 大括号右边部分 Right curly brace</span><br><span class="line">空格 &amp;nbsp;</span><br></pre></td></tr></table></figure><p>参考链接：<a href="https://segmentfault.com/a/1190000020528571?utm_source=tag-newest" target="_blank" rel="noopener">https://segmentfault.com/a/1190000020528571?utm_source=tag-newest</a></p>]]></content>
      
      
      <categories>
          
          <category> 搭建博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模块调用</title>
      <link href="/2019/03/20/%E6%A8%A1%E5%9D%97%E8%B0%83%E7%94%A8/"/>
      <url>/2019/03/20/%E6%A8%A1%E5%9D%97%E8%B0%83%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>模块调用例子</p><a id="more"></a><p>login.py：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> getpass</span><br><span class="line"></span><br><span class="line">_username = <span class="string">"Mingjun Wei"</span></span><br><span class="line">_password = <span class="number">123456</span></span><br><span class="line"></span><br><span class="line">count = <span class="number">3</span></span><br><span class="line"><span class="keyword">while</span>(count):</span><br><span class="line">    usrname = input(<span class="string">"Please enter your username :"</span>)</span><br><span class="line">    pwd = int(getpass.getpass(<span class="string">"password:"</span>))</span><br><span class="line">    <span class="keyword">if</span> _username == usrname <span class="keyword">and</span> _password ==pwd :</span><br><span class="line">        print(<span class="string">"Welcome home, &#123;0&#125; !"</span>.format(usrname))</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"invalid username or password!"</span>)</span><br><span class="line">        count -= <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> count == <span class="number">0</span>:</span><br><span class="line">    msg=<span class="string">'''</span></span><br><span class="line"><span class="string">You have try 3 times.</span></span><br><span class="line"><span class="string">Please run the program again.</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">    print(msg)</span><br></pre></td></tr></table></figure><p>MyLoginDemo.py:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> login</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">调用login模块时，先在当前目录查找login模块，找不到再去第三方库目录查找。</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><p>MyLoginDemo.py运行后和单独运行login.py效果相同。</p><p>调用login.py后当前目录出现_pycache_文件夹，文件夹里产生一个login.cpython-36.pyc文件</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>需要注意的基本运算&amp;操作</title>
      <link href="/2019/03/20/%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%BF%90%E7%AE%97-%E6%93%8D%E4%BD%9C/"/>
      <url>/2019/03/20/%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%BF%90%E7%AE%97-%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>还记得幂运算怎么写吗？什么是三元运算符？</p><a id="more"></a><h1 id="幂运算："><a href="#幂运算：" class="headerlink" title="幂运算："></a>幂运算：</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="number">2</span>**<span class="number">4</span></span><br><span class="line"><span class="number">16</span></span><br><span class="line">&gt;&gt;&gt;<span class="number">2</span>**<span class="number">10</span></span><br><span class="line"><span class="number">1024</span></span><br></pre></td></tr></table></figure><h1 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h1><p>格式：</p><p>result = <strong>值1</strong> <font color="red">if</font> <strong>条件</strong> <font color="red">else</font> <strong>值2</strong><br>如果条件为<strong>真</strong> -&gt; result = <strong>值1</strong><br>如果条件为<strong>假</strong> -&gt; result = <strong>值2</strong></p><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a =<span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b =<span class="number">6</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c =<span class="number">7</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = a <span class="keyword">if</span> b&gt;c <span class="keyword">else</span> <span class="number">8</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d</span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = a <span class="keyword">if</span> b&lt;c <span class="keyword">else</span> <span class="number">8</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d</span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 3的byte和string</title>
      <link href="/2019/03/20/Python-3%E7%9A%84byte%E5%92%8Cstring/"/>
      <url>/2019/03/20/Python-3%E7%9A%84byte%E5%92%8Cstring/</url>
      
        <content type="html"><![CDATA[<p>Python 3最大的新特性是对文本和二进制数据作了更为清晰的区分。文本总是Unicode,由string类型表示，二进制数据则由byte类型表示。Python 3不会以任意隐式方式混用string和byte。</p><a id="more"></a><p>字符串可以通过<strong>编码(encode)</strong>转成一串字节，一串字节通过<strong>解码(decode)</strong>转成字符串</p><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">msg=<span class="string">"华南理工大学"</span></span><br><span class="line">encodeResult = msg.encode(encoding=<span class="string">'utf-8'</span>)</span><br><span class="line"><span class="comment">#python 3.x 默认编码器按utf-8编码</span></span><br><span class="line">decodeResult = encodeResult.decode(encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">print(<span class="string">"msg:"</span>,msg)</span><br><span class="line">print(<span class="string">"encode:"</span>,encodeResult)</span><br><span class="line">print(<span class="string">"type of encodeResult: "</span>,type(encodeResult))</span><br><span class="line">print(<span class="string">"decode:"</span>,decodeResult)</span><br><span class="line">print(<span class="string">"type of decodeResult: "</span>,type(decodeResult))</span><br></pre></td></tr></table></figure><p>运行后：</p><blockquote><p>msg: 华南理工大学<br>encode: b’\xe5\x8d\x8e\xe5\x8d\x97\xe7\x90\x86\xe5\xb7\xa5\xe5\xa4\xa7\xe5\xad\xa6’<br>type of encodeResult:  &lt;class ‘bytes’&gt;<br>decode: 华南理工大学<br>type of decodeResult:  &lt;class ‘str’&gt;</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sys模块和os模块</title>
      <link href="/2019/03/20/sys%E6%A8%A1%E5%9D%97%E5%92%8Cos%E6%A8%A1%E5%9D%97/"/>
      <url>/2019/03/20/sys%E6%A8%A1%E5%9D%97%E5%92%8Cos%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<p>初识sys模块和os模块</p><a id="more"></a><h1 id="sys模块"><a href="#sys模块" class="headerlink" title="sys模块"></a>sys模块</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">先到当前目录下找sys模块，因此py文件起名最好不要和标准库名相同</span></span><br><span class="line"><span class="string">sys.path返回sys模块的所有目录</span></span><br><span class="line"><span class="string">(以Python3.6为例)Python的第三方库一般保存在Python36/Lib/site-packages下，</span></span><br><span class="line"><span class="string">标准库一般存放在Python36/Lib下</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">print(sys.path)<span class="comment">#打印环境变量</span></span><br><span class="line">print(sys.argv)</span><br><span class="line"><span class="comment">#在pycharm中运行打印sys_mod.py的绝对路径</span></span><br><span class="line"><span class="comment">#在命令提示符窗口中运行打印sys_mod.py的相对路径</span></span><br><span class="line">print(sys.argv[<span class="number">2</span>])</span><br><span class="line"><span class="comment">#在命令提示符窗口中运行打印sys_mod.py的相对路径以及第2个参数</span></span><br></pre></td></tr></table></figure><h1 id="os模块"><a href="#os模块" class="headerlink" title="os模块"></a>os模块</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">cmd_res = os.system(<span class="string">"dir"</span>) <span class="comment">#执行命令，不保存结果</span></span><br><span class="line">print(<span class="string">"---&gt;"</span>,cmd_res)</span><br></pre></td></tr></table></figure><p>运行后<br><img src="/2019/03/20/sys%E6%A8%A1%E5%9D%97%E5%92%8Cos%E6%A8%A1%E5%9D%97/result_1.png" alt="result_1"></p><p>左下角的代表os.system(“dir”)执行成功返回的状态码，“0”表示成功，非“0”表示失败。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">cmd_res = os.popen(<span class="string">"dir"</span>).read()</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">为什么加read()?</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">因为执行完os.popen("dir")后，结果存在内存的一个临时区域，</span></span><br><span class="line"><span class="string">需要用read()方法把结果取出来。</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">print(<span class="string">"---&gt;"</span>,cmd_res)</span><br></pre></td></tr></table></figure><p>运行后</p><p><img src="/2019/03/20/sys%E6%A8%A1%E5%9D%97%E5%92%8Cos%E6%A8%A1%E5%9D%97/result_2.png" alt="result_2"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.mkdir(<span class="string">"new_dir"</span>)<span class="comment">#在当前目录创建一个文件夹</span></span><br></pre></td></tr></table></figure><p>运行后</p><p><img src="/2019/03/20/sys%E6%A8%A1%E5%9D%97%E5%92%8Cos%E6%A8%A1%E5%9D%97/result_3.png" alt="result_3"></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码注释 &amp; 终端输入 &amp; if_else</title>
      <link href="/2019/03/19/%E4%BB%A3%E7%A0%81%E6%B3%A8%E9%87%8A-%E7%BB%88%E7%AB%AF%E8%BE%93%E5%85%A5/"/>
      <url>/2019/03/19/%E4%BB%A3%E7%A0%81%E6%B3%A8%E9%87%8A-%E7%BB%88%E7%AB%AF%E8%BE%93%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p>Python代码注释及其应用</p><a id="more"></a><h3 id="当前行注释："><a href="#当前行注释：" class="headerlink" title="当前行注释："></a>当前行注释：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># print("hahaha");</span></span><br></pre></td></tr></table></figure><h3 id="多行注释："><a href="#多行注释：" class="headerlink" title="多行注释："></a>多行注释：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">name = "maxwell";</span></span><br><span class="line"><span class="string">print("maxwell");</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">或</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">name = "maxwell";</span></span><br><span class="line"><span class="string">print("maxwell");</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><h3 id="终端输入例子"><a href="#终端输入例子" class="headerlink" title="终端输入例子:"></a>终端输入例子:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">name = input(<span class="string">"username："</span>)</span><br><span class="line">password = input(<span class="string">"password:"</span>)</span><br><span class="line">age = int(input(<span class="string">"age:"</span>))</span><br><span class="line">job = input(<span class="string">"job:"</span>)</span><br><span class="line">salary = float(input(<span class="string">"salary:"</span>))</span><br></pre></td></tr></table></figure><p><font color="red">input()函数返回结果属于<strong>字符串</strong>类型！</font></p><p><strong>补充：</strong></p><ol><li>Python 3.x里的input()函数功能与Python 2.x里的raw_input()功能相同</li><li>Python 2.x里的input()需要传入的是<strong>变量</strong></li></ol><h3 id="打印动态多行注释："><a href="#打印动态多行注释：" class="headerlink" title="打印动态多行注释："></a>打印动态多行注释：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">info=<span class="string">'''---------- info of %s -----------</span></span><br><span class="line"><span class="string">Name: %s</span></span><br><span class="line"><span class="string">Age: %d</span></span><br><span class="line"><span class="string">Job: %s</span></span><br><span class="line"><span class="string">Salary: %f</span></span><br><span class="line"><span class="string">'''</span> % (name,name,age,job,salary) <span class="comment">#记得加括号！</span></span><br><span class="line"><span class="comment">#print(type(age),type(salary))</span></span><br><span class="line">print(info)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">info2 = <span class="string">'''---------- info2 of &#123;_name&#125; -----------</span></span><br><span class="line"><span class="string">Name: &#123;_name&#125;</span></span><br><span class="line"><span class="string">Age: &#123;_age&#125;</span></span><br><span class="line"><span class="string">Job: &#123;_job&#125;</span></span><br><span class="line"><span class="string">Salary: &#123;_salary&#125;</span></span><br><span class="line"><span class="string">'''</span>.format(_name=name,</span><br><span class="line">           _age=age,</span><br><span class="line">           _job=job,</span><br><span class="line">           _salary=salary)</span><br><span class="line">print(info2)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">info3 = <span class="string">'''---------- info3 of &#123;0&#125; -----------</span></span><br><span class="line"><span class="string">Name: &#123;0&#125;</span></span><br><span class="line"><span class="string">Age: &#123;1&#125;</span></span><br><span class="line"><span class="string">Job: &#123;2&#125;</span></span><br><span class="line"><span class="string">Salary: &#123;3&#125;</span></span><br><span class="line"><span class="string">'''</span>.format(name,age,job,salary)</span><br><span class="line">print(info3)</span><br></pre></td></tr></table></figure><p><font color="red"><strong>不到万不得已，不要用“+”拼接字符串，效率很低。</strong></font></p><h3 id="密码输入："><a href="#密码输入：" class="headerlink" title="密码输入："></a>密码输入：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> getpass</span><br><span class="line"><span class="comment">#getpass模块可实现暗文输入密码功能</span></span><br><span class="line"></span><br><span class="line">name = input(<span class="string">"usename:"</span>)</span><br><span class="line">password = getpass.getpass(<span class="string">"password:"</span>)</span><br><span class="line"><span class="comment">#pycharm下运行会卡在此句，建议在命令提示符窗口运行此脚本</span></span><br><span class="line"><span class="comment">#getpass.getpass()返回的变量类型是字符串</span></span><br><span class="line"></span><br><span class="line">info = <span class="string">'''</span></span><br><span class="line"><span class="string">----- info -------</span></span><br><span class="line"><span class="string">username: %s</span></span><br><span class="line"><span class="string">password: %s</span></span><br><span class="line"><span class="string">'''</span>% (name,password)<span class="comment">#记得加括号！</span></span><br><span class="line">print(info)</span><br><span class="line"></span><br><span class="line">info2 = <span class="string">'''</span></span><br><span class="line"><span class="string">----- info2 -------</span></span><br><span class="line"><span class="string">username: &#123;_name&#125;</span></span><br><span class="line"><span class="string">password: &#123;_password&#125;</span></span><br><span class="line"><span class="string">'''</span>.format(_name=name,_password=password)</span><br><span class="line">print(info2)</span><br><span class="line"></span><br><span class="line">info3 = <span class="string">'''</span></span><br><span class="line"><span class="string">----- info3 -------</span></span><br><span class="line"><span class="string">username: &#123;0&#125;</span></span><br><span class="line"><span class="string">password: &#123;1&#125;</span></span><br><span class="line"><span class="string">'''</span>.format(name,password)<span class="comment">#注意在对应变量的位置大括号</span></span><br><span class="line">print(info3)</span><br></pre></td></tr></table></figure><h3 id="if-else例子："><a href="#if-else例子：" class="headerlink" title="if_else例子："></a>if_else例子：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">_usrname = <span class="string">'Mingjun Wei'</span></span><br><span class="line">_pwd = <span class="number">123456</span>         <span class="comment">#int型变量</span></span><br><span class="line"></span><br><span class="line">usrname = input(<span class="string">"name:"</span>)</span><br><span class="line">pwd = int(input(<span class="string">"password:"</span>))<span class="comment">#注意转变量类型，input()返回字符串类型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> _usrname == usrname <span class="keyword">and</span> _pwd == pwd:</span><br><span class="line">    print(<span class="string">"Welcome &#123;usrname&#125; login ..."</span>.format(usrname=_usrname))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"invalid username or password!"</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 3相比Python 2的变化</title>
      <link href="/2019/03/19/Python3%E7%9B%B8%E6%AF%94Python2%E7%9A%84%E5%8F%98%E5%8C%96/"/>
      <url>/2019/03/19/Python3%E7%9B%B8%E6%AF%94Python2%E7%9A%84%E5%8F%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p>主要是编码方面的变化</p><a id="more"></a><h3 id="编码方面"><a href="#编码方面" class="headerlink" title="编码方面"></a>编码方面</h3><p><strong>Python 3</strong>默认按<strong>UTF-8</strong>处理，支持中文字符；<br><strong>Python 2</strong>默认按<strong>ASCII</strong>处理，不支持中文字符。</p><p>在Python 2中如需使用中文字符，比须首行声明字符集如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python编写规范</title>
      <link href="/2019/03/19/Python%E7%BC%96%E5%86%99%E8%A7%84%E8%8C%83/"/>
      <url>/2019/03/19/Python%E7%BC%96%E5%86%99%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<p>Python中变量的定义规则、定义规范以及其他注意事项。</p><a id="more"></a><h1 id="一、变量定义"><a href="#一、变量定义" class="headerlink" title="一、变量定义"></a>一、变量定义</h1><h2 id="规则："><a href="#规则：" class="headerlink" title="规则："></a>规则：</h2><ol><li>变量名只能是<strong>字母</strong>、<strong>下划线</strong>、<strong>数字</strong>的任意组合；</li><li>变量名的<strong>第一个字符不能是数字</strong>；</li><li>变量名不能和关键字重名。</li></ol><h2 id="规范："><a href="#规范：" class="headerlink" title="规范："></a>规范：</h2><ol><li>起变量名要<strong>见名知意</strong>；</li><li><strong>驼峰</strong>形式命名；</li><li>变量名字母要小写，<strong>常量</strong>名子母要<strong>大写</strong>。</li></ol><p><strong>在shell中赋值变量，语句中不能加空格，如：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">"Mingjun Wei"</span>（√）</span><br><span class="line">name = <span class="string">"Mingjun Wei"</span>（×）</span><br></pre></td></tr></table></figure><h1 id="二、不是同级的语句要顶格写"><a href="#二、不是同级的语句要顶格写" class="headerlink" title="二、不是同级的语句要顶格写"></a>二、不是同级的语句要顶格写</h1><p>错误示范：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">_usrname = <span class="string">'Mingjun Wei'</span></span><br><span class="line">_pwd = <span class="number">123456</span></span><br><span class="line"></span><br><span class="line">usrname = input(<span class="string">"name:"</span>)</span><br><span class="line">pwd = int(input(<span class="string">"password:"</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> _usrname == usrname <span class="keyword">and</span> _pwd == pwd:</span><br><span class="line">    print(<span class="string">"Welcome &#123;usrname&#125; login ..."</span>.format(usrname=_usrname))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"invalid username or password!"</span>)</span><br><span class="line"></span><br><span class="line"> print(<span class="string">"sssss"</span>)<span class="comment">#此句前边要么和if语句同级顶格，要么</span></span><br><span class="line"><span class="comment">#和print("invalid username or password!")同级缩进(4个空格),</span></span><br><span class="line"><span class="comment">#前边不能留一个空格，否则会报错。</span></span><br></pre></td></tr></table></figure><p><font color="red">编写前一定要画流程图。</font></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设置您的PyCharm</title>
      <link href="/2019/03/19/%E8%AE%BE%E7%BD%AE%E6%82%A8%E7%9A%84PyCharm/"/>
      <url>/2019/03/19/%E8%AE%BE%E7%BD%AE%E6%82%A8%E7%9A%84PyCharm/</url>
      
        <content type="html"><![CDATA[<p>使用PyCharm时常用的设置事项。</p><a id="more"></a><h3 id="一、改变pycharm-terminal的字体"><a href="#一、改变pycharm-terminal的字体" class="headerlink" title="一、改变pycharm terminal的字体"></a>一、改变pycharm terminal的字体</h3><p>file-&gt;settings-&gt;Editor-&gt;General-&gt;Console里面的console commands history size</p><h3 id="二、通过默认模板新建文件"><a href="#二、通过默认模板新建文件" class="headerlink" title="二、通过默认模板新建文件:"></a>二、通过默认模板新建文件:</h3><p>File-&gt;settings-&gt;Editor-&gt;File and Code Templates-&gt;Python Script</p><h3 id="三、修改pycharm默认编码器："><a href="#三、修改pycharm默认编码器：" class="headerlink" title="三、修改pycharm默认编码器："></a>三、修改pycharm默认编码器：</h3><p>File-&gt;Setting-&gt;Editor-&gt;File Encodeings</p><p>为减少出现乱码的可能性，最好把Global Encoding、Project Encoding、Default encoding for properties files全部改成UTF-8。</p><p><font color="red"><strong>注意：</strong> 刚安装pycharm后，Project Encoding、Default encoding for properties files默认是GBK。</font></p>]]></content>
      
      
      
        <tags>
            
            <tag> PyCharm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python头部“#!/usr/bin/env python” 和“#!/usr/bin/python”的区别</title>
      <link href="/2019/03/19/Python%E5%A4%B4%E9%83%A8-usr-bin-python-%E5%92%8C-usr-bin-env-%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/2019/03/19/Python%E5%A4%B4%E9%83%A8-usr-bin-python-%E5%92%8C-usr-bin-env-%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<p>大部分Python文件的第一行写着<code>#!/usr/bin/env python</code>或者<code>#!/usr/bin/python</code>，这两条语句和运行模式有关。</p><a id="more"></a><p>如果我们用普通运行模式例如（在Linux下执行命令）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python *.py</span><br></pre></td></tr></table></figure><p>那么这两条头部语句没什么卵用。但如果打算让Python程序像普通程序一样运行，例如执行命令（注：文件要有可执行权限chmod a+x *.py）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;*.py</span><br></pre></td></tr></table></figure><p>这两条头部语句就起作用了，它们用来为脚本语言指定解释器，通常认为用<code>#!/usr/bin/env python</code>要比<code>#!/usr/bin/python</code>更好，因为Python解释器有时并不安装在默认路径，比如安装在虚拟环境中。</p><p>两条语句逐一解释如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br></pre></td></tr></table></figure><p>当机器上安装了多个版本的Python时这种写法才有意义。程序运行时机器会先去取环境变量的<code>PATH</code>中指定的第一个Python来执行您的脚本。如果您配置了虚拟环境，这条头部语句可以保证脚本由您的虚拟环境python中的Python来执行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br></pre></td></tr></table></figure><p>表示写死了就是要用目录<code>/usr/bin/python</code>下的Python来执行您的脚本。这样写程序的可移植性比较差，如果此路径下的Python不存在就会报错。</p><p>因此一般情况下采用第一种写法。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown小技巧（一）</title>
      <link href="/2019/02/13/Markdown%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
      <url>/2019/02/13/Markdown%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<p>在Cmd Markdown编辑器中把一个引用块分成俩</p><a id="more"></a><p>我在使用<u>作业部落</u>出品<u>CmdMarkdown编辑器</u>编写.md文件时遇到的问题：</p><p>我希望连续出现两个引用块，而两个引用块中间隔着一个空行，两个引用快还是连在一起的。查阅网上的帖子后发现解决方法：</p><p>两个引用块之间需要间隔两个空行，其中第二个空行行首必须打出一个全角空格。</p><p>例子：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; ＂I used to be an adventurer like you, then I took an arrow in the knee.＂</span></span><br><span class="line"></span><br><span class="line">（全角空格）</span><br><span class="line"><span class="quote">&gt; ＂Never should you come here.＂</span></span><br></pre></td></tr></table></figure><p>效果：</p><blockquote><p>I used to be an adventurer like you, then I took an arrow in the knee.</p></blockquote><blockquote><p>Never should you come here.</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown小技巧（一）</title>
      <link href="/2019/02/13/Markdown%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2019/02/13/Markdown%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>我在使用<u>作业部落</u>出品<u>CmdMarkdown编辑器</u>编写.md文件时遇到的问题：</p><p>我希望连续出现两个引用块，而两个引用块中间隔着一个空行，两个引用快还是连在一起的。查阅网上的帖子后发现解决方法：</p><p>两个引用块之间需要间隔两个空行，其中第二个空行行首必须打出一个全角空格。</p><p>例子：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; ＂I used to be an adventurer like you, then I took an arrow in the knee.＂</span></span><br><span class="line"></span><br><span class="line">（全角空格）</span><br><span class="line"><span class="quote">&gt; ＂Never should you come here.＂</span></span><br></pre></td></tr></table></figure><p>效果：</p><blockquote><p>I used to be an adventurer like you, then I took an arrow in the knee.</p></blockquote><blockquote><p>Never should you come here.</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
